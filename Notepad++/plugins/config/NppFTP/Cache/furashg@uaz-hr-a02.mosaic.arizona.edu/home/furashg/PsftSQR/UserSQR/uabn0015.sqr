!******************************************************************************
! uabn0015.sqr- Arizona Department of Administration Health Interface (Outbound)
!******************************************************************************
!
!
!******************************************************************************
! Description:
! ------------
! This interface creates 4 data files containing demographic data and health
! benefit (medical, dental and vision) enrollment data for employees and their
! dependents from PeopleSoft HCM.  The files are sent to the Arizona Department
! Of Administration to keep the ADOA HR database in sync with the UofA HR
! database.
!
! This interface will run on an automated schedule (every weekday) but may also
! be run manually.  When run on an automated schedule, the program will generate
! a changes only file.  When run manually, users will have the option of generating
! a full file or a changes-only file. The output data files will be transmitted to
! ADOA via FTP with PGP encryption.
!
!******************************************************************************
!
! PROCESSING OVERVIEW  :
!			 1.    Initialization
!			 	A.    Prompt-Parameters
!			 	B.    Open-Output-Files
!				C.    Write Header Rows
!			 2.    Delete-Today-Records
!                        3.    Initialize-Include-Flags
!			 4.    Process-Main
!                        5.    Update-Include-Flags
!			 6.    Select-Output-Records
!			 	A.    Write-xxx-Record
!				B.    Write-xxx-Report
!                        7.    Insert-Into-ADOA-HST
!			 8.    TerminateProgram
!
! CLIENT NAME          : UofA
! CHANGE REQUEST NBR   : UA_BN_0015
!
! PROGRAM NAME         : uabn0015.SQR
! PROGRAM TITLE        : Arizona Department of Administration Health Interface (Outbound)
! FREQUENCY            : Scheduled - daily
!                        Manual - annually
!
! EXECUTION METHOD     : PeopleSoft Application
!
! PREREQUISITE PROCESS : None
! DEPENDENT PROCESSES  : None
! RERUN REQUIREMENTS   : None
! RESTART REQUIREMENTS : None
!
! PROCESSING PARAMETERS: $Process_Dt
!                        $AsOfDate
!                        $RUN_TYPE - ‘F’ Full File
!				     'C' Changes Only
!
! INPUT FLAT FILES     : None
!
!           TABLES     : PS_COUNTRY_TBL
!                        PS_DEP_BEN_NAME
!                        PS_DEP_BEN
!                        PS_DEP_BEN_EFF
!                        PS_DEP_BEN_ADDR
!                        PS_DEPT_TBL
!                        PS_EMPLOYMENT
!                        PS_HEALTH_DEPENDNT
!                        PS_PERS_DATA_EFFDT
!                        PS_PERS_NID
!                        PS_PERSON
!                        PS_ADDRESSES
!                        PS_PERSON_NAME
!
!       OUTPUT PATH    :
!
! OUTPUT FLAT FILES    : UA-AZ141.txt – Employee Demographic Changes
!                        UA-HR513.txt – Dependent Demographic Changes
!                        UA-XB531.txt – Employee Benefit Election Changes
!                        UA-XB532.txt – Dependent Benefit Election Changes
!
!            TABLES    : PS_UA_ADOA_HI_HST
!                        PS_UA_ADOA_EMPHST
!                        PS_UA_ADOA_DEPHST
!                        PS_UA_ADOA_EMPHST
!
!           REPORTS    :
!
!
!   NAVIGATION PATH    :
!
! SPEC BY              : Ron Watson, The Burgundy Group, Inc.
! PROGRAMMER           : Ron Watson, The Burgundy Group, Inc.
! CREATION DATE        : 05/17/2009
! PROGRAMMER(MOD.)     :
!
!
!******************************************************************************
! Modification History:
!
! Date        Release      Programmer\Description
! ----------  ----------   --------------------------------------------------------
! 05/17/2009  PS 9.0       Ron Watson - Progam creation
! 10/02/2009  PS 9.0	   Scott Watson - Added logic to set alter_emplid for
!				        employees that do not have a value set.
!				        ALTER_EMPLID must be sent to ADOA.
! 10/15/2009  PS 9.0       Ron Watson - Added check for basic life to main select
!                                       to include employees with life but no medical coverage
! 10/30/2009  PS 9.0       Ron Watson - Added first and last name to csv error file
!                                       and ordered by last name.  Also stored the errors in
!                                       a new ps_ua_adoa_hi_err table.
! 11/19/2009  PS 9.0       Ron Watson - Added severity level and resend count to warnings
! 12/09/2009  PS 9.0       Ron Watson - Removed ps_addresses from main select and added
!                                       get-address procedure
! 01/12/2010  PS 9.0       Ron Watson - Removed error type from csv error file
! 02/26/2010  PS 9.0       Ron Watson - Added fix for resend of 'N'ew employee records
! 02/26/2010  PS 9.0	   Scott Watson - Modified alter_emplid logic to make sure
!				        new alter_emplid has 4th & 5th digits = '00'
! 01/28/2010  PS 9.0       Ron Watson - Added upper() function to dependent name suffix
!                                       Added logic to determine the ADOA codes asof the
!                                       last OE date instead of PS coverage begin date
!                                       STD's other than STDSTA are now sent as Waives
!                                       Added logic to send basic life terminations
!                                       Added check for change in vendor effective date
!                                       Added name_suffix to compare-dep-record
! 04/29/2010  PS 9.0       Ron Watson - Added fix for dependents added to family coverage
!                                       Modified SELECT-DEPENDENTS to require enrollment
!                                       in a health plan before sending to ADOA
!                                       Removed verify-empben-record, ADOA says it's not needed
!                                       Don't send Terms to ADOA if the coverage begin date
!                                       is prior to the last OE date
!                                       Send 'T'erm EFFDT minus one day instead of coverage begin date
!                                       Don't warn of FTE < .5 unless enrolled in benefits
!                                       Require a date in the ADOA inbound file before confirming waives
!                                       Set ua_coverage_opt to ' ' for basic life
!                                       !Added PGP of output files - this will be moved in a later migration
! 08/10/2010  PS 9.0       Ron Watson   OE date changed to January 1st, starting in 2011 - HCM-1237
! 09/20/2010  PS 9.0       Ron Watson   Removed check for dependent's dep_benef_type in ('D','O') - HCM-1343
!                                       Updated $vendor_effdt logic to verify vendor has really changed
!                                       Enabled PGP of output files                               - HCM-613
!                                       Send a blank smoker flag when supp life is changing       - HCM-1135
! 10/15/2010  PS 9.0       Ron Watson   Added check for valid relationship in select from ps_dep_ben_eff - HCM-1343
!                                       Added 'XN' relationship for 'DOM PARTNR'
! 10/18/2010  PS 9.0       Ron Watson   Modified Update-BENHST-Confirmation-Flag-Dep procedure to use the 
!                                       effdt instead of coverage_begin_dt to confirm dependent enrollment - HCM-840.
! 10/19/2010  PS 9.0       Ron Watson   Added changes for 1/1/2011 Open Enrollment
!                                       Removed automatic resend of active benefits on OE date
!                                       Corrected resend of unconfirmed 'N'ew emp records 
!                                       Changed filenames from UAxxx to UOAxxx - HRP-15
! 01/10/2011  PS 9.0       Ron Watson   Added comparison of ABBR to AZ141 file
!                                       Added plan_year to allow OE runs and daily runs on the same process_dt 
!                                       Send non-ADOA health benefits as Waives - HCM-1679
! 03/03/2011  PS 9.0       Ron Watson   Don't send dependent Waive records when the EE is electing a non-ADOA plan
!                                       Added STDST9 plan in addition to STDSTA - HCM-1979
! 07/19/2011  PS 9.0       Ron Watson   Don't send Term records until the benefits coverage end date 
!                                       Prevent the $asofdate from being earlier than a previous $asofdate. - HCM-2569
! 09/26/2011  PS 9.0       Ron Watson   Suppress dependent relationship error unless the dependent is currently enrolled - HCM-3236
! 11/17/2011  PS 9.0       Scott Watson Corrected bug in ALTER_EMPLID assignment where value > 180009999 could not be selected.
! 12/07/2011  PS 9.0       Ron Watson   Don't resend future dated benefit records until their coverage begin date and add SSN edits - HCM-3586
! 08/01/2012  PS 9.0       Matt Shimel  Added logic to send '*BLANK' in 141 file if Address2 changes from populated to blank - HCM-4285
! 11/13/2012  PS 9.0       Matt Shimel  Re-enabled automatic resend of active benefits on OE date.
!                                       Corrected $Process_Dt minus 30 days logic in Delete-Unconfirmed procedure.
!                                       Added logic to send stop(s) for dependent(s) if employee coverage is waived.  - HCM-4669
! 02/04/2013  PS 9.0       Matt Shimel  Added logic to Compare-DepBen-Record to set the correct $Effdt - HCM-2860
!                                       if new dependent is being added to existing family coverage.
! 03/01/2013  PS 9.0       Matt Shimel  Modified resend logic to effdt + 2 days and fixed incorrect    - HCM-4804
!                                       table names in sub-queries in update statements in Delete-Unconfirmed procedure
! 03/04/2013  PS 9.0       Matt Shimel  Added warning to CSV error file if employee or dependent SSN   - HCM-5019
!                                       = 999999999
! 03/27/2013  PS 9.0       Matt Shimel  Modified Compare-Emp-Record to allow salary changes to be sent - HCM-5148
! 10/23/2013  PS 9.0       Matt Shimel  Added UA_ADOA_OVRRD field logic to handle ADOA resend issues. - HCM-4999
!******************************************************************************
!   Setup Section
!******************************************************************************
#include 'setenv.sqc'      !Set Environment
#include 'setup32.sqc'     !Printer and page-size initialization

!**************************
! INITIALIZE PRINT COLUMNS
!**************************
#DEFINE 141_COL1       1       !$EMPLID
#DEFINE 141_COL2      15       !$ALTER_EMPLID
#DEFINE 141_COL3      30       !$ACTION_CODE
#DEFINE 141_COL4      50       !$DEMOGRAPHIC_CHANGE_FLAG
#DEFINE 141_COL5      68       !$LAST_NAME
#DEFINE 141_COL6      88       !$FIRST_NAME
#DEFINE 141_COL7     103       !$MIDDLE_INITIAL
#DEFINE 141_COL8      30       !$ADDRESS1
#DEFINE 141_COL9      68       !$ADDRESS2
#DEFINE 141_COL10     30       !$CITY
#DEFINE 141_COL11     53       !$STATE
#DEFINE 141_COL12     68       !$POSTAL
#DEFINE 141_COL13     77       !$ZIP4
#DEFINE 141_COL14     88       !$SEX
#DEFINE 141_COL15    103       !$MAR_STATUS
#DEFINE 141_COL16    123       !$BIRTHDATE_OUT
#DEFINE 141_COL17    138       !$JOB_EFFDT_OUT
#DEFINE 141_COL18    151       !$ADDRESS_CHANGE_FLAG
#DEFINE 141_COL19    161       !$NAME_CHANGE_FLAG

#DEFINE 531_COL1       1       !$EMPLID
#DEFINE 531_COL2      15       !$ALTER_EMPLID
#DEFINE 531_COL3      30       !$ACTION_CODE
#DEFINE 531_COL4      40       !$PLAN_TYPE
#DEFINE 531_COL5      55       !$UA_INTF_PLAN_TYPE
#DEFINE 531_COL6      75       !$UA_INTF_PLAN_CODE
#DEFINE 531_COL7      95       !$UA_COVERAGE_OPT
#DEFINE 531_COL8     123       !$AMOUNT
#DEFINE 531_COL9     138       !$START_DATE_OUT
#DEFINE 531_COL10    163       !$STOP_DATE_OUT

#DEFINE 513_COL1       1       !$EMPLID
#DEFINE 513_COL2      15       !$ALTER_EMPLID
#DEFINE 513_COL3      30       !$UA_DEPENDENT_NBR
#DEFINE 513_COL4      41       !$ACTION_CODE
#DEFINE 513_COL5      49       !$LAST_NAME
#DEFINE 513_COL6      65       !$FIRST_NAME
#DEFINE 513_COL7      81       !$MIDDLE_INITIAL
#DEFINE 513_COL8      89       !$UA_RELATIONSHIP
#DEFINE 513_COL9      99       !$UA_DEPENDENT_TYPE
#DEFINE 513_COL10    105       !$BIRTHDATE_OUT
#DEFINE 513_COL11    117       !$SEX
#DEFINE 513_COL12    122       !$SMOKER
#DEFINE 513_COL13    130       !$STUDENT
#DEFINE 513_COL14    139       !$DISABLED
#DEFINE 513_COL15    149       !$COVERAGE_BEGIN_DT_OUT
#DEFINE 513_COL16    161       !$NAME_SUFFIX

#DEFINE 532_COL1       1	!$EMPLID
#DEFINE 532_COL2      15	!$ALTER_EMPLID
#DEFINE 532_COL3      30	!$UA_DEPENDENT_NBR
#DEFINE 532_COL4      41	!$ACTION_CODE
#DEFINE 532_COL5      51	!$PLAN_TYPE
#DEFINE 532_COL6      64	!$UA_INTF_PLAN_TYPE
#DEFINE 532_COL7      83	!$UA_INTF_PLAN_CODE
#DEFINE 532_COL8     100	!$UA_COVERAGE_OPT
#DEFINE 532_COL9     120	!$EE_START_DATE_OUT
#DEFINE 532_COL10    134	!$START_DATE_OUT
#DEFINE 532_COL11    148	!$STOP_DATE_OUT


#DEFINE LINE_LENGTH  173       !Total line width
#DEFINE max_lines     45

#DEFINE SFTP_ACCOUNT 'adoa'

begin-heading 3
  #include 'stdhdgtr.sqc'
end-heading


begin-SETUP
declare-variable

	date $Process_Dt
        date $AsOfDate
        date $Last_Process_Dt
        date $This_Process_Dt

        date $Effective_date
	date $Hire_Dt
        date $Birthdate

        date $Coverage_Begin_Dt
        date $Coverage_End_Dt
        date $Terminate_Date

	date $Employee_Medical_Begin_Dt
	date $Employee_Medical_End_Dt
	date $Employee_Dental_Begin_Dt
	date $Employee_Dental_End_Dt
	date $Employee_Vision_Begin_Dt
	date $Employee_Vision_End_Dt

	date $Minimum_Dependent_Effdt
	date $Minimum_Dep_Medical_Effdt
	date $Minimum_Dep_Dental_Effdt
	date $Minimum_Dep_Vision_Effdt

        date $Plan_Data_Effdt

        date $EFFDT
        date $Cost_Effdt
        date $ADOA_Coverage_Begin_Dt
        date $Previous_Coverage_Begin_Dt
        date $Previous_Effdt

        !date $Minimum_ADOA_Begin_Dt      !**** 04/29/2010 - WATSONR - Replaced with $Last_OE_Date

        date $Last_OE_Date                !**** 01/28/2010 - WATSONR - Added Last OE Date
        date $Vendor_Effdt                !**** 01/28/2010 - WATSONR - Added Last Vendor Effdt
        date $Resend_Date                 !**** 01/28/2010 - WATSONR - Added Resend Date

        date $Last_Pay_End_Dt             !**** 01/10/2011 - WATSONR - Added $Last_Pay_End_Dt - HCM-1679

        date $sysdate                     !**** 07/19/2011 - WATSONR - Added $sysdate - HCM-2569

        date $Last_AsOfDate               !**** 07/19/2011 - WATSONR - Added $Last_AsOfDate - HCM-2569
        date $Process_Dt_minus_30         !**** 11/29/2012 - shimel  - Added $Process_Dt_minus_30
end-declare
end-SETUP


!******************************************************************************
! Program Section
!  Controls the high-level processing of the program.
!******************************************************************************
begin-PROGRAM

   do Initialization
   do Set-Alter-Emplid		!Added SW 10/02/2009
   do Delete-Today-Records
   do Initialize-Include-Flags
   do Update-Confirmation-Flags
   do Process-Main
   do Update-Include-Flags
   do Select-Output-Records
   do Insert-Into-ADOA-HST
   do Add-Resends-To-CSV
   do Output-CSV-File		!*** 10/30/2009 - WATSONR - Added first and last name to csv file
   do Reset-ADOA-Override-Flags ! HCM-4999 - 10/23/2013 - shimel - Added call to new procedure
   do TerminateProgram

end-PROGRAM

!******************************************************************************
! Initialization
!******************************************************************************
begin-PROCEDURE Initialization

  let $adoa_pgp_key_name = 'secadm@ad.state.az.us'   !04/29/2010 - watsonr - Added pgp of output files

  let #Days_to_Resend = 2

  let $Test_Emplid = '00938513'

  !let $Minimum_ADOA_Begin_Dt = StrToDate('01-OCT-2009','DD-MON-YYYY')  !*** Ignore any ADOA begin dates prior to this date !** 04/29/2010 Replaced with $Last_OE_Date

  let #return-status = 1

  do Init-DateTime             !datetime.sqc:Init-DateTime
  do Get-Current-DateTime      !curdttim.sqc:Get-Current-DateTime
  do Init-Number               !number.sqc:Init-Number

  move 'uabn0015.sqr' to $ReportID
  move 'Arizona Department of Administration Interface (Outbound)' to $ReportTitle

  show $ReportID ' ' $ReportTitle ' started at ' $AsOfToday ' ' $AsOfNow

  do Stdapi-Init

  do Get-Database-Name

  show ''
  show 'Database Name: ' $Database_Name
  show '     Username: ' $UserName
  show '        Oprid: ' $prcs_oprid


  do Get-Last-Process-Date

  if $prcs_process_instance = ''

    do Prompt-Parameters

  else

    do Get-Output-Directory

    do Select-Parameters

    if isnull($Process_Dt)
      let $Process_Dt = StrToDate($AsOfToday,'DD-MON-YYYY')
    end-if

    if isnull($AsOfDate)
      if #UA_Day_Count > 0
        let $AsOfDate = dateadd($Process_Dt,'day',#UA_Day_Count)
      else
        let $AsOfDate = $Process_Dt
      end-if
    end-if

    if $RUN_TYPE = ''
      move 'C' to $RUN_TYPE
    end-if

  end-if


  let $sysdate = StrToDate($AsOfToday,'DD-MON-YYYY')  !** 07/19/2011 - WATSONR - Added $sysdate - HCM-2569


  !** Start - 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
  do Get-Last-Pay-End-Dt
  if isnull($Last_Pay_End_Dt)
    show ''
    show 'The ps_pay_calendar has not been updated for benefit year ' $Plan_Year '.  Program Aborting...'
    show ''
    let #prcs_run_status = #prcs_run_status_unsuccessful
    stop
  end-if

  if $AsOfDate > $Last_Pay_End_Dt
    let $AsOfDate = $Last_Pay_End_Dt
  end-if

  if $AsOfDate < $Process_Dt
    show ''
    show 'As Of Date (last pay_end_dt of benefit year) cannot be earlier than Process Date.  Program Aborting...'
    show ''
    let #prcs_run_status = #prcs_run_status_unsuccessful
    stop
  end-if
  !** End - 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679


  if $Process_Dt < $Last_Process_Dt
    show ''
    show 'Process Date cannot be earlier than last process date ' $Last_Process_Dt_display ' Program Aborting...'
    show ''
    let #prcs_run_status = #prcs_run_status_unsuccessful
    stop
  end-if

  !** Start - 07/19/2011- Ron Watson - Don't allow asofdate to be earler than previous asofdate for this year - HCM-2569

  do Get-Last-AsOfDate
  if $AsOfDate < $Last_AsOfDate
    let $AsOfDate = $Last_AsOfDate
    show 'As Of Date cannot be earlier than the previous as of date.  Changing As Of Date to ' $Last_AsOfDate_display '.'
  end-if

  !** End - 07/19/2011- Ron Watson - Don't allow asofdate to be earler than previous asofdate for this year - HCM-2569


  let $Process_Dt_Display = edit($Process_Dt,'MM/DD/YYYY')
  let $AsOfDate_Display   = edit($AsOfDate  ,'MM/DD/YYYY')

  let $Date_Display = 'Process Date: ' || $Process_Dt_Display || ' Asof Date: '||$AsOfDate_Display

  show ''
  show ''
  show '****** Processing Parameters ******'
  show ''
  show 'Processing Date: ' $Process_Dt_Display
  show ''
  show '     As Of Date: ' $AsOfDate_Display
  show ''

  if $RUN_TYPE = 'C'
    show '  A changes-only file will be generated.'
  else
    show '  A full file will be generated.'
  end-if

  show ''
  show '***********************************'


  !**** Start - 01/28/2010 - WATSONR -  Added Last OE Date

!  let $OE_Date_Year = substr($AsOfDate_Display,7,4) ! Begin - HCM-4669 - shimel - change $AsOfDate_Display to $Plan_Year
  let $OE_Date_Year = $Plan_Year

  !*** Start - 08/10/2010 - WATSONR - OE date changed to January 1st, starting in 2011 - HCM-1237
  if $AsOfDate >= strtodate('01/01/2011','MM/DD/YYYY')
    let $Last_OE_Date = StrToDate('01/01/'||$OE_Date_Year,'MM/DD/YYYY')
  else
    if $AsOfDate >= StrToDate('10/01/2010','MM/DD/YYYY')
      let $Last_OE_Date = StrToDate('10/01/2009','MM/DD/YYYY')
    else
      !*** End - 08/10/2010 - WATSONR - OE date changed to January 1st, starting in 2011 - HCM-1237

      if substr($AsOfDate_Display,1,2) < '10'
        move $OE_Date_Year to #OE_Date_Year
        subtract 1 from #OE_Date_Year
        move #OE_Date_Year to $OE_Date_Year 9999
      end-if

      let $Last_OE_Date = StrToDate('10/01/'||$OE_Date_Year,'MM/DD/YYYY')

    end-if   !*** 08/10/2010 - WATSONR - OE date changed to January 1st, starting in 2011 - HCM-1237
  end-if     !*** 08/10/2010 - WATSONR - OE date changed to January 1st, starting in 2011 - HCM-1237

  !**** End - 01/28/2010 - WATSONR -  Added Last OE Date

  let #Negative_Days_to_Resend = #Days_to_Resend * -1                     !** 09/20/2010 - WATSONR - Added Negative_Days_to_Resend - HCM-1343
  let $Resend_Date = dateadd($Process_Dt,'day',#Negative_Days_to_Resend)  !** 09/20/2010 - WATSONR - Moved from compare-emp-record, changed -2 to #Negative_Days_to_Resend - HCM-1343


  do Open-Output-Files

  do write-header-rows


end-PROCEDURE	!Initialization

!***********************************************************************
! Select-Parameters
!***********************************************************************
begin-PROCEDURE Select-Parameters

begin-SELECT

PLAN_YEAR               &SP.PLAN_YEAR      !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
PROCESS_DT		&SP.PROCESS_DT
ASOFDATE		&SP.ASOFDATE
UA_DAY_COUNT		&SP.UA_DAY_COUNT
UA_RUN_TYPE		&SP.UA_RUN_TYPE
UA_FILE_NAME		&SP.UA_FILE_NAME
UA_FILE_NAME2		&SP.UA_FILE_NAME2
UA_FILE_NAME3		&SP.UA_FILE_NAME3
UA_FILE_NAME4		&SP.UA_FILE_NAME4

  let #Plan_Year         = &SP.PLAN_YEAR   !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
  let $Process_Dt        = &SP.PROCESS_DT
  let $AsOfDate          = &SP.ASOFDATE
  let #UA_Day_Count      = &SP.UA_DAY_COUNT
  let $Run_Type          = &SP.UA_RUN_TYPE
  let $UA_File_Name      = &SP.UA_FILE_NAME
  let $UA_File_Name2     = &SP.UA_FILE_NAME2
  let $UA_File_Name3     = &SP.UA_FILE_NAME3
  let $UA_File_Name4     = &SP.UA_FILE_NAME4

  move #Plan_Year to $Plan_Year '9999'    !**  01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679

  let $Process_Dt_Display = edit($Process_Dt,'MM/DD/YYYY')
  let $AsOfDate_Display   = edit($AsOfDate,'MM/DD/YYYY')
  move #UA_Day_Count to $UA_Day_Count_Display '999'

  show ''
  show '******************** Run Control Parameters ********************'
  show ''
  show ''
  show '  Employee Demographics File Name: ' $UA_File_Name
  show '      Employee Benefits File Name: ' $UA_File_Name2
  show ' Dependent Demographics File Name: ' $UA_File_Name3
  show '     Dependent Benefits File Name: ' $UA_File_Name4
  show ''
  show ' If AsOf Date is blank use Process date plus ' $UA_Day_Count_Display ' days'
  show ''
  show '                 Benefit Year: ' $plan_year           !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
  show '                 Process Date: ' $Process_Dt_Display
  show '                   As Of Date: ' $AsOfDate_Display
  show ''
  show '                     Run Type: ' $Run_Type
  show ''
  show '****************************************************************'


FROM PS_UA_ADOAHI_RC

where OPRID       = $prcs_oprid
  and RUN_CNTL_ID = $prcs_run_cntl_id
end-select

end-PROCEDURE Select-Parameters


!***********************************************************************
! Prompt-Parameters
!***********************************************************************
begin-PROCEDURE Prompt-Parameters

  show ''
  show 'Last processing Date: ' $Last_Process_Dt_display
  show ''
  while 1
    input $Date_IN maxlen=10 'Please enter the Processing Date (MM/DD/YYYY), or hit <ENTER> to use today''s date'
    if $Date_IN <> ''
      do Validate-Date($Date_IN,$DateOK)
      if $DateOK = 'Y'
        let $Process_Dt = StrToDate($Date_IN,'MM/DD/YYYY')

        if $Process_Dt < $Last_Process_Dt
          show ''
	  show 'Process Date cannot be earlier than ' $Last_Process_Dt_display ' please re-enter...'
	  show ''
        else
          break
        end-if
      else
        show ''
	show 'Invalid Date, please re-enter...'
	show ''
      end-if

    else
      let $Process_Dt = StrToDate($AsOfToday,'DD-MON-YYYY')
      break
    end-if
  end-while

  let $Process_Dt_Display = edit($Process_Dt,'MM/DD/YYYY')

  show ''
  while 1
    input $Date_IN maxlen=10 'Please enter the As Of Date (MM/DD/YYYY), or hit <ENTER> to use today''s date'
    if $Date_IN <> ''
      do Validate-Date($Date_IN,$DateOK)
      if $DateOK = 'Y'
        let $AsOfDate = StrToDate($Date_IN,'MM/DD/YYYY')

        if $AsOfDate < $Process_Dt
          show ''
	  show 'AsOf Date cannot be earlier than ' $Process_Dt_display ' please re-enter...'
	  show ''
        else
          break
        end-if
      else
        show ''
	show 'Invalid Date, please re-enter...'
	show ''
      end-if

    else
      let $AsOfDate = StrToDate($AsOfToday,'DD-MON-YYYY')
      break
    end-if
  end-while

  show ''
  while 1
    input $RUN_TYPE maxlen=1 'Indicate File Type ''F''ull File, or ''C''hanges Only [C]'
    uppercase $RUN_TYPE

    if $RUN_TYPE = ''
      move 'C' to $RUN_TYPE
    end-if

    if $RUN_TYPE = 'F' OR
       $RUN_TYPE = 'C'
      break
    else
      show ''
      show 'Invalid entry; please enter ''F'' or ''C'''
    end-if
  end-while


end-PROCEDURE	!Prompt-Parameters


!***********************************************************************
! Open-Output-Files
!***********************************************************************
begin-PROCEDURE Open-Output-Files

  show ''
  show 'Platform: ' $sqr-platform

  move 1 to #file_141_out
  move 2 to #file_531_out
  move 3 to #file_513_out
  move 4 to #file_532_out
  move 5 to #file_csv_out

  move 6 to #file_141_bak
  move 7 to #file_531_bak
  move 8 to #file_513_bak
  move 9 to #file_532_bak
  move 10 to #file_csv_bak

  LET $area = 'BN'

  !Returns $process_dir and $bak_dir
  DO get-file-paths  !uaparm.sqc

  !process dir is being overriden to output to SFTP area.
  let $process_dir = $sftp_dir || {SFTP_ACCOUNT} || $slash || $sftp_env || $slash

  LET $datetimestamp = datetostr(datenow(),'YYYYMMDD_HHMI')

  if isnull(rtrim($UA_File_Name,' '))     !** 10/19/2010 - WATSONR - Added rtrim() - HRP-15
    let $UA_File_Name  = 'UOA-AZ141.TXT'  !** 10/19/2010 - WATSONR - Changed filename from 'UA-AZ141.txt' to 'UOA-AZ141.TXT' - HRP-15
  end-if
  if isnull(rtrim($UA_File_Name2,' '))    !** 10/19/2010 - WATSONR - Added rtrim() - HRP-15
    let $UA_File_Name2 = 'UOA-XB531.TXT'  !** 10/19/2010 - WATSONR - Changed filename from 'UA-XB531.txt' to 'UOA-XB531.TXT' - HRP-15
  end-if
  if isnull(rtrim($UA_File_Name3,' '))    !** 10/19/2010 - WATSONR - Added rtrim() - HRP-15
    let $UA_File_Name3 = 'UOA-HR513.TXT'  !** 10/19/2010 - WATSONR - Changed filename from 'UA-HR513.txt' to 'UOA-HR513.TXT' - HRP-15
  end-if
  if isnull(rtrim($UA_File_Name4,' '))    !** 10/19/2010 - WATSONR - Added rtrim() - HRP-15
    let $UA_File_Name4 = 'UOA-XB532.TXT'  !** 10/19/2010 - WATSONR - Changed filename from 'UA-XB532.txt' to 'UOA-XB532.TXT' - HRP-15
  end-if
  let $UA_File_Name5 = 'UA_UABN0015_ERRORS.csv'

  LET $bak_file_name  = $bak_dir || $ua_file_name  || '_' || $datetimestamp || '.bak'
  LET $bak_file_name2 = $bak_dir || $ua_file_name2 || '_' || $datetimestamp || '.bak'
  LET $bak_file_name3 = $bak_dir || $ua_file_name3 || '_' || $datetimestamp || '.bak'
  LET $bak_file_name4 = $bak_dir || $ua_file_name4 || '_' || $datetimestamp || '.bak'

  LET $bak_file_name5 = $bak_dir || $ua_file_name5 || '_' || $datetimestamp || '.bak'

  let $PGP_File_Name  = $process_dir ||$UA_File_Name ||'.pgp'    !04/29/2010 - watsonr - Added pgp_file_name
  let $PGP_File_Name2 = $process_dir ||$UA_File_Name2||'.pgp'    !04/29/2010 - watsonr - Added pgp_file_name
  let $PGP_File_Name3 = $process_dir ||$UA_File_Name3||'.pgp'    !04/29/2010 - watsonr - Added pgp_file_name
  let $PGP_File_Name4 = $process_dir ||$UA_File_Name4||'.pgp'    !04/29/2010 - watsonr - Added pgp_file_name

  let $UA_File_Name  = $process_dir ||$UA_File_Name
  let $UA_File_Name2 = $process_dir ||$UA_File_Name2
  let $UA_File_Name3 = $process_dir ||$UA_File_Name3
  let $UA_File_Name4 = $process_dir ||$UA_File_Name4

  let $UA_File_Name5 = $Output_Directory||$UA_File_Name5

  show ''

  do Open-File($UA_File_Name ,#file_141_out)
  do Open-File($UA_File_Name2,#file_531_out)
  do Open-File($UA_File_Name3,#file_513_out)
  do Open-File($UA_File_Name4,#file_532_out)

  do Open-File($UA_File_Name5,#file_csv_out)


  do Open-File($bak_File_Name ,#file_141_bak)
  do Open-File($bak_File_Name2,#file_531_bak)
  do Open-File($bak_File_Name3,#file_513_bak)
  do Open-File($bak_File_Name4,#file_532_bak)

  do Open-File($bak_File_Name5,#file_csv_bak)

end-PROCEDURE	!Open-Output-Files


!***********************************************************************
! Open-File
!***********************************************************************
begin-PROCEDURE Open-File($File_name,#File_nbr)

  open $File_Name as #File_nbr for-writing record=1431:vary status=#file_status
  let #Status_Out = #file_status

  if #file_Status <> 0
    show 'Cannot open file: ' $File_Name
    show 'RETURN-STATUS = ' #return-status
    stop
  else
    show 'Successfully Opened File: ' $File_Name
  end-if

end-PROCEDURE	!Open-File


!******************************************************************************
! Get-Last-Process-Date
!  Returns the most recent process date from the PS_UA_ADOA_HI_HST table
!******************************************************************************
begin-PROCEDURE Get-Last-Process-Date

	move 'Get-Last-Process-Date' to $ProcName

let $Last_Process_Dt = ''
let $Last_Process_Dt_display = ''

begin-Select on-error=Error-Proc($ProcName)

MAX(PROCESS_DT)   &GLPD.LAST_PROCESS_DT

  move &GLPD.LAST_PROCESS_DT TO $Last_Process_Dt

 FROM PS_UA_ADOA_HI_HST

end-SELECT

  if not isnull($Last_Process_Dt)
    let $Last_Process_Dt_display = datetostr($Last_Process_Dt,'MM/DD/YYYY')
    let $First_Run = 'N'
  else
    let $First_Run = 'Y'
  end-if

end-PROCEDURE	!Get-Last-Process-Date


!******************************************************************************
! Get-Last-AsOfDAte       !**** 07/19/2011 - WATSONR - New Procedure - HCM-2569
!  Returns the most recent asofdate from the PS_UA_ADOA_HI_HST table
!******************************************************************************
begin-PROCEDURE Get-Last-AsOfDate

	move 'Get-Last-AsOfDate' to $ProcName

let $Last_AsOfDate = ''
let $Last_AsOfDate_display = ''

begin-Select on-error=Error-Proc($ProcName)

MAX(ASOFDATE)   &GLAOD.ASOFDATE

  move &GLAOD.ASOFDATE TO $Last_AsOfDate

 FROM PS_UA_ADOA_HI_HST

WHERE PLAN_YEAR = #Plan_Year

end-SELECT

  if isnull($Last_AsOfDate)
    let $Last_AsOfDate = $AsOfDate
  end-if

  let $Last_AsOfDate_display = datetostr($Last_AsOfDate,'MM/DD/YYYY')

end-PROCEDURE	!Get-Last-AsOfDate


!******************************************************************************
! Get-Last-Pay-End-Dt
!  Returns the last pay end date for this $plan_year
!
!** 01/10/2011 - WATSONR - New Procedure - HCM-1679
!******************************************************************************
begin-PROCEDURE Get-Last-Pay-End-Dt

	move 'Get-Last-Pay-End-Dt' to $ProcName

let $Last_Pay_End_Dt = ''

begin-Select on-error=Error-Proc($ProcName)

MAX(PAY_END_DT)   &GLPED.LAST_PAY_END_DT

  move &GLPED.LAST_PAY_END_DT TO $Last_Pay_End_Dt

 FROM PS_PAY_CALENDAR
WHERE PAY_END_DT BETWEEN TO_DATE('01/01/'||$Plan_Year,'MM/DD/YYYY') AND TO_DATE('12/31/'||$Plan_Year,'MM/DD/YYYY')
  AND PAY_OFF_CYCLE_CAL = 'N'

end-SELECT

end-PROCEDURE	!Get-Last-Pay-End-Dt


!******************************************************************************
! 	Procedure Name: Set-Alter-Emplid
!	Called By: 	Program
!	Description:	Set PS_PERS_EFFDT.ALTER_EMPLID for records that do not
!			have a value.
!******************************************************************************
begin-PROCEDURE Set-Alter-Emplid

begin-SELECT

PD.EMPLID   &SET_ALTER_EMPLID

   DO get-next-alter-emplid
   DO update-alter-emplid

   ADD 1 TO #update_alter_emplid_count

FROM PS_PERS_DATA_EFFDT PD
WHERE PD.ALTER_EMPLID = ' '
  AND EXISTS (SELECT 'X'
               FROM PS_PER_ORG_ASGN
              WHERE EMPLID = PD.EMPLID
                AND PER_ORG = 'EMP')
  AND PD.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_PERS_DATA_EFFDT
                   WHERE EMPLID = PD.EMPLID
                     AND EFFDT <= SYSDATE)

end-SELECT

   SHOW '****************************'
   SHOW 'Alter emplid updated: ' #update_alter_emplid_count
   SHOW '****************************'

   COMMIT

end-PROCEDURE !Set-Alter-Emplid

!******************************************************************************
!	Procedure name:	get-next-alter-emplid
!	Called By:	Set-alter-Emplid
!	Description:	Get next available alter_emplid to set on pers data effdt
!******************************************************************************
begin-PROCEDURE get-next-alter-emplid

   let $next_alter_emplid = ' '

begin-SELECT

ALTER_EMPLID   &CUR_ALTER_EMPLID

   let $next_alter_emplid = &cur_alter_emplid

FROM PS_PERS_DATA_EFFDT
WHERE EMPLID = &set_alter_emplid
  AND ALTER_EMPLID <> ' '

end-SELECT

   IF $next_alter_emplid = ' '

begin-SELECT

TO_CHAR(NVL(MIN(SUBSTR(TO_CHAR(TO_NUMBER(SUBSTR(PD.ALTER_EMPLID,1,3) || SUBSTR(PD.ALTER_EMPLID,6,4)) + 1), 1,3) || '00' || SUBSTR(TO_CHAR(TO_NUMBER(SUBSTR(PD.ALTER_EMPLID,1,3) || SUBSTR(PD.ALTER_EMPLID,6,4)) + 1),4,4)),'18000000')) &NEXT_ALTER_EMPLID

   LET $next_alter_emplid = &next_alter_emplid

FROM PS_PERS_DATA_EFFDT PD
WHERE ALTER_EMPLID > '180000000'
  AND NOT EXISTS (SELECT 'X'
                    FROM PS_PERS_DATA_EFFDT
                   WHERE ALTER_EMPLID = SUBSTR(TO_CHAR(TO_NUMBER(SUBSTR(PD.ALTER_EMPLID,1,3) || SUBSTR(PD.ALTER_EMPLID,6,4)) + 1), 1,3) || '00' || SUBSTR(TO_CHAR(TO_NUMBER(SUBSTR(PD.ALTER_EMPLID,1,3) || SUBSTR(PD.ALTER_EMPLID,6,4)) + 1),4,4))


end-SELECT

!SW - 11/17/2011 - Removed - Bug exists where select will not allow number > 180009999.
!begin-SELECT

!TO_CHAR(NVL(MIN(TO_NUMBER(SUBSTR(ALTER_EMPLID,1,3) || '00' || SUBSTR(ALTER_EMPLID,6,4)))+ 1,'18000000'))  &NEXT_ALTER_EMPLID

!   LET $next_alter_emplid = &next_alter_emplid

!FROM PS_PERS_DATA_EFFDT PD
!WHERE ALTER_EMPLID > '180000000'
!  AND NOT EXISTS (SELECT 'X'
!                    FROM PS_PERS_DATA_EFFDT
!                   WHERE ALTER_EMPLID = TO_CHAR(TO_NUMBER(SUBSTR(PD.ALTER_EMPLID,1,3) || '00' || SUBSTR(PD.ALTER_EMPLID,6,4)) + 1))

!end-SELECT

   END-IF

end-PROCEDURE !get-next-alter-emplid

!******************************************************************************
!	Procedure Name: update-alter-emplid
!	Called By:	Set-Alter-emplid
!	Description:	update the PS_PERS_DATA_EFFDT.ALTER_EMPLID to max
!			ALTER_EMPLID + 1.
!******************************************************************************
begin-PROCEDURE update-alter-emplid

begin-SQL

UPDATE PS_PERS_DATA_EFFDT PD
   SET PD.ALTER_EMPLID = $next_alter_emplid
 WHERE PD.EMPLID = &set_alter_emplid
   AND PD.ALTER_EMPLID = ' '

end-SQL

begin-SQL

UPDATE PS_PERSONAL_DATA
   SET ALTER_EMPLID = $next_alter_emplid
 WHERE EMPLID = &set_alter_emplid

end-SQL

end-PROCEDURE update-alter-emplid


!******************************************************************************
! Delete-Today-Records
!  Deletes any records from prior runs on today's date.
!******************************************************************************
begin-PROCEDURE Delete-Today-Records

	move 'Delete-Today-Records from hst' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)
DELETE FROM PS_UA_ADOA_HI_HST
WHERE   PLAN_YEAR  = #Plan_Year   !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
  AND	PROCESS_DT = $Process_Dt
end-SQL

	move 'Delete-Today-Records from emphst' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)
DELETE FROM PS_UA_ADOA_EMPHST
WHERE	PLAN_YEAR  = #Plan_Year   !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
  AND	PROCESS_DT = $Process_Dt
end-SQL

	move 'Delete-Today-Records from dephst' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)
DELETE FROM PS_UA_ADOA_DEPHST
WHERE	PLAN_YEAR  = #Plan_Year   !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
  AND	PROCESS_DT = $Process_Dt
end-SQL

	move 'Delete-Today-Records from benhst' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)
DELETE FROM PS_UA_ADOA_BENHST
WHERE	PLAN_YEAR  = #Plan_Year   !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
  AND	PROCESS_DT = $Process_Dt
end-SQL

	move 'Delete-Today-Records from hi_err' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)
DELETE FROM PS_UA_ADOA_HI_ERR
WHERE	PLAN_YEAR  = #Plan_Year   !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
  AND	PROCESS_DT = $Process_Dt
end-SQL

end-PROCEDURE	!Delete-Today-Records


!******************************************************************************
! Get-Address       !*** 12/09/2009 - WATSONR - Added new get-address procedure
!  Returns the employee's mailing or home address
!******************************************************************************
begin-PROCEDURE Get-Address

	move 'Get-Address' to $ProcName

   let $Address1 = ''
   let $Address2 = ''
   let $City     = ''
   let $State    = ''
   let $Postal   = ''

begin-SELECT
ADDR.ADDRESS1			&PM.ADDRESS1
ADDR.ADDRESS2			&PM.ADDRESS2
ADDR.CITY			&PM.CITY
ADDR.STATE			&PM.STATE
ADDR.POSTAL			&PM.POSTAL

   if isnull($ADDRESS1)
     let $Address1            = upper(&PM.ADDRESS1)
     let $Address2            = upper(&PM.ADDRESS2)
     let $City                = upper(&PM.CITY)
     move &PM.STATE           to $State
     move &PM.POSTAL          to $Postal
   end-if

FROM PS_ADDRESSES ADDR
WHERE EMPLID 		= $Emplid
  AND ADDR.EFF_STATUS   = 'A'
  AND ADDR.EFFDT = (SELECT MAX(EFFDT)
                      FROM PS_ADDRESSES
                     WHERE EMPLID       = ADDR.EMPLID
                       AND ADDRESS_TYPE = ADDR.ADDRESS_TYPE
                       AND EFFDT       <= $AsOfDate)
ORDER BY decode(ADDR.ADDRESS_TYPE,'MAIL',1,'HOME',2,3)
end-SELECT

  if isnull($Address1)
    let $Error_Text = 'NO ADDRESS found for employee: '||$EMPLID
    let $Output_Text = $Error_Text
    let $Error_Type = 'Error'
    do Write-CSV-Record
  end-if

end-PROCEDURE	!Get-Address


!******************************************************************************
! Process-Main
!
!  Select all employees who are eligible for Health Benefits
!
!******************************************************************************
begin-PROCEDURE Process-Main

	move 'Process-Main' to $ProcName

begin-SELECT DISTINCT on-error=Error-Proc($ProcName)

	!add 1 to #Records_Processed

	!if mod(#Records_Processed,1000) = 0
	!	move #Records_Processed to $Records_Processed 999,999
	!	show (,1) 'Records Read: ' $Records_Processed cl
	!end-if

PROG.EMPLID			&PM.EMPLID
PROG.EMPL_RCD			&PM.BENEFIT_RCD_NBR
PDE.ALTER_EMPLID		&PM.ALTER_EMPLID
PDE.SEX				&PM.SEX
PDE.MAR_STATUS			&PM.MAR_STATUS
NAME.LAST_NAME			&PM.LAST_NAME
NAME.FIRST_NAME			&PM.FIRST_NAME
substr(NAME.MIDDLE_NAME,1,1)	&PM.MIDDLE_INITIAL
PER.BIRTHDATE			&PM.BIRTHDATE
NID.NATIONAL_ID			&PM.SSN
PROG.BENEFIT_PROGRAM		&PM.BENEFIT_PROGRAM

   let $Error_Text = ''
   let $Plan_Type  = ''
   let $Dependent_Benef  = ''

   move &PM.EMPLID 	    to $EmplID
   move &PM.BENEFIT_RCD_NBR to #Benefit_Rcd_Nbr
   move &PM.ALTER_EMPLID    to $Alter_Emplid
   let $Last_Name           = upper(&PM.LAST_NAME)
   let $First_Name          = upper(&PM.FIRST_NAME)
   let $Middle_Initial      = upper(&PM.MIDDLE_INITIAL)
   move &PM.SEX             to $Sex
   move &PM.MAR_STATUS      to $Mar_Status
   move &PM.BIRTHDATE       to $Birthdate
   move &PM.SSN             to $Employee_SSN

   !** Start - 12/07/2011 - WATSONR - Added SSN edits - HCM-3586
   if $Employee_SSN = 'XXXXXXXXX'
     let $Employee_SSN = $Alter_Emplid
   end-if
   !** End - 12/07/2011 - WATSONR - Added SSN edits - HCM-3586

! Begin - HCM-5019 - shimel - If Employee SSN = 999999999, add warning to CSV error file
  if $Employee_SSN = '999999999'
          let $Error_Text = 'Emplid:' || $emplid || ' SSN ' || $Employee_SSN || ' sent in the AZ141 file.'
          let $Output_Text = $Error_Text
          let $Error_Type = 'Warning'
          do Write-CSV-Record
  end-if
! End - HCM-5019 - shimel

   move ' '                 to $Home_Phone
   move ' '                 to $EXTENSION
   move ' '                 to $SMOKER
   move ' '                 to $WORK_PHONE

   do Get-Address		!*** 12/09/2009 - WATSONR - Added new get-address procedure

   move &PM.BENEFIT_PROGRAM to $Benefit_Program


   if $MAR_STATUS <> 'M'
     let $MAR_STATUS = 'S'
   end-if


   do Get-Health-Benefit-Empl-Rcd

   do Get-Job-Data

   if $Primary_Job = 'Y'


     if isnull(rtrim($Alter_Emplid,' '))
       let $Error_Text = 'NO ALTER_EMPLID FOUND for employee: '||$EMPLID
       let $Output_Text = $Error_Text
       let $Error_Type = 'Error'
       do Write-CSV-Record

     end-if

     DO DETERMINE-ELIGIBILITY

     do Find-Active-Benefits
     if $Active_Benefits_Exist = 'Y'
       let $IGNORE_TERM = 'Y'
     else
       let $IGNORE_TERM = 'N'
     end-if

     if $BENEFITS_ELIGIBLE = 'N'
        LET $EMPL_STATUS = 'T'    !TERMINATE BENEFITS BECAUSE FTE DROPPED BELOW .5
        if $Active_Benefits_Exist = 'Y'  !*** 04/29/2010 - WATSONR - Don't output message unless active benefits exist
          let $Output_Text = 'EMPLID ' || $EMPLID || ' is not eligible for benefits.  #SUM_FTE = ' || $SUM_FTE  ||' Benefits should be terminated.'
          let $Error_Type = 'Warning'
          let $Severity = 'M'		!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
          let #Resend_Count = 0		!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
          do Write-CSV-Record
        end-if  !*** 04/29/2010 - WATSONR - Don't output message unless active benefits exist
     end-if

     do Get-Effective-Date

     if isnull($Error_Text)

       do Get-Emp-Coverage-Data

       do Get-Life-Coverage-Data	!*** 7/29/2009 - Added Life/Disability
       do Get-STD-Coverage-Data		!*** 7/29/2009 - Added Life/Disability
       do Get-LTD-Coverage-Data		!*** 7/29/2009 - Added Life/Disability

       do Compare-Emp-Record

       do Select-Dependents

     else

       do Include-Old-Coverage

     end-if

   end-if

FROM PS_PER_ORG_ASGN 	POA
    ,PS_BEN_PROG_PARTIC PROG
    ,PS_PERS_DATA_EFFDT PDE
    ,PS_NAMES 		NAME
    ,PS_PERSON 		PER
    ,PS_PERS_NID	NID
WHERE PROG.EMPLID		= POA.EMPLID
  AND PROG.EMPL_RCD 		= POA.BENEFIT_RCD_NBR
  AND PDE.EMPLID 		= POA.EMPLID
  AND NAME.EMPLID		= POA.EMPLID
  AND PER.EMPLID		= POA.EMPLID
  AND NID.EMPLID		= POA.EMPLID
  AND NID.NATIONAL_ID_TYPE	= 'PR'
  AND NID.PRIMARY_NID		= 'Y'
  AND POA.PER_ORG  		= 'EMP'
  AND RTRIM(PDE.ALTER_EMPLID) 	IS NOT NULL
  AND NAME.NAME_TYPE		= 'PRI'
  AND NAME.EFF_STATUS		= 'A'
  AND PROG.EFFDT = (SELECT MAX(EFFDT)
                      FROM PS_BEN_PROG_PARTIC
                     WHERE EMPLID       = PROG.EMPLID
                       AND EMPL_RCD     = PROG.EMPL_RCD
                       AND EFFDT       <= $AsOfDate)
  AND PDE.EFFDT  = (SELECT MAX(EFFDT)
                      FROM PS_PERS_DATA_EFFDT
                     WHERE EMPLID       = PDE.EMPLID
                       AND EFFDT       <= $AsOfDate)
  AND NAME.EFFDT = (SELECT MAX(EFFDT)
                      FROM PS_NAMES
                     WHERE EMPLID       = NAME.EMPLID
                       AND NAME_TYPE    = NAME.NAME_TYPE
                       AND EFFDT       <= $AsOfDate)
  AND (EXISTS(SELECT 'X'
               FROM PS_BEN_DEFN_OPTN
              WHERE BENEFIT_PROGRAM = PROG.BENEFIT_PROGRAM
                AND PLAN_TYPE IN ('10','11','14','20'))  !*** 10/15/2009 - WATSONR - Added basic life plan type
            or
       EXISTS(SELECT 'X'
                FROM PS_UA_ADOA_EMPDEM
               WHERE EMPLID = PROG.EMPLID))
  AND (EXISTS(SELECT 'X'
               FROM PS_HEALTH_BENEFIT
              WHERE EMPLID = PROG.EMPLID
                AND PLAN_TYPE IN ('10','11','14'))
            or
       EXISTS(SELECT 'X'                         !*** 10/15/2009 - WATSONR - Added 'or exists' for basic life
               FROM PS_LIFE_ADD_BEN
              WHERE EMPLID = PROG.EMPLID
                AND PLAN_TYPE = '20'))
  AND EXISTS(SELECT 'X'
               FROM PS_JOB JOB
              WHERE JOB.EMPLID		= POA.EMPLID
                AND JOB.EMPL_RCD	= POA.EMPL_RCD
                AND JOB.EFFDT  = (SELECT MAX(EFFDT)
                                    FROM PS_JOB
                                   WHERE EMPLID       = JOB.EMPLID
                                     AND EMPL_RCD     = JOB.EMPL_RCD
                                     AND EFFDT       <= $AsOfDate)
                AND JOB.EFFSEQ = (SELECT MAX(EFFSEQ)
                                    FROM PS_JOB
                                   WHERE EMPLID       = JOB.EMPLID
                                     AND EMPL_RCD     = JOB.EMPL_RCD
                                     AND EFFDT        = JOB.EFFDT))
ORDER BY PROG.EMPLID
end-SELECT


end-PROCEDURE	!Process-Main


!******************************************************************************
!
! Find-Active-Benefits
!
! Sets Active_Benefits_Exist to 'Y' if the employee has any elected coverage on the asofdate
!
!******************************************************************************
begin-PROCEDURE Find-Active-Benefits

	move 'Find-Active-Benefits' to $ProcName

let $Active_Benefits_Exist = 'N'

begin-SELECT on-error=Error-Proc($ProcName)

'Y'		&FAB.ACTIVE_BENEFITS_EXIST

  let $Active_Benefits_Exist = &FAB.ACTIVE_BENEFITS_EXIST

 FROM PS_HEALTH_BENEFIT HB
WHERE HB.EMPLID = $EmplID
  AND HB.PLAN_TYPE IN ('10', '11', '14')
  AND HB.COVERAGE_ELECT in ('E','W')
  AND HB.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_HEALTH_BENEFIT
                   WHERE EMPLID         = HB.EMPLID
                     AND EMPL_RCD       = HB.EMPL_RCD
                     AND COBRA_EVENT_ID = HB.COBRA_EVENT_ID
                     AND PLAN_TYPE      = HB.PLAN_TYPE
                     AND BENEFIT_NBR    = HB.BENEFIT_NBR
                     AND EFFDT          <= sysdate+1)   !** 07/19/2011 - WATSONR - Changed $AsOfDate to sysdate+1 - HCM-2569
end-SELECT

end-PROCEDURE	!Find-Active-Benefits


!******************************************************************************
! Get-Health-Benefit-Empl-Rcd
!
!  Selects the most recent empl_rcd from the ps_health_benefit table
!  The Health-Benefit-Empl-Rcd is used by the check-primary-job procedure
!
!******************************************************************************
begin-PROCEDURE Get-Health-Benefit-Empl-Rcd

  let #Health_Benefit_Empl_Rcd = ''

begin-SELECT distinct

HB.EMPL_RCD		&GHBER.EMPL_RCD

  let #Health_Benefit_Empl_Rcd = &GHBER.EMPL_RCD

 FROM PS_HEALTH_BENEFIT HB
WHERE HB.EMPLID = $EmplId
  AND HB.PLAN_TYPE IN ('10','11','14')
  AND HB.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_HEALTH_BENEFIT
                   WHERE EMPLID    = HB.EMPLID
                     AND PLAN_TYPE = HB.PLAN_TYPE
                     AND EFFDT    <= $AsOfDate)
end-SELECT

end-PROCEDURE	!Process-Main


!******************************************************************************
! Get-Job-Data
!
!  Selects the job info for the benefits eligible job(s).
!
!******************************************************************************
begin-PROCEDURE Get-Job-Data

	move 'Get-Job-Data' to $ProcName

  let #Annual_Rt      = 0
  let $Empl_Status    = ''
  let $Hire_Dt        = ''
  let $Termination_Dt = ''
  let $Company        = ''
  let $Paygroup       = ''
  let $Comp_Freq_Supp = ' '
  let $Primary_Job    = 'N'

begin-SELECT on-error=Error-Proc($ProcName)

JOB.EMPL_RCD			&GJD.EMPL_RCD
JOB.REG_TEMP			&GJD.REG_TEMP
JOB.EMPL_STATUS			&GJD.EMPL_STATUS
!JOB.ANNUAL_RT			&GJD.ANNUAL_RT           !** 10/19/2010 - WATSONR - Use annl_benef_base_rt instead of annual_rt - HRP-15
JOB.ANNL_BENEF_BASE_RT		&GJD.ANNUAL_RT           !** 10/19/2010 - WATSONR - Use annl_benef_base_rt instead of annual_rt - HRP-15
JOB.COMPANY			&GJD.COMPANY
JOB.PAYGROUP			&GJD.PAYGROUP
JOB.TERMINATION_DT		&GJD.TERMINATION_DT
JOB.COMP_FREQUENCY		&GJD.COMP_FREQUENCY
POA.SERVICE_DT			&GJD.SERVICE_DT

  if $Primary_Job = 'N'
    do Check-Primary-Job
  end-if

  if isnull($Hire_Dt) or &GJD.Service_Dt < $Hire_Dt
    let $Hire_Dt = &GJD.SERVICE_DT
  end-if

  if &GJD.EMPL_STATUS <> 'T' and &GJD.EMPL_STATUS <> 'R'

    let $Empl_Status = &GJD.EMPL_STATUS
    add &GJD.Annual_Rt to #Annual_Rt

    if &GJD.COMP_FREQUENCY <> 'C'
      let $COMP_FREQ_SUPP = '26'
    else
      if $Comp_Freq_Supp = ' '
        let $COMP_FREQ_SUPP = '20'
      end-if
    end-if

  else

    if isnull($Empl_Status)
      let $Empl_Status    = &GJD.EMPL_STATUS
    end-if

    if isnull($Termination_Dt) or &GJD.TERMINATION_DT > $Termination_Dt
       let $Termination_Dt = &GJD.TERMINATION_DT
       let $Company        = &GJD.COMPANY
       let $Paygroup       = &GJD.PAYGROUP
    end-if

  end-if


FROM PS_JOB 		JOB
    ,PS_PER_ORG_ASGN 	POA
WHERE POA.EMPLID          = $EmplID
  AND POA.BENEFIT_RCD_NBR = #Benefit_Rcd_Nbr
  AND JOB.EMPLID          = POA.EMPLID
  AND JOB.EMPL_RCD        = POA.EMPL_RCD
  AND JOB.EFFDT  = (SELECT MAX(EFFDT)
                      FROM PS_JOB
                     WHERE EMPLID       = JOB.EMPLID
                       AND EMPL_RCD     = JOB.EMPL_RCD
                       AND EFFDT       <= $AsOfDate)
  AND JOB.EFFSEQ = (SELECT MAX(EFFSEQ)
                      FROM PS_JOB
                     WHERE EMPLID       = JOB.EMPLID
                       AND EMPL_RCD     = JOB.EMPL_RCD
                       AND EFFDT        = JOB.EFFDT)
end-SELECT


  let #Annual_Rt = round(#Annual_Rt,0)

end-procedure	!Get-Job-Data



!******************************************************************************
! Check-Primary-Job
!
!  Selects the PRIMARY_JOB_IND from the PS_PRIMARY_JOBS table
!
!******************************************************************************
begin-PROCEDURE Check-Primary-Job

	move 'Check-Primary-Job' to $ProcName


  let $Primary_Job       = 'N'


begin-SELECT on-error=Error-Proc($ProcName)

PJ.PRIMARY_JOB_IND		&CPJ.PRIMARY_JOB_IND


  let $Primary_Job = &CPJ.PRIMARY_JOB_IND


 FROM PS_PRIMARY_JOBS    PJ
     ,PS_PER_ORG_ASGN    POA
     ,PS_BEN_PROG_PARTIC PROG
WHERE PJ.EMPLID   		= $Emplid
  AND PJ.PRIMARY_JOB_APP	= 'BN'
  AND PJ.EMPL_RCD		= &GJD.EMPL_RCD
  AND PROG.EMPL_RCD		= NVL(#Health_Benefit_Empl_Rcd,PROG.EMPL_RCD)
  AND PJ.EMPLID 		= POA.EMPLID
  AND PJ.EMPL_RCD		= POA.EMPL_RCD
  AND PJ.EMPLID			= PROG.EMPLID
  AND PROG.EMPL_RCD		= POA.BENEFIT_RCD_NBR
  AND (EXISTS(SELECT 'X'
               FROM PS_BEN_DEFN_OPTN
              WHERE BENEFIT_PROGRAM = PROG.BENEFIT_PROGRAM
                AND PLAN_TYPE IN ('10','11','14'))
            or
       EXISTS(SELECT 'X'
                FROM PS_UA_ADOA_EMPDEM
               WHERE EMPLID = PROG.EMPLID))
  AND PJ.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_PRIMARY_JOBS
                   WHERE EMPLID          = PJ.EMPLID
                     AND PRIMARY_JOB_APP = PJ.PRIMARY_JOB_APP
                     AND EMPL_RCD        = PJ.EMPL_RCD
                     AND EFFDT          <= $AsOfDate)
end-SELECT


end-PROCEDURE	!Check-Primary-Job


!*************************************
begin-procedure DETERMINE-ELIGIBILITY
!*************************************

	move 'Determine-Eligibility' to $ProcName

   LET #SUM_FTE = 0
begin-select  on-error=Error-Proc($ProcName)
sum(JOB.FTE) &SUM_FTE
   LET #SUM_FTE = &SUM_FTE

   move #SUM_FTE TO $SUM_FTE

from PS_JOB JOB
WHERE JOB.EMPLID = $EMPLID
  AND JOB.EFFDT   = (SELECT MAX(EFFDT) FROM PS_JOB
                      WHERE EMPLID   = JOB.EMPLID
                        AND EMPL_RCD = JOB.EMPL_RCD
                        AND EFFDT   <= $AsOfDate)
  AND JOB.EFFSEQ  = (SELECT MAX(EFFSEQ) FROM PS_JOB
                      WHERE EMPLID   = JOB.EMPLID
                        AND EMPL_RCD = JOB.EMPL_RCD
                        AND EFFDT    = JOB.EFFDT)
end-select

  if #SUM_FTE >= .5
     LET $BENEFITS_ELIGIBLE = 'Y'
  ELSE
     LET $BENEFITS_ELIGIBLE = 'N'
  END-IF

end-procedure	!DETERMINE-ELIGIBILITY



!******************************************************************************
! Get-Effective-Date
!
!  Calculates the Effective Date
!
!******************************************************************************
begin-PROCEDURE Get-Effective-Date

  let $Effective_Date = ''


!*** Begin - 01/28/2010 - RLWATSO2 -Added new effective date Logic

  if $Hire_Dt <= $Last_OE_Date
    let $Effective_Date = $Last_OE_Date
  else


begin-SELECT on-error=Error-Proc($ProcName)

min(COVERAGE_BEGIN_DT)		&GEDH.Coverage_Begin_Dt

  let $Effective_Date = &GEDH.Coverage_Begin_Dt

 FROM PS_HEALTH_BENEFIT HB
WHERE HB.EMPLID = $EmplID
  AND HB.PLAN_TYPE IN ('10', '11', '14')
  AND HB.COVERAGE_ELECT IN ('E','W')
  AND HB.EFFDT >= $Last_OE_Date

end-SELECT

    if isnull($Effective_Date)

      move 'Get-Coverage-Begin-Dt from life_add_ben' to $ProcName

begin-SELECT

max(COVERAGE_BEGIN_DT)   &GEDL.Coverage_Begin_Dt

 FROM PS_LIFE_ADD_BEN LIFE
WHERE LIFE.EMPLID = $EmplID
  AND LIFE.PLAN_TYPE = '20'
  AND LIFE.COVERAGE_ELECT = 'E'

end-SELECT


    end-if

  end-if

!*** End - 01/28/2010 - RLWATSO2 - Added new effective Date Logic

!******* Start - 01/28/2010 - RLWATSO2 - Removed this section ***********
!**** Get the date from ps_health_benefit
!
!   move 'Get-Coverage-Begin-Dt from health benefit' to $ProcName
!
!begin-SELECT on-error=Error-Proc($ProcName)
!
!max(COVERAGE_BEGIN_DT)		&GEDH.Coverage_Begin_Dt
!
!  let $Effective_Date = &GEDH.Coverage_Begin_Dt
!
! FROM PS_HEALTH_BENEFIT HB
!WHERE HB.EMPLID = $EmplID
!  AND HB.PLAN_TYPE IN ('10', '11', '14')
!  AND HB.EFFDT = (SELECT MAX(EFFDT)
!                    FROM PS_HEALTH_BENEFIT
!                   WHERE EMPLID         = HB.EMPLID
!                     AND EMPL_RCD       = HB.EMPL_RCD
!                     AND COBRA_EVENT_ID = HB.COBRA_EVENT_ID
!                     AND BENEFIT_NBR    = HB.BENEFIT_NBR
!                     AND EFFDT          <= $AsOfDate)
!end-SELECT
!******* End - 01/28/2010 - RLWATSO2 - Removed this section ***********

!***************************** Not needed ************************************
!if ($EMPL_STATUS = 'T' or $EMPL_STATUS = 'R') and not isnull($Effective_Date)
!  let $Effective_Date = dateadd($Effective_Date,'day',-1)
!end-if
!*****************************************************************************

end-procedure	!Get-Effective-Date


!******************************************************************************
! Get-Emp-Coverage-Data
!
!  Get the most recent 'E'lected or 'W'aived health, dental, and vision records
!  even if not the latest ps_health_benefit record
!
!******************************************************************************
begin-PROCEDURE Get-Emp-Coverage-Data

	move 'Get-Emp-Coverage-Data' to $ProcName

  let #Amount = 0

begin-SELECT DISTINCT on-error=Error-Proc($ProcName)

HB.EMPL_RCD				&GECD.EMPL_RCD
HB.COBRA_EVENT_ID			&GECD.COBRA_EVENT_ID
HB.PLAN_TYPE				&GECD.PLAN_TYPE
HB.BENEFIT_NBR				&GECD.BENEFIT_NBR
HB.EFFDT				&GECD.EFFDT
HB.COVERAGE_ELECT			&GECD.COVERAGE_ELECT
HB.COVERAGE_BEGIN_DT			&GECD.COVERAGE_BEGIN_DT
HB.COVERAGE_END_DT			&GECD.COVERAGE_END_DT
HB.BENEFIT_PLAN				&GECD.BENEFIT_PLAN
HB.COVRG_CD				&GECD.COVRG_CD
HB.COVERAGE_ELECT_DT			&GECD.COVERAGE_ELECT_DT


  LET $Plan_Type                = &GECD.PLAN_TYPE
  LET $Benefit_Plan             = &GECD.BENEFIT_PLAN
  LET $Covrg_Cd                 = &GECD.COVRG_CD

  LET #Plan_Data_Empl_Rcd       = &GECD.EMPL_RCD
  LET #Plan_Data_Cobra_Event_Id = &GECD.COBRA_EVENT_ID
  LET #Plan_Data_Benefit_Nbr    = &GECD.BENEFIT_NBR
  LET $Plan_Data_Effdt          = &GECD.COVERAGE_BEGIN_DT      !** 01/10/2011 - WATSONR - Changed &GECD.EFFDT to &GECD.COVERAGE_BEGIN_DT. - HCM-1679

  let $SMOKER = ' '    !*** Added 08/19/2009

  LET $Error_Text = ''


  !** Start - 01/10/2011 - WATSONR - Send non-ADOA plans as Waives = HCM-1679
  if substr($Benefit_Plan,1,2) = 'UA'
    LET $Coverage_Elect = 'W'
  else
    !** End - 01/10/2011 - WATSONR - Send non-ADOA plans as Waives = HCM-1679

    LET $Coverage_Elect		= &GECD.COVERAGE_ELECT

  end-if !** 01/10/2011 - WATSONR - Send non-ADOA plans as Waives = HCM-1679

  !do Lookup-Plan-Data !**** 01/28/2010 - WATSONR - Lookup plan data after getting coverage end date

  LET $Coverage_Begin_Dt = &GECD.COVERAGE_BEGIN_DT
  LET $Coverage_End_Dt   = &GECD.COVERAGE_END_DT

  do Find-Terminating-Record  !Look for a PS_health_benefit record after the 'E'lected or 'W'aived record

  if $terminated_record_found = 'Y'

      move &GECD.EFFDT to $Minimum_Dependent_Effdt

     if $Terminate_Date < $Coverage_End_Dt
               or
        (not isnull($Terminate_Date) and isnull($Coverage_End_Dt))

       let $Coverage_End_Dt = $Terminate_Date

     end-if

  else

     do Get-Minimum-Dependent-Effdt

  end-if


  !**** Start - 01/28/2010 - WATSONR - If coverage is active and elected prior to the last OE, use the last OE Date
  if $Coverage_Begin_Dt < $Last_OE_Date and (isnull($Coverage_End_Dt) or $Coverage_End_Dt > $Last_OE_Date)
     !LET $Coverage_Begin_Dt = $Last_OE_Date              !** 10/19/2010 - WATSONR - don't update coverage begin date - HRP-15
     LET $Plan_Data_Effdt   = $Last_OE_Date
  end-if


  do Lookup-Plan-Data
  !**** End - 01/28/2010 - WATSONR - If coverage is active and elected prior to the last OE, use the last OE Date


  if &GECD.PLAN_TYPE = '10'

      move &GECD.EFFDT              to $Employee_Medical_Effdt
      move $Coverage_Begin_Dt       to $Employee_Medical_Begin_Dt
      move $Coverage_End_Dt         to $Employee_Medical_End_Dt
      move $Minimum_Dependent_Effdt to $Minimum_Dep_Medical_Effdt

  end-if

  if &GECD.PLAN_TYPE = '11'

      move &GECD.EFFDT              to $Employee_Dental_Effdt
      move $Coverage_Begin_Dt       to $Employee_Dental_Begin_Dt
      move $Coverage_End_Dt         to $Employee_Dental_End_Dt
      move $Minimum_Dependent_Effdt to $Minimum_Dep_Dental_Effdt

  end-if

  if &GECD.PLAN_TYPE = '14'

      move &GECD.EFFDT              to $Employee_Vision_Effdt
      move $Coverage_Begin_Dt       to $Employee_Vision_Begin_Dt
      move $Coverage_End_Dt         to $Employee_Vision_End_Dt
      move $Minimum_Dependent_Effdt to $Minimum_Dep_Vision_Effdt

  end-if


  if isnull($Error_Text)

    do Compare-EmpBen-Record

  end-if


FROM	PS_HEALTH_BENEFIT	HB
WHERE
    HB.EMPLID 				=	$EmplID
AND HB.EMPL_RCD 			=	#Benefit_Rcd_Nbr
AND HB.COVERAGE_ELECT			IN	('E','W')
AND HB.PLAN_TYPE 			IN	('10', '11', '14')
AND HB.EFFDT = (
	SELECT	MAX(EFFDT)
	FROM	PS_HEALTH_BENEFIT
	WHERE
		    EMPLID 		= 	HB.EMPLID
	  	AND EMPL_RCD 		= 	HB.EMPL_RCD
	  	AND COBRA_EVENT_ID 	= 	HB.COBRA_EVENT_ID
	  	AND PLAN_TYPE 		= 	HB.PLAN_TYPE
	  	AND BENEFIT_NBR 	= 	HB.BENEFIT_NBR
		AND COVERAGE_ELECT	IN	('E','W')
	  	AND EFFDT 		<= 	$AsOfDate)
end-SELECT

end-PROCEDURE	!Get-Emp-Coverage-Data


!******************************************************************************
! Get-Life-Coverage-Data		!*** 7/29/2009 - Added Life/Disability
!
!  Get the most recent 'E'lected life records
!  even if not the latest ps_life_add_ben record
!
!******************************************************************************
begin-PROCEDURE Get-Life-Coverage-Data

	move 'Get-Life-Coverage-Data' to $ProcName

begin-SELECT DISTINCT on-error=Error-Proc($ProcName)

LIFE.PLAN_TYPE				&GLCD.PLAN_TYPE
LIFE.BENEFIT_NBR			&GLCD.BENEFIT_NBR
LIFE.EFFDT				&GLCD.EFFDT
LIFE.COVERAGE_ELECT			&GLCD.COVERAGE_ELECT
LIFE.COVERAGE_BEGIN_DT			&GLCD.COVERAGE_BEGIN_DT
LIFE.COVERAGE_END_DT			&GLCD.COVERAGE_END_DT
LIFE.BENEFIT_PLAN			&GLCD.BENEFIT_PLAN
!LIFE.LIFE_ADD_COVRG			&GLCD.LIFE_ADD_COVRG		!*** 07/29/2009 - Not used at UofA
LIFE.FLAT_AMOUNT			&GLCD.FLAT_AMOUNT
LIFE.COVERAGE_ELECT_DT			&GLCD.COVERAGE_ELECT_DT


  LET $Plan_Type            = &GLCD.PLAN_TYPE
  LET $Benefit_Plan         = &GLCD.BENEFIT_PLAN
  LET #Employee_Flat_Amount = &GLCD.FLAT_AMOUNT

  !*** Start - 01/28/2010 - WATSONR - Added plan type 20 (so terms can be sent)
  if $Plan_Type = '20'
    LET $UA_INTF_PLAN_TYPE = 'EL'
    LET $UA_INTF_PLAN_CODE = 'BASC'
    LET $UA_COVERAGE_OPT   = ' '         !*** 04/29/2010 - WATSONR - Added blank for basic life coverage opt
  else
  !*** End - 01/28/2010 - WATSONR - Added plan type 20 (so terms can be sent)

    if $Plan_Type = '21'		!** Supplemental Life (different for ASU)
      LET $UA_INTF_PLAN_TYPE = 'EL'
      if &GLCD.COVERAGE_ELECT = 'E'
        LET $UA_INTF_PLAN_CODE = 'HELU'   !*** HELA for ASU
      else
        let $UA_INTF_PLAN_CODE = 'WSPL'
      end-if

      LET $UA_COVERAGE_OPT   = ' '

      do Get-Life-Coverage-Amount

    else
      if $Plan_Type = '23'	!*** Dependent Life (different for ASU)
        LET $UA_INTF_PLAN_TYPE = 'DL'
        if &GLCD.COVERAGE_ELECT = 'E'
          LET $UA_INTF_PLAN_CODE = 'HDLU'	!*** HELA for ASU
        else
          LET $UA_INTF_PLAN_CODE = 'WVDL'
        end-if

        EVALUATE $Benefit_Plan
           WHEN = 'DEPLI1'			!*** Dependent Life - State $2,000   (different for ASU)
              LET $UA_COVERAGE_OPT   = '02'
              BREAK
           WHEN = 'DEPLI2'			!*** Dependent Life - State $4,000   (different for ASU)
              LET $UA_COVERAGE_OPT   = '04'
              BREAK
           WHEN = 'DEPLI3'			!*** Dependent Life - State $6,000   (different for ASU)
              LET $UA_COVERAGE_OPT   = '06'
              BREAK
           WHEN = 'DEPLI4'			!*** Dependent Life - State $12,000  (different for ASU)
              LET $UA_COVERAGE_OPT   = '12'
              BREAK
           WHEN = 'DEPLI5'			!*** Dependent Life - State $15,000  (different for ASU)
              LET $UA_COVERAGE_OPT   = '15'
              BREAK
           WHEN = 'DEPLI6'			!*** Dependent Life - State $50,000  (different for ASU)
              LET $UA_COVERAGE_OPT   = '50'
              BREAK
           WHEN-OTHER
              LET $UA_COVERAGE_OPT   = ' '
          END-EVALUATE

          LET #Amount = 0

      end-if
    end-if
  end-if  !*** 01/28/2010 - WATSONR - Added plan type 20 (so terms can be sent)


  LET $Coverage_Begin_Dt = &GLCD.COVERAGE_BEGIN_DT
  LET $Coverage_End_Dt   = &GLCD.COVERAGE_END_DT


  do Find-Terminating-Life-Record  !Look for a PS_life_add_ben record after the 'E'lected record

  if $terminated_record_found = 'Y'


     if $Terminate_Date < $Coverage_End_Dt
               or
        (not isnull($Terminate_Date) and isnull($Coverage_End_Dt))

       let $Coverage_End_Dt = $Terminate_Date

     end-if

  else

     if $Term_Coverage_End_Dt < $Coverage_End_Dt
               or
        (not isnull($Term_Coverage_End_Dt) and isnull($Coverage_End_Dt))

       let $Coverage_End_Dt = $Term_Coverage_End_Dt

     end-if

  end-if

  if $Coverage_End_Dt > $AsOfDate
    let $Coverage_End_Dt = ''
  end-if

  !** Start - 09/20/2010 - WATSONR - Removed - Always send a blank smoker flag for supp life - HCM-1135
  !if $Plan_Type = '21' and &GLCD.COVERAGE_ELECT = 'E'
  !  do Get-Smoker-Flag
  !else
  !** End - 09/20/2010 - WATSONR - Removed - Always send a blank smoker flag for supp life - HCM-1135
    let $SMOKER = ' '
  !end-if    !** 09/20/2010 - WATSONR - Removed - Always send a blank smoker flag for supp life - HCM-1135


  do Compare-EmpBen-Record


FROM	PS_LIFE_ADD_BEN	LIFE
WHERE
    LIFE.EMPLID 			=	$EmplID
AND LIFE.EMPL_RCD 			=	#Benefit_Rcd_Nbr
AND LIFE.COVERAGE_ELECT			IN	('E','W')
AND LIFE.PLAN_TYPE			IN	('20','21','23')		!*** 01/28/2010 - WATSONR - Added plan type 20 (so terms can be sent)
AND LIFE.EFFDT = (
	SELECT	MAX(EFFDT)
	FROM	PS_LIFE_ADD_BEN
	WHERE
		    EMPLID 		= 	LIFE.EMPLID
	  	AND EMPL_RCD 		= 	LIFE.EMPL_RCD
	  	AND PLAN_TYPE 		= 	LIFE.PLAN_TYPE
	  	AND BENEFIT_NBR 	= 	LIFE.BENEFIT_NBR
		AND COVERAGE_ELECT	in      ('E','W')
	  	AND EFFDT 		<= 	$AsOfDate)
end-SELECT

end-PROCEDURE	!Get-Life-Coverage-Data


!******************************************************************************
! Get-Smoker-Flag		!*** 7/29/2009 - Added Life/Disability  (UofA only)
!
! Returns a 'Y' if the employee is not enrolled in plan type 22
!
!******************************************************************************
begin-PROCEDURE Get-Smoker-Flag

	move 'Get-Smoker-Flag' to $ProcName

  let $SMOKER = 'Y'

begin-SELECT DISTINCT on-error=Error-Proc($ProcName)

COVERAGE_ELECT			&GSF.COVERAGE_ELECT

  if &GSF.COVERAGE_ELECT = 'E'
    let $SMOKER = 'N'
  end-if

FROM	PS_LIFE_ADD_BEN	LIFE
WHERE
    LIFE.EMPLID 			=	$EmplID
AND LIFE.EMPL_RCD 			=	#Benefit_Rcd_Nbr
AND LIFE.COVERAGE_ELECT			IN	('E','W')
AND LIFE.PLAN_TYPE			=	'22'
AND LIFE.EFFDT = (
	SELECT	MAX(EFFDT)
	FROM	PS_LIFE_ADD_BEN
	WHERE
		    EMPLID 		= 	LIFE.EMPLID
	  	AND EMPL_RCD 		= 	LIFE.EMPL_RCD
	  	AND PLAN_TYPE 		= 	LIFE.PLAN_TYPE
	  	AND BENEFIT_NBR 	= 	LIFE.BENEFIT_NBR
		AND COVERAGE_ELECT	in      ('E','W')
	  	AND EFFDT 		<= 	$AsOfDate)
end-SELECT


end-PROCEDURE	!Get-Smoker-Flag


!***********************************************************************
! Find-terminating-Life-record		!*** 7/29/2009 - Added Life/Disability
!
! This finds the life record AFTER the 'E'lected record
!
!***********************************************************************
begin-PROCEDURE Find-Terminating-Life-Record

	move 'Find-Terminating-Life-Record' to $ProcName

  let $terminated_record_found = 'N'
  let $Terminate_Date = ''

begin-select on-error=Error-Proc($ProcName)

TERM.COVERAGE_BEGIN_DT         &FTLR.terminate_date
TERM.COVERAGE_ELECT            &FTLR.terminate_coverage_elect
TERM.EFFDT                     &FTLR.effdt

  let $terminated_record_found = 'Y'


  if &FTLR.terminate_coverage_elect = 'T'

    let $Terminate_Date = DateAdd(&FTLR.effdt,'day',-1)  !** 04/29/2010 - WATSONR - Use Effective date minus one day for 'T'erms

  else

    let $Terminate_Date = DateAdd(&FTLR.terminate_date,'day',-1)

  end-if

FROM	PS_LIFE_ADD_BEN	TERM
WHERE
    TERM.EMPLID 			= 	$EmplID
AND TERM.EMPL_RCD 			= 	#Benefit_Rcd_Nbr
AND TERM.PLAN_TYPE			= 	$Plan_Type
AND TERM.EFFDT = (
	SELECT	MAX(EFFDT)
	FROM	PS_LIFE_ADD_BEN
	WHERE
		    EMPLID 		= 	TERM.EMPLID
	  	AND EMPL_RCD 		= 	TERM.EMPL_RCD
	  	AND PLAN_TYPE 		= 	TERM.PLAN_TYPE
	  	AND BENEFIT_NBR 	= 	TERM.BENEFIT_NBR
                AND EFFDT		>	&GLCD.EFFDT
	  	AND EFFDT 		<= 	$AsOfDate)
end-select

end-PROCEDURE	!Find-Terminating-Life-Record


!***********************************************************************
! Get-Life-Coverage-Amount		!*** 7/29/2009 - Added Life/Disability
!
! Returns the amount of coverage for the employee's life insurance
!
!***********************************************************************
begin-PROCEDURE Get-Life-Coverage-Amount

	move 'Get-Life-Coverage-Amount' to $ProcName

  LET #Amount = 0

begin-select on-error=Error-Proc($ProcName)

!LIFE.LIFE_ADD_COVRG        &GLCA.LIFE_ADD_COVRG	!*** Doesn't exist at UofA
!LIFE.FLAT_AMOUNT           &GLCA.FLAT_AMOUNT		!*** Doesn't exist at UofA
LIFE.BN_FORMULA_ID         &GLCA.BN_FORMULA_ID		!*** Added for UofA

  let $bn_formula_id = &GLCA.BN_FORMULA_ID		!*** Added for UofA

  !*********  LIFE_ADD_COVRG Values **********
  ! 1 Flat Amt   Flat Amount Only
  ! 2 Fctr x Sal Factor x Salary + Flat Amt
  ! 3 Empl Rcd   Specified in Employee Record
  ! 4 Spec Calc  Special Calculation Routine
  ! 5 Sum DepCvg Sum of Dependent Coverage
  !*******************************************

  !************ Not used at UofA ************
  !EVALUATE &GLCA.LIFE_ADD_COVRG
  !   WHEN = '1'
  !     let #Amount = &GLCA.FLAT_AMOUNT
  !      BREAK
  !   WHEN = '3'
  !     let #Amount = #Employee_Flat_Amount
  !      BREAK
  !   WHEN-OTHER
  !     let #Amount = 0
  !END-EVALUATE
  !************ Not used at UofA ************

  do Get-BN-Formula-Amount

FROM PS_LIFE_ADD_TBL LIFE

WHERE LIFE.PLAN_TYPE    = $Plan_Type
  AND LIFE.BENEFIT_PLAN = $Benefit_Plan
  AND LIFE.EFFDT = (SELECT MAX(EFFDT)
                      FROM PS_LIFE_ADD_TBL
                     WHERE PLAN_TYPE    = LIFE.PLAN_TYPE
                       AND BENEFIT_PLAN = LIFE.BENEFIT_PLAN
                       AND EFFDT       <= $AsOfDate)
end-select

end-PROCEDURE	!Get-Life-Coverage-Amount


!***********************************************************************
! Get-BN-Formula-Amount		!*** 7/29/2009 - Added Life/Disability  -- Not used at ASU
!
! Returns the amount of coverage for the employee's life insurance
!
!***********************************************************************
begin-PROCEDURE Get-BN-Formula-Amount

  let #Amount = 0

begin-SELECT

BN_ENTRY_TYP		&GBFA.BN_ENTRY_TYP
BN_VALUE		&GBFA.BN_VALUE

  if &GBFA.BN_ENTRY_TYP = 'CNST' and #Amount = 0
    let #Amount = &GBFA.BN_VALUE
  else
    let $Output_Text = 'EMPLID ' || $EMPLID || ' Plan Type ' || $Plan_Type  ||' Benefit Plan ' || $Benefit_Plan || ' has an invalid formula ' || $bn_formula_id ||'.'
    let $Error_Type = 'Error'
    do Write-CSV-Record
  end-if

FROM PS_BN_FORM_DEF BFD
WHERE BN_FORMULA_ID = $bn_formula_id
  AND EFFDT = (SELECT MAX(EFFDT)
                 FROM PS_BN_FORMULA
                WHERE BN_FORMULA_ID = BFD.BN_FORMULA_ID
                  AND EFFDT        <= $AsOfDate)
end-SELECT

end-PROCEDURE	!Get-BN-Formula-Amount


!******************************************************************************
! Get-STD-Coverage-Data
!
!  Get the most recent 'E'lected disability records
!  even if not the latest ps_disability_ben record
!
!******************************************************************************
begin-PROCEDURE Get-STD-Coverage-Data

	move 'Get-STD-Coverage-Data' to $ProcName

begin-SELECT DISTINCT on-error=Error-Proc($ProcName)

DIS.PLAN_TYPE				&GSCD.PLAN_TYPE
DIS.BENEFIT_NBR				&GSCD.BENEFIT_NBR
DIS.EFFDT				&GSCD.EFFDT
DIS.COVERAGE_ELECT			&GSCD.COVERAGE_ELECT
DIS.COVERAGE_BEGIN_DT			&GSCD.COVERAGE_BEGIN_DT
DIS.COVERAGE_END_DT			&GSCD.COVERAGE_END_DT
DIS.BENEFIT_PLAN			&GSCD.BENEFIT_PLAN
DIS.COVERAGE_ELECT_DT			&GSCD.COVERAGE_ELECT_DT


  LET $Plan_Type            = &GSCD.PLAN_TYPE
  LET $Benefit_Plan         = &GSCD.BENEFIT_PLAN

  !*** Start - 01/28/2010 - WATSONR - ADOA wants plans other than STDSTA to be sent as 'W'aives
  if $BENEFIT_PLAN <> 'STDSTA' and
     $BENEFIT_PLAN <> 'STDST9'        !** 03/03/2011 - WATSONR - Added STDST9 plan in addition to STDSTA - HCM-1979
    let $Coverage_Elect = 'W'
  else
    let $Coverage_Elect = &GSCD.COVERAGE_ELECT
  end-if
  !*** End - 01/28/2010 - WATSONR - ADOA wants plans other than stdsta to be sent as 'W'aives

  LET $UA_INTF_PLAN_TYPE = 'DI'
  if $Coverage_Elect = 'E'            !*** 01/28/2010 - WATSONR - Replaced &GSCD.COVERAGE_ELECT with $Coverage_Elect
    LET $UA_INTF_PLAN_CODE = 'HSDU'   !*** HSDA for ASU
  else
    let $UA_INTF_PLAN_CODE = 'WDIS'
  end-if

  LET $UA_COVERAGE_OPT   = ' '

  let #Amount = 0
  !do Get-Disability-Coverage-Amount		!*** Not needed

  LET $Coverage_Begin_Dt = &GSCD.COVERAGE_BEGIN_DT
  LET $Coverage_End_Dt   = &GSCD.COVERAGE_END_DT


  do Find-Terminating-Disability-Record  !Look for a PS_disability_ben record after the 'E'lected record

  if $terminated_record_found = 'Y'


     if $Terminate_Date < $Coverage_End_Dt
               or
        (not isnull($Terminate_Date) and isnull($Coverage_End_Dt))

       let $Coverage_End_Dt = $Terminate_Date

     end-if

  else

     if $Term_Coverage_End_Dt < $Coverage_End_Dt
               or
        (not isnull($Term_Coverage_End_Dt) and isnull($Coverage_End_Dt))

       let $Coverage_End_Dt = $Term_Coverage_End_Dt

     end-if

  end-if

  if $Coverage_End_Dt > $AsOfDate
    let $Coverage_End_Dt = ''
  end-if

  let $SMOKER = ' '

  do Compare-EmpBen-Record


FROM	PS_DISABILITY_BEN	DIS
WHERE
    DIS.EMPLID 				=	$EmplID
AND DIS.EMPL_RCD 			=	#Benefit_Rcd_Nbr
AND DIS.COVERAGE_ELECT			in	('E','W')
AND DIS.PLAN_TYPE 			=	'30'
!AND DIS.BENEFIT_PLAN			=	'STDSTA'        !*** 01/28/2010 - WATSONR - ADOA wants the other benefit plans sent as waives
AND DIS.EFFDT = (
	SELECT	MAX(EFFDT)
	FROM	PS_DISABILITY_BEN
	WHERE
		    EMPLID 		= 	DIS.EMPLID
	  	AND EMPL_RCD 		= 	DIS.EMPL_RCD
	  	AND PLAN_TYPE 		= 	DIS.PLAN_TYPE
	  	AND BENEFIT_NBR 	= 	DIS.BENEFIT_NBR
		AND COVERAGE_ELECT	IN      ('E','W')
	  	AND EFFDT 		<= 	$AsOfDate)
end-SELECT

end-PROCEDURE	!Get-STD-Coverage-Data


!***********************************************************************
! Find-Terminating-Disability-record
!
! This finds the disability record AFTER the 'E'lected record
!
!***********************************************************************
begin-PROCEDURE Find-Terminating-Disability-Record

	move 'Find-Terminating-Disability-Record' to $ProcName

  let $terminated_record_found = 'N'
  let $Terminate_Date = ''

begin-select on-error=Error-Proc($ProcName)

TERM.COVERAGE_BEGIN_DT         &FTDR.terminate_date
TERM.COVERAGE_ELECT            &FTDR.terminate_coverage_elect
TERM.EFFDT                     &FTDR.effdt

  let $terminated_record_found = 'Y'

  if &FTDR.terminate_coverage_elect = 'T'

    let $Terminate_Date = DateAdd(&FTDR.effdt,'day',-1)  !** 04/29/2010 - WATSONR - Use Effective date minus one day for 'T'erms

  else

    let $Terminate_Date = DateAdd(&FTDR.terminate_date,'day',-1)

  end-if


FROM	PS_DISABILITY_BEN	TERM
WHERE
    TERM.EMPLID 			= 	$EmplID
AND TERM.EMPL_RCD 			= 	#Benefit_Rcd_Nbr
AND TERM.PLAN_TYPE			= 	$Plan_Type
AND TERM.EFFDT = (
	SELECT	MAX(EFFDT)
	FROM	PS_DISABILITY_BEN
	WHERE
		    EMPLID 		= 	TERM.EMPLID
	  	AND EMPL_RCD 		= 	TERM.EMPL_RCD
	  	AND PLAN_TYPE 		= 	TERM.PLAN_TYPE
	  	AND BENEFIT_NBR 	= 	TERM.BENEFIT_NBR
                AND EFFDT		>	&GSCD.EFFDT
	  	AND EFFDT 		<= 	$AsOfDate)
end-select

end-PROCEDURE	!Find-Terminating-Disability-Record


!******************************************************************************
! Get-LTD-Coverage-Data
!
!  Get the most recent 'E'lected disability records
!  even if not the latest ps_disability_ben record
!
!******************************************************************************
begin-PROCEDURE Get-LTD-Coverage-Data

	move 'Get-LTD-Coverage-Data' to $ProcName

begin-SELECT DISTINCT on-error=Error-Proc($ProcName)

RET.PLAN_TYPE				&GLDCD.PLAN_TYPE
RET.BENEFIT_NBR				&GLDCD.BENEFIT_NBR
RET.EFFDT				&GLDCD.EFFDT
RET.COVERAGE_ELECT			&GLDCD.COVERAGE_ELECT
RET.EFFDT				&GLDCD.COVERAGE_BEGIN_DT
RET.DEDUCTION_END_DT			&GLDCD.COVERAGE_END_DT
RET.BENEFIT_PLAN			&GLDCD.BENEFIT_PLAN
RET.COVERAGE_ELECT_DT			&GLDCD.COVERAGE_ELECT_DT


  LET $Plan_Type            = &GLDCD.PLAN_TYPE
  LET $Benefit_Plan         = &GLDCD.BENEFIT_PLAN


  LET $UA_INTF_PLAN_TYPE = 'DI'
  LET $UA_INTF_PLAN_CODE = 'HLDU'   !*** HLDA for ASU


  LET $UA_COVERAGE_OPT   = ' '

  let #Amount = 0
  !do Get-Disability-Coverage-Amount		!*** Not needed

  LET $Coverage_Begin_Dt = &GLDCD.COVERAGE_BEGIN_DT
  LET $Coverage_End_Dt   = &GLDCD.COVERAGE_END_DT


  do Find-Terminating-LTD-Record  !Look for a PS_RTRMNT_PLAN record after the 'E'lected

  if $terminated_record_found = 'Y'


     if $Terminate_Date < $Coverage_End_Dt
               or
        (not isnull($Terminate_Date) and isnull($Coverage_End_Dt))

       let $Coverage_End_Dt = $Terminate_Date

     end-if

  else

     if $Term_Coverage_End_Dt < $Coverage_End_Dt
               or
        (not isnull($Term_Coverage_End_Dt) and isnull($Coverage_End_Dt))

       let $Coverage_End_Dt = $Term_Coverage_End_Dt

     end-if

  end-if

  if $Coverage_End_Dt > $AsOfDate
    let $Coverage_End_Dt = ''
  end-if

  let $SMOKER = ' '

  do Compare-EmpBen-Record


FROM	PS_RTRMNT_PLAN	RET
WHERE
    RET.EMPLID 				=	$EmplID
AND RET.EMPL_RCD 			=	#Benefit_Rcd_Nbr
AND RET.COVERAGE_ELECT			=	'E'
AND RET.PLAN_TYPE 			in	('7M','7N')
AND RET.BENEFIT_PLAN			=	'LTDSTA'
AND RET.EFFDT = (
	SELECT	MAX(EFFDT)
	FROM	PS_RTRMNT_PLAN
	WHERE
		    EMPLID 		= 	RET.EMPLID
	  	AND EMPL_RCD 		= 	RET.EMPL_RCD
	  	AND PLAN_TYPE 		= 	RET.PLAN_TYPE
	  	AND BENEFIT_NBR 	= 	RET.BENEFIT_NBR
		AND COVERAGE_ELECT	in      'E'
	  	AND EFFDT 		<= 	$AsOfDate)
end-SELECT

end-PROCEDURE	!Get-LTD-Coverage-Data


!***********************************************************************
! Find-Terminating-LTD-record
!
! This finds the  record AFTER the 'E'lected record
!
!***********************************************************************
begin-PROCEDURE Find-Terminating-LTD-Record

	move 'Find-Terminating-LTD-Record' to $ProcName

  let $terminated_record_found = 'N'
  let $Terminate_Date = ''

begin-select on-error=Error-Proc($ProcName)

TERM.EFFDT         		&FTLDR.terminate_date
TERM.COVERAGE_ELECT		&FTLDR.terminate_coverage_elect

  let $terminated_record_found = 'Y'

  !*** Start - 04/29/2010 - WATSONR - Removed - Always send termination date minus 1 day
  !if &FTLDR.terminate_coverage_elect = 'T'
  !  let $Terminate_Date = &FTLDR.terminate_date
  !else
  !*** End - 04/29/2010 - WATSONR - Removed - Always send termination date minus 1 day

    let $Terminate_Date = DateAdd(&FTLDR.terminate_date,'day',-1)

  !end-if  !*** 04/29/2010 - WATSONR - Removed - Always send termination date minus 1 day

FROM	PS_RTRMNT_PLAN	TERM
WHERE
    TERM.EMPLID 			= 	$EmplID
AND TERM.EMPL_RCD 			= 	#Benefit_Rcd_Nbr
AND TERM.PLAN_TYPE			= 	$Plan_Type
AND TERM.EFFDT = (
	SELECT	MAX(EFFDT)
	FROM	PS_RTRMNT_PLAN
	WHERE
		    EMPLID 		= 	TERM.EMPLID
	  	AND EMPL_RCD 		= 	TERM.EMPL_RCD
	  	AND PLAN_TYPE 		= 	TERM.PLAN_TYPE
	  	AND BENEFIT_NBR 	= 	TERM.BENEFIT_NBR
                AND EFFDT		>	&GLDCD.EFFDT
	  	AND EFFDT 		<= 	$AsOfDate)
end-select

end-PROCEDURE	!Find-Terminating-Disability-Record


!***********************************************************************
! Get-Minimum-Dependent-Effdt
!
! Select the previous effective date of the employee's active coverage
!
!***********************************************************************
begin-PROCEDURE Get-Minimum-Dependent-Effdt

	move 'Get-Minimum-Dependent-Effdt' to $ProcName

 let $Minimum_Dependent_Effdt = StrToDate('1900-01-01','YYYY-MM-DD')


begin-SELECT on-error=Error-Proc($ProcName)

HB.EFFDT				&GMDE.EFFDT

  let $Minimum_Dependent_Effdt = &GMDE.EFFDT

FROM	PS_HEALTH_BENEFIT	HB
WHERE
    HB.EMPLID 				= 	$EmplID
AND HB.EMPL_RCD 			= 	#Benefit_Rcd_Nbr
AND HB.PLAN_TYPE			= 	$Plan_Type
AND HB.BENEFIT_NBR 			=	&GECD.BENEFIT_NBR
AND HB.COVERAGE_ELECT			in      ('E','W')             !*** 04/29/2010 - WATSONR - Changed "= 'E'" to "in ('E','W')"
AND HB.EFFDT = (
	SELECT	MAX(EFFDT)
	FROM	PS_HEALTH_BENEFIT
	WHERE
		    EMPLID 		= 	HB.EMPLID
	  	AND EMPL_RCD 		= 	HB.EMPL_RCD
	  	AND COBRA_EVENT_ID 	= 	HB.COBRA_EVENT_ID
	  	AND PLAN_TYPE 		= 	HB.PLAN_TYPE
	  	AND BENEFIT_NBR 	= 	HB.BENEFIT_NBR
		AND COVERAGE_ELECT	in      ('E','W')             !*** 04/29/2010 - WATSONR - Changed "= 'E'" to "in ('E','W')"
	  	AND EFFDT 		< 	&GECD.EFFDT)
end-SELECT

end-PROCEDURE	!Get-Minimum-Dependent-Effdt


!***********************************************************************
! Find-terminating-record
!
! This finds the medical/dental record AFTER the 'E'lected or 'W'aived record
!
!***********************************************************************
begin-PROCEDURE Find-Terminating-Record

	move 'Find-Terminating-Record' to $ProcName

  let $terminated_record_found = 'N'
  let $Terminate_Date = ''

begin-select on-error=Error-Proc($ProcName)

TERM.COVERAGE_BEGIN_DT         &terminate_date
TERM.COVERAGE_ELECT            &terminate_coverage_elect
TERM.EFFDT                     &FTR.effdt

  let $terminated_record_found = 'Y'


  if &terminate_coverage_elect = 'T'

    let $Terminate_Date = DateAdd(&FTR.effdt,'day',-1)   !** 04/29/2010 - WATSONR - Use Effective date minus one day for 'T'erms

  else

    let $Terminate_Date = DateAdd(&terminate_date,'day',-1)

  end-if

FROM	PS_HEALTH_BENEFIT	TERM
WHERE
    TERM.EMPLID 			= 	$EmplID
AND TERM.EMPL_RCD 			= 	#Benefit_Rcd_Nbr
AND TERM.PLAN_TYPE			= 	$Plan_Type
AND TERM.EFFDT = (
	SELECT	MAX(EFFDT)
	FROM	PS_HEALTH_BENEFIT
	WHERE
		    EMPLID 		= 	TERM.EMPLID
	  	AND EMPL_RCD 		= 	TERM.EMPL_RCD
	  	AND COBRA_EVENT_ID 	= 	TERM.COBRA_EVENT_ID
	  	AND PLAN_TYPE 		= 	TERM.PLAN_TYPE
	  	AND BENEFIT_NBR 	= 	TERM.BENEFIT_NBR
                AND EFFDT		>	&GECD.EFFDT
	  	AND EFFDT 		<= 	$AsOfDate)
end-select

end-PROCEDURE	!Find-Terminating-Record


!******************************************************************************
! Select-Dependents
!  Selects the dependents of employees enrolled in Medical and/or Vision benefits.
!******************************************************************************
begin-PROCEDURE Select-Dependents

	move 'Select-Dependents' to $ProcName


begin-SELECT DISTINCT on-error=Error-Proc($ProcName)

DB.DEPENDENT_BENEF		&SD.DEPENDENT_BENEF
DB.BIRTHDATE			&SD.BIRTHDATE
DBN.LAST_NAME			&SD.LAST_NAME
DBN.FIRST_NAME			&SD.FIRST_NAME
substr(DBN.MIDDLE_NAME,1,1)	&SD.MIDDLE_NAME
DBN.NAME_SUFFIX			&SD.NAME_SUFFIX
DBE.RELATIONSHIP		&SD.RELATIONSHIP
DBE.DEP_BENEF_TYPE		&SD.DEP_BENEF_TYPE
DBE.SEX				&SD.SEX
DBE.SMOKER			&SD.SMOKER
DBE.STUDENT			&SD.STUDENT
DBE.DISABLED			&SD.DISABLED

  let $Plan_Type  = ''

  move &SD.DEPENDENT_BENEF	to $DEPENDENT_BENEF
  move &SD.BIRTHDATE		to $BIRTHDATE
  let  $LAST_NAME 		= upper(&SD.LAST_NAME)
  let  $FIRST_NAME 		= upper(&SD.FIRST_NAME)
  let  $MIDDLE_INITIAL 		= upper(&SD.MIDDLE_NAME)
  let  $NAME_SUFFIX 		= upper(&SD.NAME_SUFFIX)   !Replaced move with upper() WATSONR 01/28/2010 ! move &SD.NAME_SUFFIX    	to $NAME_SUFFIX
  move &SD.RELATIONSHIP		to $RELATIONSHIP
  move &SD.DEP_BENEF_TYPE	to $DEP_BENEF_TYPE
  move &SD.SEX			to $SEX
  move &SD.SMOKER		to $SMOKER
  move &SD.STUDENT		to $STUDENT
  move &SD.DISABLED		to $DISABLED


  do Get-Dependent-SSN

  do Format-Dependent-Data

  if $UA_RELATIONSHIP <> ' '   !* Only include dependents who have a valid relationship

    do Compare-Dep-Record
    do Get-Dep-Coverage-Data   ! HCM-4669 - shimel - Changed Get-DEP-Coverage-Data to Get-Dep-Coverage-Data for consistency

  end-if


FROM  PS_DEP_BEN		DB
     ,PS_DEP_BEN_NAME		DBN
     ,PS_DEP_BEN_EFF		DBE

WHERE	DB.EMPLID          = $EmplID
  AND	DB.EMPLID          = DBN.EMPLID
  AND   DB.DEPENDENT_BENEF = DBN.DEPENDENT_BENEF
  AND	DB.EMPLID          = DBE.EMPLID
  AND   DB.DEPENDENT_BENEF = DBE.DEPENDENT_BENEF
  AND	DBN.EFFDT = (SELECT MAX(EFFDT)
                       FROM PS_DEP_BEN_NAME
                      WHERE EMPLID          = DBN.EMPLID
                        AND DEPENDENT_BENEF = DBN.DEPENDENT_BENEF
                        AND EFFDT          <= $AsOfDate)
  AND	DBE.EFFDT = (SELECT MAX(EFFDT)
                       FROM PS_DEP_BEN_EFF
                      WHERE EMPLID          = DBE.EMPLID
                        AND DEPENDENT_BENEF = DBE.DEPENDENT_BENEF
                        AND RELATIONSHIP not in ('O','R')              !** 10/15/2010 - WATSONR - use the most recent dependent record with a valid relationship - HCM-1343
                        AND EFFDT          <= $AsOfDate)
  !**** Start - 04/29/2010 - - WATSONR - Added select from ps_health_benefit
  AND	EXISTS (SELECT 'X'
		  FROM	PS_HEALTH_BENEFIT	HB,
			PS_HEALTH_DEPENDNT	HD
		 WHERE	HB.EMPLID          = DBE.EMPLID
		   AND	HD.DEPENDENT_BENEF = DBE.DEPENDENT_BENEF
		   AND	HB.EMPLID          = HD.EMPLID
		   AND	HB.EMPL_RCD        = HD.EMPL_RCD
		   AND	HB.COBRA_EVENT_ID  = HD.COBRA_EVENT_ID
		   AND	HB.PLAN_TYPE       = HD.PLAN_TYPE
		   AND	HB.BENEFIT_NBR     = HD.BENEFIT_NBR
		   AND	HB.EFFDT           = HD.EFFDT
		   AND	HB.PLAN_TYPE       in ('10','11','14')
		   AND	HB.COVERAGE_ELECT  = 'E'
                   AND  HB.EFFDT          <= $AsOfDate)
  !**** End - 04/29/2010 - WATSONR - Added select from ps_health_benefit
  !  AND   DBE.DEP_BENEF_TYPE IN ('D','O')   !** 09/20/2010 - WATSONR - Removed check for dep_benef_type.  The exists above will determine current or prior dependent status. - HCM-1343
end-SELECT

end-PROCEDURE	!Select-Dependents


!******************************************************************************
! Get-Dependent-SSN
!
!******************************************************************************
begin-PROCEDURE Get-Dependent-SSN

	move 'Get-Dependent-SSN' to $ProcName

  let $Dependent_SSN = ' '

begin-SELECT on-error=Error-Proc($ProcName)

NATIONAL_ID			&GDS.SSN


  let $Dependent_SSN = &GDS.SSN

  !** Start - 12/07/2011 - WATSONR - Added SSN edits - HCM-3586
  if $Dependent_SSN = 'XXXXXXXXX'
    let $Dependent_SSN = '999999999'
  end-if
  !** End - 12/07/2011 - WATSONR - Added SSN edits - HCM-3586


FROM  PS_DEP_BENEF_NID	NID

WHERE	NID.EMPLID          = $EmplID
  AND	NID.DEPENDENT_BENEF = $DEPENDENT_BENEF
  AND   NID.NATIONAL_ID_TYPE = 'PR'
  AND	NID.PRIMARY_NID      = 'Y'
  AND EXISTS(SELECT 'X' FROM PS_HEALTH_DEPENDNT
               WHERE EMPLID          = NID.EMPLID
                 AND DEPENDENT_BENEF = NID.DEPENDENT_BENEF
                 AND PLAN_TYPE IN ('10','11','14'))  !Exclude dependents who haven't been covered

end-SELECT

end-PROCEDURE !Get-Dependent-SSN


!******************************************************************************
! Get-Dep-Coverage-Data
!
!  Selects benefit data for the current dependent from PS_HEALTH_DEPENDNT.
!
!******************************************************************************
begin-PROCEDURE Get-Dep-Coverage-Data

	move 'Get-Dep-Coverage-Data' to $ProcName

  let #Amount = 0

begin-SELECT DISTINCT on-error=Error-Proc($ProcName)

HB.EMPL_RCD				&GDCD.EMPL_RCD
HB.COBRA_EVENT_ID			&GDCD.COBRA_EVENT_ID
HB.PLAN_TYPE				&GDCD.PLAN_TYPE
HB.BENEFIT_NBR				&GDCD.BENEFIT_NBR
HB.EFFDT				&GDCD.EFFDT
HB.COVERAGE_ELECT			&GDCD.COVERAGE_ELECT
HB.COVERAGE_BEGIN_DT			&GDCD.COVERAGE_BEGIN_DT
HB.COVERAGE_END_DT			&GDCD.COVERAGE_END_DT
HB.BENEFIT_PLAN				&GDCD.BENEFIT_PLAN
HB.COVRG_CD				&GDCD.COVRG_CD
HB.COVERAGE_ELECT_DT			&GDCD.COVERAGE_ELECT_DT


  LET $Plan_Type                = &GDCD.PLAN_TYPE
  LET $Benefit_Plan             = &GDCD.BENEFIT_PLAN
  LET $Covrg_Cd                 = &GDCD.COVRG_CD


  LET #Plan_Data_Empl_Rcd       = &GDCD.EMPL_RCD
  LET #Plan_Data_Cobra_Event_Id = &GDCD.COBRA_EVENT_ID
  LET #Plan_Data_Benefit_Nbr    = &GDCD.BENEFIT_NBR
  LET $Plan_Data_Effdt          = &GDCD.COVERAGE_BEGIN_DT          !** 01/10/2011 - WATSONR - Changed &GDCD.EFFDT to &GDCD.COVERAGE_BEGIN_DT. - HCM-1679

  let $SMOKER = ' '    !*** Added 08/19/2009

  LET $Error_Text = ''

  !** Start - 01/10/2011 - WATSONR - Send non-ADOA plans as Waives = HCM-1679
  if substr($Benefit_Plan,1,2) = 'UA'
    LET $Coverage_Elect = 'W'
  else
    !** End - 01/10/2011 - WATSONR - Send non-ADOA plans as Waives = HCM-1679

    LET $Coverage_Elect		= &GDCD.COVERAGE_ELECT

  end-if!** End - 01/10/2011 - WATSONR - Send non-ADOA plans as Waives = HCM-1679

  !do Lookup-Plan-Data    !**** 01/28/2010 - WATSONR - Lookup plan data after getting coverage end date

  LET $Coverage_Begin_Dt = &GDCD.COVERAGE_BEGIN_DT

  !**** Start - 04/29/2010 - WATSONR - Moved get-ee-coverage-begin-dt after lookup-plan-data to fix dependent issue
  !do Get-EE-Coverage-Begin-Dt
  !if isnull($EFFDT)
  !  let $EFFDT = &GDCD.COVERAGE_BEGIN_DT
  !end-if
  !**** End - 04/29/2010 - WATSONR - Moved get-ee-coverage-begin-dt after lookup-plan-data to fix dependent issue

  if $Plan_Type = '10'

    if $Employee_Medical_Effdt = &GDCD.EFFDT
      let $Coverage_End_Dt = $Employee_Medical_End_Dt
    else
      let $Coverage_End_Dt = DateAdd($Employee_Medical_Begin_Dt,'day',-1)
    end-if

  end-if

  if $Plan_Type = '11'

    if $Employee_Dental_Effdt = &GDCD.EFFDT
      let $Coverage_End_Dt = $Employee_Dental_End_Dt
    else
      let $Coverage_End_Dt = DateAdd($Employee_Dental_Begin_Dt,'day',-1)
    end-if

  end-if


  if $Plan_Type = '14'

    if $Employee_Vision_Effdt = &GDCD.EFFDT
      let $Coverage_End_Dt = $Employee_Vision_End_Dt
    else
      let $Coverage_End_Dt = DateAdd($Employee_Vision_Begin_Dt,'day',-1)
    end-if

  end-if


  !**** Start - 01/28/2010 - WATSONR - If coverage is active and elected prior to the last OE, use the last OE Date
  if $Coverage_Begin_Dt < $Last_OE_Date and (isnull($Coverage_End_Dt) or $Coverage_End_Dt > $Last_OE_Date)  
     !LET $Coverage_Begin_Dt = $Last_OE_Date               !** 10/19/2010 - WATSONR - don't update dependent coverage begin date - HRP-15
     LET $Plan_Data_Effdt   = $Last_OE_Date
     !LET $Effdt             = $Last_OE_Date               !** 10/19/2010 - WATSONR - don't update employee coverage begin date - HRP-15
  end-if

  !**** Begin - HCM-4669 - shimel - If employee coverage is waived, set dependent coverage to waived
  if $Coverage_Begin_Dt < $Last_OE_Date and not isnull($Coverage_End_Dt) and $Coverage_End_Dt < $Last_OE_Date and &GECD.COVERAGE_ELECT = 'W'
    DO check-for-dep-stop-records-sent
    IF $previous_dep_stop_sent = 'N'
      LET $Coverage_Elect = 'W'
    END-IF
  end-if
  !**** End - HCM-4669 - shimel - If employee coverage is waived, set dependent coverage to waived
    do Lookup-Plan-Data
  !**** End - 01/28/2010 - WATSONR - If coverage is active and elected prior to the last OE, use the last OE Date


  !**** Start - 04/29/2010 - WATSONR - Moved get-ee-coverage-begin-dt after lookup-plan-data to fix dependent issue
  do Get-EE-Coverage-Begin-Dt
  if isnull($EFFDT)
    let $EFFDT = &GDCD.COVERAGE_BEGIN_DT
  end-if
  !**** End - 04/29/2010 - WATSONR - Moved get-ee-coverage-begin-dt after lookup-plan-data to fix dependent issue

  if isnull($Error_Text)

    do Compare-DepBen-Record

  end-if


FROM	 PS_HEALTH_BENEFIT	HB
	,PS_HEALTH_DEPENDNT	HD
WHERE
    HB.EMPLID 		=	$EmplID
AND HB.EMPL_RCD 	=	#Benefit_Rcd_Nbr
AND HD.DEPENDENT_BENEF 	= 	$Dependent_Benef
AND HB.COVERAGE_ELECT	=	'E'
AND HB.PLAN_TYPE 	IN	('10', '11', '14')
AND HB.EMPLID 		= 	HD.EMPLID
AND HB.EMPL_RCD 	= 	HD.EMPL_RCD
AND HB.COBRA_EVENT_ID 	= 	HD.COBRA_EVENT_ID
AND HB.PLAN_TYPE 	= 	HD.PLAN_TYPE
AND HB.BENEFIT_NBR 	= 	HD.BENEFIT_NBR
AND HB.EFFDT 		= 	HD.EFFDT
AND ((HB.Plan_Type = '10' and HB.EFFDT >= $Minimum_Dep_Medical_Effdt)
             or
     (HB.Plan_Type = '11' and HB.EFFDT >= $Minimum_Dep_Dental_Effdt)
             or
     (HB.Plan_Type = '14' and HB.EFFDT >= $Minimum_Dep_Vision_Effdt))
AND HD.EFFDT		=
		(
		SELECT	MAX(EFFDT)
		FROM	PS_HEALTH_DEPENDNT HD2
		WHERE	EMPLID          = HD.EMPLID
		  AND	EMPL_RCD        = HD.EMPL_RCD
		  AND	COBRA_EVENT_ID  = HD.COBRA_EVENT_ID
                  AND   DEPENDENT_BENEF = HD.DEPENDENT_BENEF
		  AND	PLAN_TYPE       = HD.PLAN_TYPE
		  AND	BENEFIT_NBR     = HD.BENEFIT_NBR
		  AND	EFFDT          <= $AsOfDate
                  !** Start - 03/03/2011 - WATSONR - Don't send dependent waives for non-adoa plans - HCM-1979
                  AND NOT EXISTS(SELECT 'X' 
                                   FROM PS_HEALTH_BENEFIT
                                  WHERE EMPLID    = HD2.EMPLID
                                    AND PLAN_TYPE = HD2.PLAN_TYPE
                                    AND EFFDT     = HD2.EFFDT
                                    AND SUBSTR(BENEFIT_PLAN,1,2) = 'UA')
                  !** End - 03/03/2011 - WATSONR - Don't send dependent waives for non-adoa plans - HCM-1979
		  )
end-SELECT
end-PROCEDURE	!Get-Dep-Coverage-Data


!******************************************************************************
! Get-EE-Coverage-Begin-Dt
!
!  Gets the original coverage begin date for the employee and stores it in $EFFDT
!
!  This is used on the dependent benefit record
!
!******************************************************************************
begin-PROCEDURE Get-EE-Coverage-Begin-Dt

	move 'Get-EE-Coverage-Begin-Dt' to $ProcName

  let $EFFDT = ''

begin-SELECT on-error=Error-Proc($ProcName)

HST.COVERAGE_BEGIN_DT	&GECBD.COVERAGE_BEGIN_DT

  let $EFFDT = &GECBD.COVERAGE_BEGIN_DT

FROM PS_UA_ADOA_BENHST HST

WHERE HST.EMPLID		 = $Emplid
  AND HST.DEPENDENT_BENEF	 = ' '
  AND HST.PLAN_TYPE		 = $PLAN_TYPE
  AND HST.UA_INTF_PLAN_TYPE = $UA_INTF_PLAN_TYPE
  AND HST.UA_INTF_PLAN_CODE = $UA_INTF_PLAN_CODE
  AND HST.UA_COVERAGE_OPT   = $UA_COVERAGE_OPT
  AND HST.ASOFDATE   = (SELECT MAX(ASOFDATE)
                          FROM PS_UA_ADOA_BENHST
                         WHERE EMPLID                 = HST.EMPLID
                           AND DEPENDENT_BENEF        = HST.DEPENDENT_BENEF
                           AND PLAN_TYPE              = HST.PLAN_TYPE
  			   AND HST.UA_INTF_PLAN_TYPE = $UA_INTF_PLAN_TYPE
  			   AND HST.UA_INTF_PLAN_CODE = $UA_INTF_PLAN_CODE
  			   AND HST.UA_COVERAGE_OPT   = $UA_COVERAGE_OPT
                           AND ASOFDATE              <= $AsOfDate
                           AND UA_ADOA_CONF_FLAG    <> 'X')
  AND HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                          FROM PS_UA_ADOA_BENHST
                         WHERE EMPLID                 = HST.EMPLID
                           AND DEPENDENT_BENEF        = HST.DEPENDENT_BENEF
                           AND PLAN_TYPE              = HST.PLAN_TYPE
  			   AND HST.UA_INTF_PLAN_TYPE  = $UA_INTF_PLAN_TYPE
  			   AND HST.UA_INTF_PLAN_CODE  = $UA_INTF_PLAN_CODE
  			   AND HST.UA_COVERAGE_OPT    = $UA_COVERAGE_OPT
                           AND ASOFDATE               = HST.ASOFDATE
                           AND UA_ADOA_CONF_FLAG <> 'X')
  AND HST.UA_ADOA_CONF_FLAG <> 'X'

end-SELECT

end-PROCEDURE !Get-EE-Coverage-Begin-Dt


!******************************************************************************
! Lookup-Plan-Data
!
!  Looks up the ADOA plan type, benefit plan and coverage code.
!
!******************************************************************************
begin-PROCEDURE Lookup-Plan-Data

  MOVE ' ' TO $UA_INTF_PLAN_TYPE
  MOVE ' ' TO $UA_INTF_PLAN_CODE
  MOVE ' ' TO $UA_COVERAGE_OPT

if $Coverage_Elect = 'W'  !* Send the Waive plan type and code if coverage is waived

  EVALUATE $PLAN_TYPE
    WHEN = '10'
      LET $UA_INTF_PLAN_TYPE = 'HL'
      LET $UA_INTF_PLAN_CODE = 'WHLT'
      BREAK
    WHEN = '14'
      LET $UA_INTF_PLAN_TYPE = 'HL'
      LET $UA_INTF_PLAN_CODE = 'WVIS'
      BREAK
    WHEN = '11'
      LET $UA_INTF_PLAN_TYPE = 'DN'
      LET $UA_INTF_PLAN_CODE = 'WDNT'
      BREAK
  END-EVALUATE

else

begin-select
UA_INTF_PLAN_TYPE       &LPD.UA_INTF_PLAN_TYPE
UA_INTF_PLAN_CODE       &LPD.UA_INTF_PLAN_CODE

  MOVE &LPD.UA_INTF_PLAN_TYPE TO $UA_INTF_PLAN_TYPE
  MOVE &LPD.UA_INTF_PLAN_CODE TO $UA_INTF_PLAN_CODE

FROM PS_UA_ADOA_PLAN_CD PLAN
WHERE PLAN_TYPE    = $PLAN_TYPE
  AND BENEFIT_PLAN = $BENEFIT_PLAN
  AND EFFDT  =  (SELECT MAX(EFFDT)
                   FROM SYSADM.PS_UA_ADOA_PLAN_CD
                  WHERE PLAN_TYPE          = PLAN.PLAN_TYPE
                    AND BENEFIT_PLAN       = PLAN.BENEFIT_PLAN
                    AND EFFDT             <= $Plan_Data_Effdt)
end-select

   if $UA_INTF_PLAN_TYPE = ' '
       let $Error_Text = 'Can''t find ADOA plan data for Emplid ' || $EmplId || ' plan type: '||$PLAN_TYPE||' benefit plan: '|| $BENEFIT_PLAN
       let $Output_Text = $Error_Text
       let $Error_Type = 'Error'
       do Write-CSV-Record
   end-if



begin-select
UA_COVERAGE_OPT       &LPD.UA_COVERAGE_OPT
UA_REQ_RLTNSHP        &LPD.UA_REQ_RLTNSHP


  MOVE &LPD.UA_REQ_RLTNSHP TO $UA_REQ_RLTNSHP

  if $UA_COVERAGE_OPT = ' '

    if $UA_REQ_RLTNSHP <> ' '
      do Check-Relationship-Exists($Emplid,#Plan_Data_Empl_Rcd,#Plan_Data_Cobra_Event_Id,$PLAN_TYPE,#Plan_Data_Benefit_Nbr,$Plan_Data_Effdt,$UA_REQ_RLTNSHP,$Relationship_Exists)
      if $Relationship_Exists = 'Y'
        MOVE &LPD.UA_COVERAGE_OPT TO $UA_COVERAGE_OPT
      end-if

    else

      MOVE &LPD.UA_COVERAGE_OPT TO $UA_COVERAGE_OPT

    end-if

  end-if


FROM PS_UA_ADOA_COVRGCD CVRG
WHERE COVRG_CD   = $Covrg_Cd
  AND $PLAN_TYPE = NVL(RTRIM(PLAN_TYPE),$PLAN_TYPE)
  AND EFF_STATUS   = 'A'
  AND EFFDT  =  (SELECT MAX(EFFDT)
                   FROM SYSADM.PS_UA_ADOA_COVRGCD
                  WHERE COVRG_CD           = CVRG.COVRG_CD
                    AND UA_COVERAGE_OPT    = CVRG.UA_COVERAGE_OPT
                    AND EFFDT             <= $Plan_Data_Effdt)
ORDER BY PLAN_TYPE DESC,UA_REQ_RLTNSHP DESC
end-select


   let $Plan_Data_Effdt_Display = datetostr($Plan_Data_Effdt,'MM/DD/YYYY')


   if $UA_COVERAGE_OPT = ' '
       let $Error_Text = 'Can''t find ADOA coverage option for Emplid ' || $EmplId || ' plan type: '||$PLAN_TYPE||' coverage code: '|| $Covrg_Cd || ' Effdt: '|| $Plan_Data_Effdt_Display
       let $Output_Text = $Error_Text
       let $Error_Type = 'Error'
       do Write-CSV-Record
   end-if


end-if  !Coverage_Elect = 'W'

end-PROCEDURE	!Lookup-Plan-Data


!******************************************************************************
! Set-Date
!  Formats dates for printing
!    $In  - Input date value (unformatted)
!    $Out - Formatted date value
!******************************************************************************
begin-PROCEDURE Set-Date($In,:$Out,$Format)

	if ltrim(rtrim($In,' '),' ') <> ''
	  let $Out = edit($In,$Format)
	else
          if $Format = 'MM/DD/YYYY'
            move '00/00/0000' to $Out
          else
	    move ' ' to $Out
          end-if
	end-if

end-PROCEDURE	!Set-Date


!******************************************************************************
! Compare-Emp-Record
!
!  Compares current employee demographics to those previously sent to ADOA
!
!******************************************************************************
begin-PROCEDURE Compare-Emp-Record

   move 'Compare-Emp-Record' to $ProcName

   move 'Y' to $Change

   move 'N' to $Address_Change_Flag
   move 'N' to $Name_Change_Flag
   move 'N' to $Demographic_Change_Flag

   move 'N' to $Action_Code

   move 'Y' to $UA_INCLUDE_FLAG

begin-SELECT on-error=Error-Proc($ProcName)

HST.PROCESS_DT		&CER.PROCESS_DT
HST.ALTER_EMPLID	&CER.ALTER_EMPLID
HST.LAST_NAME		&CER.LAST_NAME
HST.FIRST_NAME		&CER.FIRST_NAME
HST.MIDDLE_NAME		&CER.MIDDLE_INITIAL
HST.ADDRESS1		&CER.ADDRESS1
HST.ADDRESS2		&CER.ADDRESS2
HST.CITY		&CER.CITY
HST.STATE		&CER.STATE
HST.POSTAL		&CER.POSTAL
HST.HOME_PHONE		&CER.HOME_PHONE
HST.HIRE_DT		&CER.HIRE_DT
HST.EFFDT		&CER.EFFDT
HST.SEX			&CER.SEX
HST.MAR_STATUS		&CER.MAR_STATUS
HST.BIRTHDATE		&CER.BIRTHDATE
HST.EXTENSION		&CER.EXTENSION
HST.SMOKER		&CER.SMOKER
HST.ANNUAL_RT		&CER.ANNUAL_RT
HST.WORK_PHONE		&CER.WORK_PHONE
HST.COMP_FREQ_SUPP	&CER.COMP_FREQ_SUPP
HST.SSN			&CER.SSN
HST.ACTION_CODE		&CER.ACTION_CODE
HST.UA_ADOA_CONF_FLAG   &CER.UA_ADOA_CONF_FLAG  !*** 01/28/2010 - WATSONR - Added confirmation flag
HST.UA_ADOA_OVRRD   &CER.UA_ADOA_OVRRD          !*** HCM-4999 - 10/23/2013 - shimel - Added UA ADOA Override field

   let $This_Process_Dt = &CER.PROCESS_DT


   if	 &CER.LAST_NAME      <> $Last_Name
      or &CER.FIRST_NAME     <> $First_Name
      or &CER.MIDDLE_INITIAL <> $Middle_Initial

      move 'Y' to $Name_Change_Flag
      move 'Y' to $Demographic_Change_Flag

   end-if



   if    &CER.ADDRESS1 	<> $Address1
      or &CER.ADDRESS2	<> $Address2
      or &CER.CITY      <> $City
      or &CER.STATE     <> $State
      or &CER.POSTAL    <> $Postal

      move 'Y' TO $Address_Change_Flag
      move 'Y' to $Demographic_Change_Flag

   end-if


   if    &CER.SEX        <> $Sex
      or &CER.MAR_STATUS <> $Mar_Status

      move 'Y' to $Demographic_Change_Flag

   end-if

   !if &CER.ACTION_CODE = 'T' and ($EMPL_STATUS = 'T' or $EMPL_STATUS = 'R')  !*** 01/28/2010 - PS_RLWATSO2 - Removed effective date from comparison
   !  let $Effective_Date = &CER.EFFDT                                        !*** 01/28/2010 - PS_RLWATSO2 - Removed effective date from comparison
   !end-if                                                                    !*** 01/28/2010 - PS_RLWATSO2 - Removed effective date from comparison


   if    &CER.BIRTHDATE = $Birthdate
     and &CER.HIRE_DT   = $Hire_Dt
!** Begin - HCM-5148 - shimel - Remove "or $IGNORE_TERM = 'Y'"
!    and (&CER.ANNUAL_RT = #Annual_Rt or $IGNORE_TERM = 'Y')  !** 10/19/2010 - WATSONR - Added annual_rt to comparison - HRP-15  ! 07/19/2011 - Ron Watson - Added "or $IGNORE_TERM = 'Y'" - HCM-2569
     and (&CER.ANNUAL_RT = #Annual_Rt)  !** HCM-5148 - 03/27/2013 - shimel - Removed "or $IGNORE_TERM = 'Y'"
!** End - HCM-5148
     !and &CER.EFFDT	= $Effective_Date  !*** 01/28/2010 - WATSONR - Removed effective date from comparison
     and &CER.SSN	= $Employee_SSN
     and NOT(&CER.ACTION_CODE <> 'T' and (($EMPL_STATUS = 'T' or $EMPL_STATUS = 'R') and $IGNORE_TERM = 'N'))
     and $Demographic_Change_Flag = 'N'

     move 'N' to $Change            !All fields are identical, so don't insert a new record in the shadow table

   else

     let $Effective_Date = StrToDate($AsOfToday,'DD-MON-YYYY')  !*** 01/28/2010 - WATSONR - Set effective date to today for changes to emp record

     if ($EMPL_STATUS = 'T' or $EMPL_STATUS = 'R') and $IGNORE_TERM = 'N'
       move 'T' to $Action_Code
     else
       move 'C' to $Action_Code
     end-if

   end-if


   !*** Don't send any changes for already terminated employees, output a warning instead

   if &CER.ACTION_CODE = 'T' and ($EMPL_STATUS = 'T' or $EMPL_STATUS = 'R') and $Change = 'Y'
     move 'N' to $UA_INCLUDE_FLAG
     let $Output_Text = 'EMPLID ' || $EMPLID || ' is a terminated employee who will not be sent to ADOA.'
     if $Name_Change_Flag = 'Y'
       let $Output_Text = $Output_Text ||'  The name has changed to ' || $First_Name ||' '|| $Middle_Initial ||' '||$Last_Name||'.'
     end-if
     if $Address_Change_Flag = 'Y'
       let $Output_Text = $Output_Text ||'  The address has changed to ' || $Address1 ||' '|| $Address2 ||' '||$City||' '||$State||' '||$Postal||'.'
     end-if
     if &CER.BIRTHDATE <> $Birthdate
       let $Birthdate_Display = edit($Birthdate,'MM/DD/YYYY')
       let $Output_Text = $Output_Text ||'  The birthdate has changed to ' || $Birthdate_Display||'.'
     end-if
     if &CER.HIRE_DT <> $Hire_Dt
       let $Hire_Dt_Display = edit($Hire_Dt,'MM/DD/YYYY')
       let $Output_Text = $Output_Text ||'  The hire date has changed to ' || $Hire_Dt_Display||'.'
     end-if
     if &CER.SSN <> $Employee_SSN
       let $Output_Text = $Output_Text ||'  The SSN has changed to ' || $Employee_SSN||'.'
     end-if
     let $Error_Type = 'Warning'
     let $Severity = 'M'		!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
     let #Resend_Count = 0		!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
     do Write-CSV-Record
   end-if


   !*** Start - 01/28/2010 - WATSONR - If the previous record was 'N'ew and not loaded by ADOA within 2 days, send another 'N'ew record
   !** let $Resend_Date = dateadd($Process_Dt,'day',-2)  !*** 09/20/2010 - WATSONR - Moved to initialization procedure - HCM-1343
   if &CER.ACTION_CODE = 'N' and &CER.UA_ADOA_CONF_FLAG = 'N' and ($This_Process_Dt <= $Resend_Date or $Change = 'Y')  !** 10/19/2010 - WATSONR - Added $Change = 'Y' -HRP-15
     move 'Y' to $Change
     move 'N' to $Action_Code
   end-if
   !*** End - 01/28/2010 - WATSONR - If the previous record was 'N'ew and not yet loaded by ADOA, send another 'N'ew record


FROM	PS_UA_ADOA_EMPHST	HST

WHERE	HST.EMPLID     = $EmplID
  AND   HST.ASOFDATE   = (SELECT MAX(ASOFDATE)
                            FROM PS_UA_ADOA_EMPHST
                           WHERE EMPLID           = HST.EMPLID
                             AND ASOFDATE        <= $AsOfDate
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND   HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                            FROM PS_UA_ADOA_EMPHST
                           WHERE EMPLID           = HST.EMPLID
                             AND ASOFDATE         = HST.ASOFDATE
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND	HST.UA_ADOA_CONF_FLAG <> 'X'
end-SELECT

! HCM-4999 - Begin - Set $Change to N if $Change = Y and UA_ADOA_OVRRD = Y
  IF $Change = 'Y' and &CER.UA_ADOA_OVRRD = 'Y'
    LET $Change = 'N'
  END-IF
! HCM-4999 - End
  if $Change = 'Y'
    do Insert-Into-EMPHST
  else
    do Set-EMPHST-Include-Flag
  end-if

end-PROCEDURE	!Compare-Emp-Record


!******************************************************************************
! Compare-EmpBen-Record
!
!  Compares current employee benefit elections to those previously sent to ADOA
!
!******************************************************************************
begin-PROCEDURE Compare-EmpBen-Record

   move 'Compare-EmpBen-Record' to $ProcName

   move 'Y' to $Change
   move ''  to $Effdt
   move ' ' to $Dependent_Benef
   move 'A' to $Action_Code
   move ''  to $Previous_Action_Code


   do Get-Vendor-Effdt  !*** 01/28/2010 - WATSONR - Get effective date of the plan_type/benefit_plan (updated when the vendor at adoa changes)

begin-SELECT on-error=Error-Proc($ProcName)

HST.PROCESS_DT		&CEBR.PROCESS_DT
HST.ALTER_EMPLID	&CEBR.ALTER_EMPLID
HST.UA_INTF_PLAN_TYPE   &CEBR.UA_INTF_PLAN_TYPE
HST.UA_INTF_PLAN_CODE   &CEBR.UA_INTF_PLAN_CODE
HST.UA_COVERAGE_OPT     &CEBR.UA_COVERAGE_OPT
HST.AMOUNT		&CEBR.AMOUNT			!*** 07/29/2009 - Added Life/Disability
HST.COVERAGE_BEGIN_DT   &CEBR.COVERAGE_BEGIN_DT
HST.COVERAGE_END_DT     &CEBR.COVERAGE_END_DT
HST.SMOKER		&CEBR.SMOKER
HST.ACTION_CODE		&CEBR.ACTION_CODE
HST.UA_ADOA_OVRRD   &CEBR.UA_ADOA_OVRRD  !*** HCM-4999 - 10/23/2013 - shimel - Added UA ADOA Override field

   let $Previous_Action_Code = &CEBR.ACTION_CODE
   let $This_Process_Dt = &CEBR.PROCESS_DT

   if not isnull($Coverage_End_dt) and $Coverage_End_Dt <= $sysdate  !** 07/19/2011 - WATSONR - Changed $AsOfDate to $sysdate - HCM-2569
     let $Action_Code = 'S'
   end-if


   if    &CEBR.UA_INTF_PLAN_TYPE = $UA_INTF_PLAN_TYPE
     and &CEBR.UA_INTF_PLAN_CODE = $UA_INTF_PLAN_CODE
     and &CEBR.UA_COVERAGE_OPT   = $UA_COVERAGE_OPT
     !and &CEBR.SMOKER            = $SMOKER             !** 09/20/2010 - WATSONR - Removed - Always send a blank smoker flag for supp life - HCM-1135
     and &CEBR.AMOUNT		 = #Amount		!*** 07/29/2009 - Added Life/Disability
     and ($Previous_Action_Code  = $Action_Code or
         ($Previous_Action_Code  <> 'S' and $Action_Code <> 'S') or
         ($Previous_Action_Code = 'S' and not isnull($Coverage_End_dt) and $Coverage_End_Dt > $sysdate and $Coverage_End_Dt <= $AsOfDate))  !** 07/19/2011 - WATSONR - Added - HCM-2569

     move 'N' to $Change            !Coverage hasn't changed, so don't insert a new record in the shadow table

   end-if


   !**** Start - Added correction of coverage begin date and check for changes in benefit costs

   let $Previous_UA_Coverage_Opt  = &CEBR.UA_COVERAGE_OPT
   let $Previous_Coverage_Begin_Dt = &CEBR.COVERAGE_BEGIN_DT


   do Get-ADOA-Coverage-Begin-Date


   if not isnull($ADOA_Coverage_Begin_Dt) and $ADOA_Coverage_Begin_Dt <> $Previous_Coverage_Begin_Dt !and $ADOA_Coverage_Begin_Dt >= $Last_OE_Date  !**** 04/29/2010 - WATSONR - Replaced $Minimum_ADOA_Begin_Dt with $Last_OE_Date  !** 10/19/2010 - WATSONR - Removed comparison with last_oe_date - HRP-15

               if $Emplid = $Test_Emplid
                  let $Previous_Coverage_Begin_Dt_Display = edit($Previous_Coverage_Begin_Dt,'MM/DD/YYYY')
                  let $ADOA_Coverage_Begin_Dt_Display     = edit($ADOA_Coverage_Begin_Dt,'MM/DD/YYYY')
                  show '******* Changed Previous Coverage begin date from ' $Previous_Coverage_Begin_Dt_Display ' to ADOA begin date ' $ADOA_Coverage_Begin_Dt_Display ' for emplid ' $Emplid ' plan type ' $Plan_Type ' *******'
               end-if

     let $Previous_Coverage_Begin_Dt = $ADOA_Coverage_Begin_Dt

   end-if


   !**** If the coverage hasn't changed and the previous coverage isn't term'd, see if the cost has changed
   if $Change = 'N' and $Previous_Action_Code = 'A'

     do Get-Cost-Effective-Date

     if $Cost_Effdt > $Previous_Coverage_Begin_Dt and 1 = 2       !** Cost changes are currently disabled

       move 'Y' to $Change

       if $Coverage_Begin_Dt <> $Cost_Effdt

                 if $Emplid = $Test_Emplid
                    let $Coverage_Begin_Dt_Display      = edit($Coverage_Begin_Dt,'MM/DD/YYYY')
                    let $Cost_Effdt_Display = edit($Cost_Effdt,'MM/DD/YYYY')
                    show '******* Changed Coverage begin date from ' $Coverage_Begin_Dt_Display ' to Cost Effdt ' $Cost_Effdt_Display ' for emplid ' $Emplid ' plan type ' $Plan_Type ' *******'
                 end-if

         let $Coverage_Begin_Dt = $Cost_Effdt

       end-if

     end-if

   end-if

   !**** End - Added correction of coverage begin date and new check for changes in benefit costs



   !**** Start - 01/28/2010 - WATSONR - If the coverage hasn't changed and the previous coverage isn't term'd, see if the vendor has changed

   if $Change = 'N' and $Previous_Action_Code = 'A' and $Vendor_Effdt > $Previous_Coverage_Begin_Dt and $This_Process_Dt <= $Resend_Date  !** 09/20/2010 - WATSONR - Added "and $This_Process_Dt <= $Resend_Date" - HCM-1343

     move 'Y' to $Change

     let $Coverage_Begin_Dt = $Vendor_Effdt

   end-if


   !**** End - 01/28/2010 - WATSONR - If the coverage hasn't changed and the previous coverage isn't term'd, see if the vendor has changed



   !**** Start - 04/29/2010 - WATSONR - If the coverage hasn't changed and the previous coverage isn't term'd, see if coverage begin date is prior to the last OE

   if $Change = 'N' and $Previous_Action_Code = 'A' and $Last_OE_Date > $Previous_Coverage_Begin_Dt and 1 = 2   !** 10/19/2010 - WATSONR - Added 1 = 2 to disable the automatic resend of active benefits on the OE date - HRP-15

     move 'Y' to $Change


               if $Emplid = $Test_Emplid
                  let $Coverage_Begin_Dt_Display = edit($Coverage_Begin_Dt,'MM/DD/YYYY')
                  let $Last_OE_Date_Display      = edit($Last_OE_Date,'MM/DD/YYYY')
                  show '******* Changed Coverage begin date from ' $Coverage_Begin_Dt_Display ' to Last OE date ' $Last_OE_Date_Display ' for emplid ' $Emplid ' plan type ' $Plan_Type ' *******'
               end-if

     let $Coverage_Begin_Dt = $Last_OE_Date

   end-if

   !**** End - 04/29/2010 - WATSONR - If the coverage hasn't changed and the previous coverage isn't term'd, see if coverage begin date is prior to the last OE


FROM	PS_UA_ADOA_BENHST	HST

WHERE	HST.EMPLID             = $EmplID
  AND   HST.DEPENDENT_BENEF    = ' '
  AND   HST.PLAN_TYPE          = $PLAN_TYPE
  AND   HST.ASOFDATE   = (SELECT MAX(ASOFDATE)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND ASOFDATE          <= $AsOfDate
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND   HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND ASOFDATE           = HST.ASOFDATE
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND   HST.SEQNO      = (SELECT MAX(SEQNO)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND PROCESS_DT         = HST.PROCESS_DT
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND	HST.UA_ADOA_CONF_FLAG <> 'X'
end-SELECT

! HCM-4999 - Begin - Set $Change to N if $Change = Y and UA_ADOA_OVRRD = Y
  IF $Change = 'Y' and &CEBR.UA_ADOA_OVRRD = 'Y'
    LET $Change = 'N'
  END-IF
! HCM-4999 - End


  if $Change = 'Y'

    let $UA_INCLUDE_FLAG = 'Y'

    !*** Start - 01/28/2010 - WATSONR - Added check for vendor effective date

    if $Coverage_Begin_Dt < $Vendor_Effdt

               if $Emplid = $Test_Emplid
                  let $Coverage_Begin_Dt_Display = edit($Coverage_Begin_Dt,'MM/DD/YYYY')
                  let $Vendor_Effdt_Display      = edit($Vendor_Effdt,'MM/DD/YYYY')
                  show '******* Changed Coverage begin date from ' $Coverage_Begin_Dt_Display ' to Vendor Effective date ' $Vendor_Effdt_Display ' for emplid ' $Emplid ' plan type ' $Plan_Type ' *******'
               end-if

     let $Coverage_Begin_Dt = $Vendor_Effdt

    end-if

    !*** End - 01/28/2010 - WATSONR - Added check for vendor effective date


    !*** Start - 04/29/2010 - WATSONR - Added check for last OE date

!** Begin - HCM-4669 - shimel - Removed "and 1 = 2" to re-enable automatic resend of active benefits on the OE date
!    if $Coverage_Begin_Dt < $Last_OE_Date and 1 = 2    !** 10/19/2010 - WATSONR - Added 1 = 2 to disable the automatic resend of active benefits on the OE date - HRP-15
    if $Coverage_Begin_Dt < $Last_OE_Date
!** End - HCM-4669 - shimel - Removed "and 1 = 2" to re-enable automatic resend of active benefits on the OE date

     let $Coverage_Begin_Dt = $Last_OE_Date

    end-if

    !*** End - 04/29/2010 - WATSONR - Added check for last OE date


    !*** Insert a 'S'top (or 'D'elete) record if the prior coverage is not already stopped

    if $Action_Code = 'A' and ($Previous_Action_Code = 'A' or $Previous_Action_Code = 'C')  !**** 01/28/2010 - RLWATSO2 - Added $Previous_Action_Code = 'C'


      if $Coverage_Begin_Dt < $Previous_Coverage_Begin_Dt

        let $Coverage_Begin_Dt = $Previous_Coverage_Begin_Dt

      end-if

      if $Coverage_Begin_Dt = $Previous_Coverage_Begin_Dt
        let $UA_INCLUDE_FLAG = 'N'  !*** ADOA doesn't know what to do with 'D'eletes, so don't send the 'D'elete or 'A'dd.  Deletes needs to be updated manually.

        let $Coverage_Begin_Dt_Display = edit($Coverage_Begin_Dt,'MM/DD/YYYY')

        let $Output_Text = 'EMPLID ' || $EMPLID || ' plan type ' || $Plan_Type ||' on ' || $Coverage_Begin_Dt_Display ||' has been modified and must be manually updated by ADOA.  The new coverage for alter emplid '|| $Alter_Emplid || ' is ADOA plan type ' || $UA_INTF_PLAN_TYPE || ' plan code ' || $UA_INTF_PLAN_CODE ||' and coverage option ' || $UA_COVERAGE_OPT ||'.'
        let $Error_Type = 'Warning'
        let $Severity = 'H'		!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
        let #Resend_Count = 0		!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
        do Write-CSV-Record



        move 1 to #SEQNO
        do Insert-Into-BENHST

        let $Action_Code = 'D'
        let $Coverage_End_Dt    = &CEBR.COVERAGE_END_DT

      else

        move 1 to #SEQNO
        do Insert-Into-BENHST

        let $Action_Code = 'S'
        let $Coverage_End_Dt    = dateadd($Coverage_Begin_Dt,'day',-1)  !**  End date of prior coverage is current begin date minus 1 day


        !*** Start - 01/28/2010 - WATSONR - Don't send the term record to ADOA if they don't have a record to term
        If isnull($ADOA_Coverage_Begin_Dt)

          EVALUATE $PLAN_TYPE
            WHEN = '10'
            WHEN = '11'
            WHEN = '14'
            WHEN = '21'
            WHEN = '23'
            WHEN = '30'
            WHEN = '7M'
            WHEN = '7N'
              let $UA_INCLUDE_FLAG = 'N'
              BREAK
            WHEN-OTHER
              BREAK
          END-EVALUATE

        End-If
        !*** End - 01/28/2010 - WATSONR - Don't send the term record to ADOA if they don't have a record to term

      end-if

      let $UA_INTF_PLAN_TYPE = &CEBR.UA_INTF_PLAN_TYPE
      let $UA_INTF_PLAN_CODE = &CEBR.UA_INTF_PLAN_CODE
      let $UA_COVERAGE_OPT   = &CEBR.UA_COVERAGE_OPT
      let #Amount            = &CEBR.AMOUNT
      let $Coverage_Begin_Dt = $Previous_Coverage_Begin_Dt


      move 0 to #SEQNO
      do Insert-Into-BENHST

    else

      if not isnull($Coverage_End_dt) and $Coverage_End_Dt <= $sysdate  !** 07/19/2011 - WATSONR - Changed $AsOfDate to $sysdate - HCM-2569
        let $Action_Code = 'S'
        let $Coverage_Begin_Dt  = $Previous_Coverage_Begin_Dt   !******************* Added to correct term date 06/25/2009
      end-if

      move 0 to #SEQNO
      do Insert-Into-BENHST

    end-if
  else
    do Set-BENHST-Include-Flag
  end-if

end-PROCEDURE	!Compare-EmpBen-Record


!******************************************************************************
! Get-Vendor-Effdt     !** 01/28/2010 - WATSONR - New procedure
!
!  Returns the effective date of the plan type and benefit plan
!
!******************************************************************************
begin-PROCEDURE Get-Vendor-Effdt

let $Vendor_Effdt = ''

let $Vendor_ID    = ''                                   !** 09/20/2010 - WATSONR - Added Vendor_ID - HCM-1343

begin-SELECT
VENDOR_ID                       &GVE.VENDOR_ID           !** 09/20/2010 - WATSONR - Added Vendor_ID - HCM-1343
EFFDT				&GVE.EFFDT

  !** Start - 09/20/2010 - WATSONR - Added to find earliest effdt for the current vendor - HCM-1343
  if isnull($Vendor_ID)
    let $Vendor_ID = &GVE.VENDOR_ID
  end-if

  if $Vendor_ID <> &GVE.VENDOR_ID
    exit-SELECT
  end-if
  !** End - 09/20/2010 - WATSONR - Added to find earliest effdt for the current vendor - HCM-1343

  let $Vendor_Effdt = &GVE.EFFDT

FROM PS_BENEF_PLAN_TBL BP
WHERE PLAN_TYPE    = $Plan_Type
  AND BENEFIT_PLAN = $Benefit_Plan
  AND EFFDT <= $AsOfDate                                 !** 09/20/2010 - WATSONR - Added to loop through all records in descending date order - HCM-1343
ORDER BY EFFDT DESC                                      !** 09/20/2010 - WATSONR - Added to loop through all records in descending date order - HCM-1343

!** Start - 09/20/2010 - WATSONR - Removed effdt subquery - HCM-1343
!  AND EFFDT = (SELECT MAX(EFFDT)
!                 FROM PS_BENEF_PLAN_TBL
!                WHERE PLAN_TYPE = BP.PLAN_TYPE
!                  AND BENEFIT_PLAN = BP.BENEFIT_PLAN
!                  AND EFFDT <= $AsOfDate)
!** End - 09/20/2010 - WATSONR - Removed effdt subquery - HCM-1343

end-SELECT

end-PROCEDURE !Get-Vendor-Effdt


!******************************************************************************
! Compare-Dep-Record
!
!  Compares current dependent demographics to those previously sent to ADOA
!
!******************************************************************************
begin-PROCEDURE Compare-Dep-Record

   move 'Compare-Dep-Record' to $ProcName

   move 'Y' to $Change

   move 'A' to $Action_Code

   move '' to $Effdt

begin-SELECT on-error=Error-Proc($ProcName)

PROCESS_DT		&CDR.PROCESS_DT
LAST_NAME		&CDR.LAST_NAME
FIRST_NAME		&CDR.FIRST_NAME
substr(MIDDLE_NAME,1,1)	&CDR.MIDDLE_INITIAL
UA_RELATIONSHIP	&CDR.UA_RELATIONSHIP
UA_DEPENDENT_TYPE	&CDR.UA_DEPENDENT_TYPE
BIRTHDATE		&CDR.BIRTHDATE
SEX			&CDR.SEX
SMOKER			&CDR.SMOKER
STUDENT			&CDR.STUDENT
DISABLED		&CDR.DISABLED
COVERAGE_BEGIN_DT	&CDR.COVERAGE_BEGIN_DT
EFFDT			&CDR.EFFDT
SSN			&CDR.SSN
NAME_SUFFIX             &CDR.NAME_SUFFIX              !**** 01/28/2010 - WATSONR - Added Name_Suffix
UA_ADOA_OVRRD   &CDR.UA_ADOA_OVRRD                    !*** HCM-4999 - 10/21/2013 - shimel - Added UA ADOA Override field

   let $This_Process_Dt	= &CDR.PROCESS_DT
   let $EFFDT		= &CDR.EFFDT

   if	 &CDR.LAST_NAME          = $Last_Name
     and &CDR.FIRST_NAME         = $First_Name
     and &CDR.MIDDLE_INITIAL     = $Middle_Initial
     and &CDR.UA_RELATIONSHIP    = $UA_RELATIONSHIP
     and &CDR.UA_DEPENDENT_TYPE  = $UA_DEPENDENT_TYPE
     and &CDR.BIRTHDATE          = $Birthdate
     and &CDR.SEX                = $Sex
     and &CDR.SMOKER             = $SMOKER
     and &CDR.STUDENT            = $Student
     and &CDR.DISABLED           = $Disabled
     and &CDR.COVERAGE_BEGIN_DT  = $Coverage_Begin_Dt
     and &CDR.SSN                = $Dependent_SSN
     and &CDR.NAME_SUFFIX        = $NAME_SUFFIX       !**** 01/28/2010 - WATSONR - Added Name_Suffix

     move 'N' to $Change            !All fields are identical, so don't insert a new record in the shadow table

   else

     move 'C' to $Action_Code

   end-if


FROM	PS_UA_ADOA_DEPHST	HST

WHERE	HST.EMPLID     	    = $EmplID
  AND   HST.DEPENDENT_BENEF = $Dependent_Benef
  AND   HST.ASOFDATE   = (SELECT MAX(ASOFDATE)
                            FROM PS_UA_ADOA_DEPHST
                           WHERE EMPLID           = HST.EMPLID
                             AND DEPENDENT_BENEF  = HST.DEPENDENT_BENEF
                             AND ASOFDATE        <= $AsOfDate
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND   HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                            FROM PS_UA_ADOA_DEPHST
                           WHERE EMPLID           = HST.EMPLID
                             AND DEPENDENT_BENEF  = HST.DEPENDENT_BENEF
                             AND ASOFDATE         = HST.ASOFDATE
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND	HST.UA_ADOA_CONF_FLAG <> 'X'
end-SELECT

! HCM-4999 - Begin - Set $Change to N if $Change = Y and UA_ADOA_OVRRD = Y
  IF $Change = 'Y' and &CDR.UA_ADOA_OVRRD = 'Y'
    LET $Change = 'N'
  END-IF
! HCM-4999 - End


  if $Change = 'Y'

    !*** Use system date for EFFDT  Required when adding a dependent record with Student Flag = Y
    !*** EFFDT now required for ALL dependents
    !*** if $STUDENT = 'Y' and $EFFDT = ''
      let $EFFDT = StrToDate($AsOfToday,'DD-MON-YYYY')
    !*** end-if

    do Insert-Into-DEPHST
! Begin - HCM-5019 - shimel - If Dependent SSN = 999999999, add warning to CSV error file
  if $Dependent_SSN = '999999999'
          let $Error_Text = 'Emplid:' || $emplid || '  Dependent_Benef: ' || $DEPENDENT_BENEF || ' SSN ' || $Dependent_SSN || ' sent in the HR513 file.'
          let $Output_Text = $Error_Text
          let $Error_Type = 'Warning'
          do Write-CSV-Record
  end-if
! End - HCM-5019 - shimel

  else
    do Set-DEPHST-Include-Flag
  end-if

end-PROCEDURE	!Compare-Dep-Record


!******************************************************************************
! Compare-DepBen-Record
!
!  Compares current dependent benefit elections to those previously sent to ADOA
!
!******************************************************************************
begin-PROCEDURE Compare-DepBen-Record

   move 'Compare-DepBen-Record' to $ProcName

   move 'Y' to $Change
   move 'A' to $Action_Code
   move ''  to $Previous_Action_Code

   do Get-Vendor-Effdt  !*** 09/20/2010 - WATSONR - Added call to get-vendor-effdt - HCM-1343

begin-SELECT on-error=Error-Proc($ProcName)

HST.PROCESS_DT		&CDBR.PROCESS_DT
HST.ALTER_EMPLID	&CDBR.ALTER_EMPLID
HST.UA_INTF_PLAN_TYPE   &CDBR.UA_INTF_PLAN_TYPE
HST.UA_INTF_PLAN_CODE   &CDBR.UA_INTF_PLAN_CODE
HST.UA_COVERAGE_OPT     &CDBR.UA_COVERAGE_OPT
HST.COVERAGE_BEGIN_DT   &CDBR.COVERAGE_BEGIN_DT
HST.COVERAGE_END_DT     &CDBR.COVERAGE_END_DT
HST.SMOKER		&CDBR.SMOKER
HST.ACTION_CODE		&CDBR.ACTION_CODE
HST.EFFDT		&CDBR.EFFDT
HST.UA_ADOA_OVRRD   &CDBR.UA_ADOA_OVRRD  !*** HCM-4999 - 09/30/2013 - shimel - Added UA ADOA Override field

   let $Previous_Action_Code = &CDBR.ACTION_CODE
   let $This_Process_Dt      = &CDBR.PROCESS_DT

   if not isnull($Coverage_End_dt) and $Coverage_End_Dt <= $sysdate  !** 07/19/2011 - WATSONR - Changed $AsOfDate to $sysdate - HCM-2569
     let $Action_Code = 'C'         ! Dependent uses 'C' as the stop code
   end-if



   if    &CDBR.UA_INTF_PLAN_TYPE = $UA_INTF_PLAN_TYPE
     and &CDBR.UA_INTF_PLAN_CODE = $UA_INTF_PLAN_CODE
     and &CDBR.UA_COVERAGE_OPT   = $UA_COVERAGE_OPT
     !and &CDBR.SMOKER            = $SMOKER    !** 09/20/2010 - WATSONR - Removed - Always send a blank smoker flag for supp life - HCM-1135
     and ($Previous_Action_Code   = $Action_Code
                or
         ($Previous_Action_Code = 'C' and not isnull($Coverage_End_dt) and $Coverage_End_Dt > $sysdate and $Coverage_End_Dt <= $AsOfDate))  !** 07/19/2011 - WATSONR - Added - HCM-2569

     move 'N' to $Change            !Coverage hasn't changed, so don't insert a new record in the shadow table

   end-if


   !**** Start - Added correction of coverage begin date and check for changes in benefit costs

   let $Previous_UA_Coverage_Opt   = &CDBR.UA_COVERAGE_OPT
   let $Previous_Coverage_Begin_Dt = &CDBR.COVERAGE_BEGIN_DT
   let $Previous_Effdt             = &CDBR.EFFDT

   do Get-ADOA-Coverage-Begin-Date


   if not isnull($ADOA_Coverage_Begin_Dt) and $ADOA_Coverage_Begin_Dt <> $Previous_Effdt !and $ADOA_Coverage_Begin_Dt >= $Last_OE_Date  !Compare with the employee's coverage begin date, not the dependent's begin date !**** 04/29/2010 - WATSONR - Replaced $Minimum_ADOA_Begin_Dt with $Last_OE_Date   !** 10/19/2010 - WATSONR - Removed comparison with last_oe_date - HRP-15


     !*** Update the dependent's coverage begin date if it's the same as the employee's begin date or if it's earlier than the ADOA date
     if $Previous_Coverage_Begin_Dt = $Previous_Effdt or $Previous_Coverage_Begin_Dt < $ADOA_Coverage_Begin_Dt

               if $Emplid = $Test_Emplid
                  let $Previous_Coverage_Begin_Dt_Display = edit($Previous_Coverage_Begin_Dt,'MM/DD/YYYY')
                  let $ADOA_Coverage_Begin_Dt_Display     = edit($ADOA_Coverage_Begin_Dt,'MM/DD/YYYY')
                  show '******* Changed Previous Coverage begin date from ' $Previous_Coverage_Begin_Dt_Display ' to ADOA begin date ' $ADOA_Coverage_Begin_Dt_Display ' for emplid ' $Emplid ' Dependent ' $Dependent_Benef ' plan type ' $Plan_Type ' *******'
               end-if

       let $Previous_Coverage_Begin_Dt = $ADOA_Coverage_Begin_Dt

     end-if

               if $Emplid = $Test_Emplid
                  let $Previous_Effdt_Display = edit($Previous_Effdt,'MM/DD/YYYY')
                  let $ADOA_Coverage_Begin_Dt_Display     = edit($ADOA_Coverage_Begin_Dt,'MM/DD/YYYY')
                  show '******* Changed Previous Effective date from ' $Previous_Effdt_Display ' to ADOA begin date ' $ADOA_Coverage_Begin_Dt_Display ' for emplid ' $Emplid ' Dependent ' $Dependent_Benef ' plan type ' $Plan_Type ' *******'
               end-if

     let $Previous_Effdt             = $ADOA_Coverage_Begin_Dt

   end-if


   !**** If the coverage hasn't changed and the previous coverage isn't term'd, see if the cost has changed
   if $Change = 'N' and $Previous_Action_Code = 'A'

     do Get-Cost-Effective-Date

     if $Cost_Effdt > $Previous_Effdt and 1 = 2       !** Cost changes are currently disabled

       move 'Y' to $Change

       !*** Update the dependent's coverage begin date if it's earlier than the ADOA date
       if $Coverage_Begin_Dt < $Cost_Effdt

               if $Emplid = $Test_Emplid
                  let $Coverage_Begin_Dt_Display = edit($Coverage_Begin_Dt,'MM/DD/YYYY')
                  let $Cost_Effdt_Display     = edit($Cost_Effdt,'MM/DD/YYYY')
                  show '******* Changed Coverage begin date from ' $Coverage_Begin_Dt_Display ' to Cost Effdt ' $Cost_Effdt_Display ' for emplid ' $Emplid ' Dependent ' $Dependent_Benef  ' plan type ' $Plan_Type ' *******'
               end-if

         let $Coverage_Begin_Dt = $Cost_Effdt

       end-if

               if $Emplid = $Test_Emplid
                  let $Effdt_Display = edit($Effdt,'MM/DD/YYYY')
                  let $Cost_Effdt_Display     = edit($Cost_Effdt,'MM/DD/YYYY')
                  show '******* Changed Effective date from ' $Effdt_Display ' to Cost Effdt ' $Cost_Effdt_Display ' for emplid ' $Emplid ' Dependent ' $Dependent_Benef ' plan type ' $Plan_Type ' *******'
               end-if

       let $Effdt = $Cost_Effdt

     end-if

   end-if

   !**** End - Added correction of coverage begin date and new check for changes in benefit costs


   !**** Start - 01/28/2010 - WATSONR - If the coverage hasn't changed and the previous coverage isn't term'd, see if the vendor has changed

   if $Change = 'N' and $Previous_Action_Code = 'A' and $Vendor_Effdt > $Previous_Coverage_Begin_Dt and $This_Process_Dt <= $Resend_Date  !** 09/20/2010 - WATSONR - Added "and $This_Process_Dt <= $Resend_Date" - HCM-1343

     move 'Y' to $Change

     let $Coverage_Begin_Dt = $Vendor_Effdt

   end-if

   !**** End - 01/28/2010 - WATSONR - If the coverage hasn't changed and the previous coverage isn't term'd, see if the vendor has changed



   !**** Start - 04/29/2010 - WATSONR - If the coverage hasn't changed and the previous coverage isn't term'd, see if coverage begin date is prior to the last OE

   if $Change = 'N' and $Previous_Action_Code = 'A' and $Last_OE_Date > $Previous_Coverage_Begin_Dt and 1 = 2    !** 10/19/2010 - WATSONR - Added 1 = 2 to disable the automatic resend of active benefits on the OE date - HRP-15
     move 'Y' to $Change

     let $Coverage_Begin_Dt = $Last_OE_Date

   end-if

   !**** End - 04/29/2010 - WATSONR - If the coverage hasn't changed and the previous coverage isn't term'd, see if the vendor has changed


FROM	PS_UA_ADOA_BENHST	HST

WHERE	HST.EMPLID             = $EmplID
  AND   HST.DEPENDENT_BENEF    = $Dependent_Benef
  AND   HST.PLAN_TYPE          = $PLAN_TYPE
  AND   HST.ASOFDATE   = (SELECT MAX(ASOFDATE)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND ASOFDATE          <= $AsOfDate
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND   HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND ASOFDATE           = HST.ASOFDATE
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND   HST.SEQNO      = (SELECT MAX(SEQNO)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND PROCESS_DT         = HST.PROCESS_DT
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND	HST.UA_ADOA_CONF_FLAG <> 'X'
end-SELECT

! HCM-4999 - Begin - Set $Change to N if $Change = Y and UA_ADOA_OVRRD = Y
  IF $Change = 'Y' and &CDBR.UA_ADOA_OVRRD = 'Y'
    LET $Change = 'N'
  END-IF
! HCM-4999 - End



  if $Change = 'Y'

    let $UA_INCLUDE_FLAG = 'Y'

    !*** Start - 01/28/2010 - WATSONR - Added check for vendor effective date

    if $Coverage_Begin_Dt < $Vendor_Effdt

     let $Coverage_Begin_Dt = $Vendor_Effdt

    end-if

    !*** End - 01/28/2010 - WATSONR - Added check for vendor effective date


    !*** Start - 04/29/2010 - WATSONR - Added check for last OE date

!** Begin - HCM-4669 - shimel - Removed "and 1 = 2" to re-enable automatic resend of active benefits on the OE date
!    if $Coverage_Begin_Dt < $Last_OE_Date and 1 = 2    !** 10/19/2010 - WATSONR - Added 1 = 2 to disable the automatic resend of active benefits on the OE date - HRP-15
    if $Coverage_Begin_Dt < $Last_OE_Date
!** End - HCM-4669 - shimel - Removed "and 1 = 2" to re-enable automatic resend of active benefits on the OE date

     let $Coverage_Begin_Dt = $Last_OE_Date

    end-if

    !*** End - 04/29/2010 - WATSONR - Added check for last OE date


    !*** Insert a 'C'hange (stop) record if the prior coverage is not already stopped

    if $Action_Code = 'A' and $Previous_Action_Code = 'A'


      !*** If the old coverage has a newer date than the new coverage, set the new coverage date equal to the old
      if $Coverage_Begin_Dt < $Previous_Coverage_Begin_Dt

        let $Coverage_Begin_Dt = $Previous_Coverage_Begin_Dt

      end-if


      !*** If old and new coverage have the same begin date, 'D'elete the old coverage

      if $Coverage_Begin_Dt = $Previous_Coverage_Begin_Dt and $Plan_Type <> '20' !*** 04/29/2010 - WATSONR - Ignore plan type 20

        let $UA_INCLUDE_FLAG = 'N'  !*** ADOA doesn't know what to do with 'D'eletes, so don't send the 'D'elete or 'A'dd.  The Delete/Add needs to be entered manually.

        let $Coverage_Begin_Dt_Display = edit($Coverage_Begin_Dt,'MM/DD/YYYY')

        let $Output_Text = 'EMPLID ' || $EMPLID || ' dependent benef ' || $Dependent_Benef || ' plan type ' || $Plan_Type ||' on ' || $Coverage_Begin_Dt_Display ||' has been modified and must be manually updated by ADOA.  The new coverage for alter emplid '|| $Alter_Emplid || ' dependent benef ' || $Dependent_Benef || ' is ADOA plan type ' || $UA_INTF_PLAN_TYPE || ' plan code ' || $UA_INTF_PLAN_CODE ||' and coverage option ' || $UA_COVERAGE_OPT ||'.'
        let $Error_Type = 'Warning'
        let $Severity = 'H'		!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
        let #Resend_Count = 0		!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
        do Write-CSV-Record


        move 1 to #SEQNO
        do Insert-Into-BENHST

        let $Action_Code = 'D'
        let $Coverage_End_Dt    = &CDBR.COVERAGE_END_DT

      else

        move 1 to #SEQNO
        do Insert-Into-BENHST

        let $Action_Code = 'C'         ! Dependent uses 'C' as the stop code
        let $Coverage_End_Dt    = dateadd($Coverage_Begin_Dt,'day',-1)  !**  End date of prior coverage is current begin date minus 1 day

        !*** Start - 01/28/2010 - WATSONR - Don't send the term record to ADOA if they don't have a record to term
        If isnull($ADOA_Coverage_Begin_Dt)

          EVALUATE $PLAN_TYPE
            WHEN = '10'
            WHEN = '11'
            WHEN = '14'
              let $UA_INCLUDE_FLAG = 'N'
              BREAK
            WHEN-OTHER
              BREAK
          END-EVALUATE

        End-If
        !*** End - 01/28/2010 - WATSONR - Don't send the term record to ADOA if they don't have a record to term

      end-if

      let $UA_INTF_PLAN_TYPE  = &CDBR.UA_INTF_PLAN_TYPE
      let $UA_INTF_PLAN_CODE  = &CDBR.UA_INTF_PLAN_CODE
      let $UA_COVERAGE_OPT    = &CDBR.UA_COVERAGE_OPT
      let $Coverage_Begin_Dt  = $Previous_Coverage_Begin_Dt
      let $EFFDT              = $Previous_Effdt


      move 0 to #SEQNO
      do Insert-Into-BENHST

    else


      !*** If the dependent's start date is earlier than the employee's, change the dependent's start date
      if $Coverage_Begin_Dt < $Effdt

        let $Coverage_Begin_Dt = $Effdt

      end-if

! Begin - HCM-2860 - shimel - If dependent is being added to existing family coverage, set $Effdt to $ADOA_Coverage_Begin_Dt if not null
      if $Action_Code = 'A' and $Previous_Action_Code = ''
         DO Get-Current-ADOA-Coverage
         if not isnull($ADOA_Coverage_Begin_Dt)
           let $Effdt = $ADOA_Coverage_Begin_Dt
         end-if
      end-if
! End - HCM-2860 - shimel

      if not isnull($Coverage_End_dt) and $Coverage_End_Dt <= $sysdate  !** 07/19/2011 - WATSONR - Changed $AsOfDate to $sysdate - HCM-2569
        let $Action_Code = 'C'
        let $Coverage_Begin_Dt  = $Previous_Coverage_Begin_Dt   !******************* Added to correct term dates 06/25/2009
        let $EFFDT              = $Previous_Effdt               !******************* Added to correct term dates 06/25/2009
      end-if

      move 0 to #SEQNO
      do Insert-Into-BENHST

    end-if
  else
    do Set-BENHST-Include-Flag
  end-if

end-PROCEDURE	!Compare-DepBen-Record



!******************************************************************************
! Insert-Into-EMPHST
!  Inserts the current employee record into PS_UA_ADOA_EMPHST.
!
!******************************************************************************
begin-PROCEDURE Insert-Into-EMPHST


	move 'Insert-Into-EMPHST' to $ProcName


begin-SQL on-error=Error-Proc($ProcName)
INSERT INTO PS_UA_ADOA_EMPHST
(PLAN_YEAR
,PROCESS_DT
,ASOFDATE
,EMPLID
,ALTER_EMPLID
,LAST_NAME
,FIRST_NAME
,MIDDLE_NAME
,ADDRESS1
,ADDRESS2
,CITY
,STATE
,POSTAL
,HOME_PHONE
,HIRE_DT
,EFFDT
,SEX
,MAR_STATUS
,BIRTHDATE
,EXTENSION
,SMOKER
,ANNUAL_RT
,WORK_PHONE
,COMP_FREQ_SUPP
,UA_INCLUDE_FLAG
,ACTION_CODE
,UA_ADDR_CHG_FLAG
,UA_NAME_CHG_FLAG
,UA_DEMO_CHG_FLAG
,UA_ADOA_CONF_FLAG
,UA_ADOA_OVRRD            ! HCM-4999 - Added new UA_ADOA_OVRRD field
,SSN
)
VALUES
(#Plan_Year
,$Process_Dt
,$AsOfDate
,$Emplid
,$ALTER_EMPLID
,$LAST_NAME
,$FIRST_NAME
,$Middle_Initial
,$ADDRESS1
,$ADDRESS2
,$CITY
,$STATE
,$POSTAL
,$HOME_PHONE
,$HIRE_DT
,$Effective_Date
,$SEX
,$MAR_STATUS
,$BIRTHDATE
,$EXTENSION
,$SMOKER
,#Annual_Rt
,$WORK_PHONE
,$COMP_FREQ_SUPP
,$UA_INCLUDE_FLAG
,$ACTION_CODE
,$Address_Change_Flag
,$Name_Change_Flag
,$Demographic_Change_Flag
,'N'
,'N'                      ! HCM-4999 - Added UA_ADOA_OVRRD default value
,$Employee_SSN
)
end-SQL

end-PROCEDURE	!Insert-Into-EMPHST


!******************************************************************************
! Format-Dependent-Data
!
!  Converts dependent demographic data to ADOA format
!
!******************************************************************************
begin-PROCEDURE Format-Dependent-Data


  IF $SMOKER <> 'Y' AND $SMOKER <> 'N'
    LET $SMOKER = 'N'
  END-IF

  IF $DISABLED <> 'Y' AND $DISABLED <>'N'
      LET $DISABLED = 'N'
  END-IF

  !--------
  !SEX
  !--------
  IF $SEX <> 'M' AND $SEX <> 'F'
     LET $SEX = ' '
  END-IF


  Let $Coverage_Begin_Dt = ''  !********* Placement date for relationship 'placeadopt'
  !----------------------
  ! Relationship Code
  !----------------------
   LET $UA_RELATIONSHIP = ' '
   EVALUATE $RELATIONSHIP
     WHEN = 'SP'
     WHEN = 'X'					!Include ex-spouse so they can be term'd
        LET $UA_RELATIONSHIP = 'SPOUSE'
        BREAK
     WHEN = 'CG'				!Court Ordered Guardianship
     WHEN = 'GA'				!Guardianship Pending Adoption
     WHEN = 'GC'				!Grandchild
        LET $UA_RELATIONSHIP = 'GUARDIAN'	!GUARDIAN = Grandchild, Guardianship daughter, Guardianship Son
        BREAK
     WHEN = 'AC'				!Adopted Child
        LET $UA_RELATIONSHIP = 'PLACEADOPT'	!PLACEADOPT = Placed for Adoption Daughter, Placed for Adoption Son
        do Get-Placement-Date
        BREAK
     WHEN = 'C'					!Child
     WHEN = 'FC'				!Foster Child
     WHEN = 'OC'				!Older Child
     WHEN = 'NC'				!Domestic Partner Child BTax
     WHEN = 'ND'				!Domestic Partner Child ATax
        LET $UA_RELATIONSHIP = 'CHILD'          !CHILD = Daughter, Foster Daughter, Foster Son, Son
        BREAK
     WHEN = 'SC'				!Stepchild
        LET $UA_RELATIONSHIP = 'STEPCHILD'      !STEPCHILD = Step-Daughter, Step-Son
        BREAK
     WHEN = 'NA'                                !Domestic Partner After-Tax
     WHEN = 'NB'                                !Domestic Partner Before-Tax
     WHEN = 'NE'                                !** 01/10/2011 - WATSONR - Include opposite sex DP's so they can be term'd - HCM-1679
     WHEN = 'NF'                                !** 01/10/2011 - WATSONR - Include opposite sex DP's so they can be term'd - HCM-1679
     WHEN = 'XN'                                !** 10/15/2010 - WATSONR - Include ex-domestic partner so they can be term'd - HCM-1343
        LET $UA_RELATIONSHIP = 'DOM PARTNR'     !Domestic Partner
        BREAK
     WHEN-OTHER

        !** Start - 09/26/2011 - WATSONR - Verify dependent is currently enrolled before output of relationship error - HCM-3236
        do Verify-Dependent-Enrollment
        if $dependent_enrolled = 'N'
          do Get-Previous-Relationship
        else
          !** End - 09/26/2011 - WATSONR - Verify dependent is currently enrolled before output of relationship error - HCM-3236

          let $Error_Text = 'Relationship Code not defined for Emplid = ' || $emplid || '  DEPENDENT_BENEF: ' || $DEPENDENT_BENEF || ' RELATIONSHIP:  ' || $RELATIONSHIP || ' Rel Code: ' || $UA_RELATIONSHIP
          let $Output_Text = $Error_Text
          let $Error_Type = 'Error'
          do Write-CSV-Record
       
        end-if  !** 09/26/2011 - WATSONR - Verify dependent is currently enrolled before output of relationship error - HCM-3236

  END-EVALUATE

  !-----------------
  ! Dependent Type
  !-----------------
  IF $UA_RELATIONSHIP = 'SPOUSE'
     LET $UA_DEPENDENT_TYPE = 'S'
  ELSE
     LET $UA_DEPENDENT_TYPE = 'D'
  END-IF


end-PROCEDURE  !Format-Dependent-Data


!******************************************************************************
! Get-Previous-Relationship
!
!  Returns the most recent relationship from the ps_ua_adoa_dephst table
!
! 09/26/2011 - WATSONR - New Procedure - HCM-3236
!
!******************************************************************************
begin-PROCEDURE Get-Previous-Relationship

begin-SELECT

UA_RELATIONSHIP                    &GPR.UA_RELATIONSHIP

        LET $UA_RELATIONSHIP = &GPR.UA_RELATIONSHIP

FROM PS_UA_ADOA_DEPHST HIST
WHERE EMPLID          = $EmplID
  AND DEPENDENT_BENEF = $Dependent_Benef
  AND ASOFDATE = (SELECT MAX(ASOFDATE)
                    FROM PS_UA_ADOA_DEPHST
                   WHERE EMPLID          = HIST.EMPLID
                     AND DEPENDENT_BENEF = HIST.DEPENDENT_BENEF
                     AND ASOFDATE       <= $AsOfDate)
end-SELECT

end-PROCEDURE  Get-Previous-Relationship


!******************************************************************************
! Verify-Dependent-Enrollment
!
!  Returns a 'Y' if the dependent is currently enrolled in medical, dental, or vision
!
! 09/26/2011 - WATSONR - New Procedure - HCM-3236
!
!******************************************************************************
begin-PROCEDURE Verify-Dependent-Enrollment

  let $dependent_enrolled = 'N'

begin-SELECT

'Y'                &VDE.ENROLLED


   let $dependent_enrolled = &VDE.ENROLLED


FROM	 PS_HEALTH_BENEFIT	HB
	,PS_HEALTH_DEPENDNT	HD
WHERE
    HB.EMPLID 		=	$EmplID
AND HB.EMPL_RCD 	=	#Benefit_Rcd_Nbr
AND HD.DEPENDENT_BENEF 	= 	$Dependent_Benef
AND HB.COVERAGE_ELECT	=	'E'
AND HB.PLAN_TYPE 	IN	('10', '11', '14')
AND HB.EMPLID 		= 	HD.EMPLID
AND HB.EMPL_RCD 	= 	HD.EMPL_RCD
AND HB.COBRA_EVENT_ID 	= 	HD.COBRA_EVENT_ID
AND HB.PLAN_TYPE 	= 	HD.PLAN_TYPE
AND HB.BENEFIT_NBR 	= 	HD.BENEFIT_NBR
AND HB.EFFDT 		= 	HD.EFFDT
AND HB.EFFDT = (SELECT MAX(EFFDT)
                  FROM PS_HEALTH_BENEFIT
                 WHERE EMPLID          = HB.EMPLID
                   AND EMPL_RCD        = HB.EMPL_RCD
                   AND COBRA_EVENT_ID  = HB.COBRA_EVENT_ID
                   AND PLAN_TYPE       = HB.PLAN_TYPE
                   AND BENEFIT_NBR     = HB.BENEFIT_NBR
                   AND EFFDT          <= $AsOfDate)
end-SELECT


end-PROCEDURE	!Verify-Dependent-Enrollment



!******************************************************************************
! Get-Placement-Date
!
!  Returns the earliest coverage begin date for this dependent as the placement date
!
!******************************************************************************
begin-PROCEDURE Get-Placement-Date

   let $Coverage_Begin_Dt = ''

begin-SELECT

MIN(HB.COVERAGE_BEGIN_DT) 	&GPD.COVERAGE_BEGIN_DT

   let  $Coverage_Begin_Dt = &GPD.COVERAGE_BEGIN_DT

  FROM PS_HEALTH_BENEFIT HB
  , PS_HEALTH_DEPENDNT   HD
 WHERE HD.EMPLID          = $Emplid
   AND HD.DEPENDENT_BENEF = $Dependent_Benef
   AND HB.EMPLID          = HD.EMPLID
   AND HB.EMPL_RCD        = HD.EMPL_RCD
   AND HB.COBRA_EVENT_ID  = HD.COBRA_EVENT_ID
   AND HB.PLAN_TYPE       = HD.PLAN_TYPE
   AND HB.BENEFIT_NBR     = HD.BENEFIT_NBR
   AND HB.EFFDT           = HD.EFFDT
   AND HB.PLAN_TYPE       IN ('10', '11', '14')

end-SELECT

end-PROCEDURE	!Get-Placement-Date


!******************************************************************************
! Insert-Into-DEPHST
!  Inserts the current dependent record into PS_UA_ADOA_DEPHST.
!
!******************************************************************************
begin-PROCEDURE Insert-Into-DEPHST

	move 'Insert-Into-DEPHST' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)
INSERT INTO PS_UA_ADOA_DEPHST
(EMPLID
,DEPENDENT_BENEF
,PLAN_YEAR         !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
,PROCESS_DT
,ASOFDATE
,ALTER_EMPLID
,SSN
,LAST_NAME
,FIRST_NAME
,MIDDLE_NAME
,NAME_SUFFIX
,EFFDT
,UA_RELATIONSHIP
,BIRTHDATE
,UA_DEPENDENT_TYPE
,SEX
,SMOKER
,STUDENT
,DISABLED
,COVERAGE_BEGIN_DT
,ACTION_CODE
,UA_INCLUDE_FLAG
,UA_ADOA_CONF_FLAG
,UA_ADOA_OVRRD            ! HCM-4999 - Added new UA_ADOA_OVRRD field
)
VALUES
(
 $Emplid
,$Dependent_Benef
,#Plan_Year         !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
,$Process_Dt
,$AsOfDate
,$ALTER_EMPLID
,$Dependent_SSN
,$LAST_NAME
,$FIRST_NAME
,$MIDDLE_INITIAL
,$NAME_SUFFIX
,$EFFDT
,$UA_RELATIONSHIP
,$BIRTHDATE
,$UA_DEPENDENT_TYPE
,$SEX
,$SMOKER
,$STUDENT
,$DISABLED
,$COVERAGE_BEGIN_DT
,$ACTION_CODE
,'Y'
,'N'
,'N'                      ! HCM-4999 - Added UA_ADOA_OVRRD default value
)
END-sql

end-PROCEDURE	!Insert-Into-DEPHST


!******************************************************************************
! Insert-Into-BENHST
!  Inserts the current benefit elections into PS_UA_ADOA_BENHST.
!
!******************************************************************************
begin-PROCEDURE Insert-Into-BENHST

  ! See if the record we're adding already exists at ADOA with a different coverage option and output an error if it does
  if $Dependent_Benef = ' '

    do Get-Current-ADOA-Coverage

    if $ACTION_CODE = 'A' and $ADOA_Coverage_Begin_Dt = $COVERAGE_BEGIN_DT and ltrim($ADOA_Coverage_Opt,'0') <> ltrim($UA_COVERAGE_OPT,'0') and $Plan_Type <> '20'  !*** 04/29/2010 - WATSONR - Exclude Plan type 20
        let $Coverage_Begin_Dt_Display = edit($Coverage_Begin_Dt,'MM/DD/YYYY')
        let $Output_Text = 'EMPLID ' || $EMPLID || ' plan type ' || $Plan_Type ||' on ' || $Coverage_Begin_Dt_Display ||' already exists at ADOA with a different coverage option and should be corrected.  The new coverage for alter emplid '|| $Alter_Emplid || ' is ADOA plan type ' || $UA_INTF_PLAN_TYPE || ' plan code ' || $UA_INTF_PLAN_CODE ||' and coverage option ' || $UA_COVERAGE_OPT ||'.'
        let $Error_Type = 'Warning'
        let $Severity = 'H'		!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
        let #Resend_Count = 0		!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
        do Write-CSV-Record
    end-if

  !*****else                            !*** 04/29/2009 - WATSONR - Removed, ADOA says it's not necessary to resend the emp record as a 'C' when a dependent record changes

    !*****do Verify-EMPBEN-Record       !*** 04/29/2009 - WATSONR - Removed, ADOA says it's not necessary to resend the emp record as a 'C' when a dependent record changes

  end-if

	move 'Insert-Into-BENHST' to $ProcName


begin-SQL on-error=Error-Proc($ProcName)
INSERT INTO PS_UA_ADOA_BENHST
(EMPLID
,DEPENDENT_BENEF
,PLAN_TYPE
,PLAN_YEAR              !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
,PROCESS_DT
,SEQNO
,ASOFDATE
,BENEFIT_RCD_NBR
,ALTER_EMPLID
,UA_INTF_PLAN_TYPE
,UA_INTF_PLAN_CODE
,UA_COVERAGE_OPT
,AMOUNT			!*** 07/29/2009 - Added Life/Disability
,EFFDT
,COVERAGE_BEGIN_DT
,COVERAGE_END_DT
,SMOKER			!*** 07/29/2009 - Added Life/Disability
,UA_INCLUDE_FLAG
,ACTION_CODE
,UA_ADOA_CONF_FLAG
,UA_ADOA_OVRRD            ! HCM-4999 - Added new UA_ADOA_OVRRD field
)
VALUES
(
 $Emplid
,$DEPENDENT_BENEF
,$PLAN_TYPE
,#Plan_Year              !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
,$Process_Dt
,#SEQNO
,$AsOfDate
,#Benefit_Rcd_Nbr
,$ALTER_EMPLID
,$UA_INTF_PLAN_TYPE
,$UA_INTF_PLAN_CODE
,$UA_COVERAGE_OPT
,#Amount		!*** 07/29/2009 - Added Life/Disability
,$EFFDT
,$COVERAGE_BEGIN_DT
,$COVERAGE_END_DT
,$SMOKER		!*** 07/29/2009 - Added Life/Disability
,$UA_INCLUDE_FLAG
,$ACTION_CODE
,'N'
,'N'                      ! HCM-4999 - Added UA_ADOA_OVRRD default value
)
end-SQL

end-PROCEDURE	!Insert-Into-BENHST


!******************************************************************************
! Verify-EMPBEN-Record
!
!  Inserts a 'C'hange benhst record for the employee if one doesn't already exist on this process_dt
!
!******************************************************************************
begin-PROCEDURE Verify-EMPBEN-Record

	move 'Verify-EMPBEN-Record' to $ProcName

   let $Insert_EMPBEN_Record = 'N'

begin-SELECT on-error=Error-Proc($ProcName)

HST.PROCESS_DT			&VER.PROCESS_DT

   let $This_Process_Dt      = &VER.PROCESS_DT

   if $This_Process_Dt < $Process_Dt
     let $Insert_EMPBEN_Record = 'Y'
   end-if


FROM	PS_UA_ADOA_BENHST	HST

WHERE	HST.EMPLID             = $EmplID
  AND   HST.DEPENDENT_BENEF    = ' '
  AND   HST.PLAN_TYPE          = $PLAN_TYPE
  AND   HST.ASOFDATE   = (SELECT MAX(ASOFDATE)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND ASOFDATE          <= $AsOfDate
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND   HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND ASOFDATE           = HST.ASOFDATE
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND   HST.SEQNO      = (SELECT MAX(SEQNO)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND PROCESS_DT         = HST.PROCESS_DT
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND	HST.UA_ADOA_CONF_FLAG <> 'X'
end-SELECT


if $Insert_EMPBEN_Record = 'Y'

begin-SQL
INSERT INTO PS_UA_ADOA_BENHST
(EMPLID
,DEPENDENT_BENEF
,PLAN_TYPE
,PLAN_YEAR               !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
,PROCESS_DT
,SEQNO
,ASOFDATE
,BENEFIT_RCD_NBR
,ALTER_EMPLID
,UA_INTF_PLAN_TYPE
,UA_INTF_PLAN_CODE
,UA_COVERAGE_OPT
,AMOUNT
,EFFDT
,COVERAGE_BEGIN_DT
,COVERAGE_END_DT
,SMOKER
,UA_INCLUDE_FLAG
,ACTION_CODE
,UA_ADOA_CONF_FLAG
)
select
 EMPLID
,DEPENDENT_BENEF
,PLAN_TYPE
,#Plan_Year              !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
,$PROCESS_DT
,SEQNO
,$ASOFDATE
,BENEFIT_RCD_NBR
,ALTER_EMPLID
,UA_INTF_PLAN_TYPE
,UA_INTF_PLAN_CODE
,UA_COVERAGE_OPT
,AMOUNT
,EFFDT
,$EFFDT                      !*** Changed from COVERAGE_BEGIN_DT to $EFFDT to match dependent's effdt - 06/25/2009
,COVERAGE_END_DT
,SMOKER
,UA_INCLUDE_FLAG
,'C'
,UA_ADOA_CONF_FLAG
FROM	PS_UA_ADOA_BENHST	HST
WHERE	HST.EMPLID             = $EmplID
  AND   HST.DEPENDENT_BENEF    = ' '
  AND   HST.PLAN_TYPE          = $PLAN_TYPE
  AND   HST.ASOFDATE   = (SELECT MAX(ASOFDATE)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND ASOFDATE          <= $AsOfDate
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND   HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND ASOFDATE           = HST.ASOFDATE
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND   HST.SEQNO      = (SELECT MAX(SEQNO)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND PROCESS_DT         = HST.PROCESS_DT
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND	HST.UA_ADOA_CONF_FLAG <> 'X'
end-SQL


end-if


end-PROCEDURE !Verify-EMPBEN-Record


!******************************************************************************
! Initialize-Include-Flags
!  Set all the include_flags to 'N'
!******************************************************************************
begin-PROCEDURE Initialize-Include-Flags

	move 'Initialize-Include-Flags' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_EMPHST
   SET UA_INCLUDE_FLAG  = 'N'
 WHERE UA_INCLUDE_FLAG <> 'N'
   AND UA_ADOA_CONF_FLAG <> 'X'
end-SQL

begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_DEPHST
   SET UA_INCLUDE_FLAG  = 'N'
 WHERE UA_INCLUDE_FLAG <> 'N'
   AND UA_ADOA_CONF_FLAG <> 'X'
end-SQL

begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_BENHST
   SET UA_INCLUDE_FLAG  = 'N'
 WHERE UA_INCLUDE_FLAG <> 'N'
   AND UA_ADOA_CONF_FLAG <> 'X'
end-SQL

end-PROCEDURE	!Initialize-Include-Flags


!******************************************************************************
! Set-EmpHst-Include-Flag
!  Sets the include_flag to 'Y' for one employee
!******************************************************************************
begin-PROCEDURE Set-EmpHst-Include-Flag

	move 'Set-EmpHst-Include-Flag' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_EMPHST
   SET UA_INCLUDE_FLAG = 'Y'
WHERE	EMPLID          = $EmplID
  AND   PROCESS_DT      = $This_Process_Dt
end-SQL

end-PROCEDURE	!Set-EmpHst-Include-Flag


!******************************************************************************
! Set-DepHst-Include-Flag
!  Sets the include_flag to 'Y' for one dependent
!******************************************************************************
begin-PROCEDURE Set-DepHst-Include-Flag

	move 'Set-DepHst-Include-Flag' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_DEPHST
   SET UA_INCLUDE_FLAG = 'Y'
WHERE	EMPLID          = $EmplID
  AND	DEPENDENT_BENEF = $Dependent_Benef
  AND   PROCESS_DT      = $This_Process_Dt
end-SQL

end-PROCEDURE	!Set-DepHst-Include-Flag


!******************************************************************************
! Set-BenHst-Include-Flag
!  Sets the include_flag to 'Y' for one employee/dependent benefit record
!******************************************************************************
begin-PROCEDURE Set-BenHst-Include-Flag

	move 'Set-BenHst-Include-Flag' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_BENHST
   SET UA_INCLUDE_FLAG = 'Y'
WHERE	EMPLID             = $EmplID
  AND   DEPENDENT_BENEF    = $Dependent_Benef
  AND   PLAN_TYPE          = $PLAN_TYPE
  AND   PROCESS_DT         = $This_Process_Dt
end-SQL

end-PROCEDURE	!Set-BenHst-Include-Flag


!******************************************************************************
! Include-Old-Coverage
!  Sets the include_flag to 'Y' on existing health benefit records
!  This prevents the previous coverage from being ended if the employee or
!  dependent now has an error or the coverage has an unapproved dependent
!******************************************************************************
begin-PROCEDURE Include-Old-Coverage

	move 'Include-Old-Coverage' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_BENHST HST
   SET UA_INCLUDE_FLAG = 'Y'
WHERE HST.EMPLID          = $EmplID
  AND HST.DEPENDENT_BENEF = NVL($Old_Dependent_Benef,HST.DEPENDENT_BENEF)
  AND HST.PLAN_TYPE       = NVL($Old_Plan_Type,HST.PLAN_TYPE)
  AND HST.ASOFDATE   = (SELECT MAX(ASOFDATE)
                          FROM PS_UA_ADOA_BENHST
                         WHERE EMPLID                 = HST.EMPLID
                           AND DEPENDENT_BENEF        = HST.DEPENDENT_BENEF
                           AND PLAN_TYPE              = HST.PLAN_TYPE
                           AND ASOFDATE              <= $AsOfDate
                           AND UA_ADOA_CONF_FLAG    <> 'X')
  AND HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                          FROM PS_UA_ADOA_BENHST
                         WHERE EMPLID                 = HST.EMPLID
                           AND DEPENDENT_BENEF        = HST.DEPENDENT_BENEF
                           AND PLAN_TYPE              = HST.PLAN_TYPE
                           AND ASOFDATE               = HST.ASOFDATE
                           AND UA_ADOA_CONF_FLAG    <> 'X')
  AND HST.SEQNO      = (SELECT MAX(SEQNO)
                          FROM PS_UA_ADOA_BENHST
                         WHERE EMPLID                 = HST.EMPLID
                           AND DEPENDENT_BENEF        = HST.DEPENDENT_BENEF
                           AND PLAN_TYPE              = HST.PLAN_TYPE
                           AND PROCESS_DT             = HST.PROCESS_DT
                           AND UA_ADOA_CONF_FLAG <> 'X')
  AND HST.UA_ADOA_CONF_FLAG <> 'X'
end-SQL

end-PROCEDURE	!Include-Old-Coverage


!******************************************************************************
! Update-Include-Flags
!
!  Sets the include flag to 'N' on terms already sent to ADOA
!  Sets the include flag to 'N' on old records if report is run for Changes Only
!
!    also
!
!  Finds records previously sent to ADOA which have been deleted from the
!  benefits table and sets their end date to the asof date minus one day.
!
!******************************************************************************
begin-PROCEDURE Update-Include-Flags

	move 'Update-Include-Flags' to $ProcName

begin-SELECT on-error=Error-Proc($ProcName)

EMPLID				&UIF.EMPLID
DEPENDENT_BENEF			&UIF.DEPENDENT_BENEF
PLAN_TYPE			&UIF.PLAN_TYPE
PROCESS_DT			&UIF.PROCESS_DT
SEQNO				&UIF.SEQNO
ASOFDATE			&UIF.ASOFDATE
BENEFIT_RCD_NBR			&UIF.BENEFIT_RCD_NBR
ALTER_EMPLID			&UIF.ALTER_EMPLID
UA_INTF_PLAN_TYPE		&UIF.UA_INTF_PLAN_TYPE
UA_INTF_PLAN_CODE		&UIF.UA_INTF_PLAN_CODE
UA_COVERAGE_OPT			&UIF.UA_COVERAGE_OPT
EFFDT				&UIF.EFFDT
COVERAGE_BEGIN_DT		&UIF.COVERAGE_BEGIN_DT
COVERAGE_END_DT			&UIF.COVERAGE_END_DT
ACTION_CODE			&UIF.ACTION_CODE
UA_INCLUDE_FLAG			&UIF.UA_INCLUDE_FLAG

  let $EMPLID			= &UIF.EMPLID
  let $DEPENDENT_BENEF		= &UIF.DEPENDENT_BENEF
  let $PLAN_TYPE		= &UIF.PLAN_TYPE
  let $SEQNO			= &UIF.SEQNO
  let $BENEFIT_RCD_NBR		= &UIF.BENEFIT_RCD_NBR
  let $ALTER_EMPLID		= &UIF.ALTER_EMPLID
  let $UA_INTF_PLAN_TYPE	= &UIF.UA_INTF_PLAN_TYPE
  let $UA_INTF_PLAN_CODE	= &UIF.UA_INTF_PLAN_CODE
  let $UA_COVERAGE_OPT		= &UIF.UA_COVERAGE_OPT
  let $EFFDT			= &UIF.EFFDT
  let $COVERAGE_BEGIN_DT	= &UIF.COVERAGE_BEGIN_DT
  let $COVERAGE_END_DT		= &UIF.COVERAGE_END_DT
  let $ACTION_CODE		= &UIF.ACTION_CODE


  let $This_Process_Dt		= &UIF.PROCESS_DT
  let $UA_Include_Flag		= &UIF.UA_INCLUDE_FLAG


  !*** If an active coverage record doesn't have an include flag, send it as a term on the $AsOfDate - 1

  if $UA_Include_Flag = 'N' and $This_Process_Dt < $Process_Dt

    if &UIF.DEPENDENT_BENEF = ' ' 		!** Employee Coverage

      if &UIF.ACTION_CODE <> 'S' and		!** Still Active
         &UIF.ACTION_CODE <> 'D'		!** Not Deleted

        let $Action_Code      = 'S'
        let $COVERAGE_END_DT  = dateadd($AsOfDate,'DAY',-1)
        let $UA_Include_Flag = 'Y'

      end-if

    else					!** Dependent Coverage

      if isnull(&UIF.COVERAGE_END_DT) and	!** Still Active
         &UIF.ACTION_CODE <> 'D'		!** Not Deleted

        let $Action_Code      = 'C'
        let $COVERAGE_END_DT  = dateadd($AsOfDate,'DAY',-1)
        let $UA_Include_Flag = 'Y'

      end-if

    end-if


    if $UA_Include_Flag = 'Y'
      do Insert-Into-BENHST
    end-if

  end-if


  !*** Don't Send Term records if they've already been sent

  if $UA_Include_Flag = 'Y' and $This_Process_Dt < $Process_Dt


    if &UIF.DEPENDENT_BENEF = ' ' 		!** Employee Coverage

      if &UIF.ACTION_CODE = 'S' 		!** Not Active

        do Clear-BENHST-Include-Flag

      end-if

    else					!** Dependent Coverage

      if not isnull(&UIF.COVERAGE_END_DT) 	!** Not Active

        do Clear-BENHST-Include-Flag

      end-if

    end-if

  end-if


FROM PS_UA_ADOA_BENHST HST
WHERE HST.ASOFDATE   = (SELECT MAX(ASOFDATE)
                          FROM PS_UA_ADOA_BENHST
                         WHERE EMPLID                 = HST.EMPLID
                           AND DEPENDENT_BENEF        = HST.DEPENDENT_BENEF
                           AND PLAN_TYPE              = HST.PLAN_TYPE
                           AND ASOFDATE              <= $AsOfDate
                           AND UA_ADOA_CONF_FLAG    <> 'X')
  AND HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                          FROM PS_UA_ADOA_BENHST
                         WHERE EMPLID                 = HST.EMPLID
                           AND DEPENDENT_BENEF        = HST.DEPENDENT_BENEF
                           AND PLAN_TYPE              = HST.PLAN_TYPE
                           AND ASOFDATE               = HST.ASOFDATE
                           AND UA_ADOA_CONF_FLAG    <> 'X')
  AND HST.UA_ADOA_CONF_FLAG <> 'X'
end-SELECT


if $RUN_TYPE = 'C'	!Changes Only

  do Clear-Flags-For-Changes-Only

else   			!Full File

  !*** Don't Send Old Emp and Dep Terms

  do Clear-EMPHST-Terms
  do Clear-DEPHST-Terms

end-if


if $First_Run = 'Y'
  do Clear-Today-Terms
end-if


end-PROCEDURE	!Update-Include-Flags


!******************************************************************************
! Clear-BENHST-Include-Flag
!  Sets the include_flag to 'N' on a benefit history record
!******************************************************************************
begin-PROCEDURE Clear-BENHST-Include-Flag

	move 'Clear-BENHST-Include-Flag' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_BENHST
   SET UA_INCLUDE_FLAG = 'N'
 WHERE EMPLID		= $EmplID
   AND DEPENDENT_BENEF	= $Dependent_Benef
   AND PLAN_TYPE	= $Plan_Type
   AND PROCESS_DT	= $This_Process_Dt
end-SQL

end-PROCEDURE	!Clear-BENHST-Include-Flag


!******************************************************************************
! Clear-EMPHST-Terms
!  When run for a full file, this procedure sets the include_flags to 'N' on
!  employees who are terminated or have no coverage
!******************************************************************************
begin-PROCEDURE Clear-EMPHST-Terms

	move 'Clear-EMPHST-Terms' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_EMPHST HST
   SET UA_INCLUDE_FLAG = 'N'
 WHERE UA_INCLUDE_FLAG = 'Y'
   AND PROCESS_DT  < $Process_Dt
   AND (ACTION_CODE = 'T'
            or
        NOT EXISTS (SELECT 'X'
                      FROM PS_UA_ADOA_BENHST
                     WHERE EMPLID           = HST.EMPLID
                       AND DEPENDENT_BENEF  = ' '
                       AND UA_INCLUDE_FLAG = 'Y'))
   AND HST.UA_ADOA_CONF_FLAG <> 'X'
end-SQL

end-PROCEDURE	!Clear-EMPHST-Terms


!******************************************************************************
! Clear-DEPHST-Terms
!  When run for a full file, this procedure sets the include_flags to 'N' on
!  dependents who have no coverage
!******************************************************************************
begin-PROCEDURE Clear-DEPHST-Terms

	move 'Clear-DEPHST-Terms' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_DEPHST HST
   SET UA_INCLUDE_FLAG = 'N'
 WHERE UA_INCLUDE_FLAG = 'Y'
   AND PROCESS_DT  < $Process_Dt
   AND NOT EXISTS (SELECT 'X'
                     FROM PS_UA_ADOA_BENHST
                    WHERE EMPLID           = HST.EMPLID
                      AND DEPENDENT_BENEF  = HST.DEPENDENT_BENEF
                      AND UA_INCLUDE_FLAG = 'Y'
                      AND UA_ADOA_CONF_FLAG <> 'X')
   AND HST.UA_ADOA_CONF_FLAG <> 'X'
end-SQL

end-PROCEDURE	!Clear-DEPHST-Terms


!******************************************************************************
! Clear-Today-Terms
!  If this is the first run of the interface, this procedure sets the
!  include_flags to 'N' on benefit records which are terminated and have today's date
!******************************************************************************
begin-PROCEDURE Clear-Today-Terms

	move 'Clear-Today-Terms' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_BENHST HST
   SET UA_INCLUDE_FLAG = 'N'
 WHERE UA_INCLUDE_FLAG = 'Y'
   AND PROCESS_DT       = $Process_Dt
   AND COVERAGE_END_DT <= $AsOfDate
end-SQL

end-PROCEDURE	!Clear-Today-Terms


!******************************************************************************
! Clear-Flags-For-Changes-Only
!  When run for changes only, this procedure sets the include_flags to 'N' on
!  all old records.
!******************************************************************************
begin-PROCEDURE Clear-Flags-For-Changes-Only

	move 'Clear-Flags-For-Changes-Only' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_EMPHST
   SET UA_INCLUDE_FLAG = 'N'
 WHERE UA_INCLUDE_FLAG = 'Y'
   AND PROCESS_DT < $Process_Dt
   AND UA_ADOA_CONF_FLAG <> 'X'
end-SQL

begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_BENHST
   SET UA_INCLUDE_FLAG = 'N'
 WHERE UA_INCLUDE_FLAG = 'Y'
   AND PROCESS_DT < $Process_Dt
   AND UA_ADOA_CONF_FLAG <> 'X'
end-SQL

begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_DEPHST
   SET UA_INCLUDE_FLAG = 'N'
 WHERE UA_INCLUDE_FLAG = 'Y'
   AND PROCESS_DT < $Process_Dt
   AND UA_ADOA_CONF_FLAG <> 'X'
end-SQL

end-PROCEDURE	!Clear-Flags-For-Changes-Only


!******************************************************************************
! Select-Output-Records
!  Selects the appropriate records to write to the output files.
!******************************************************************************
begin-PROCEDURE Select-Output-Records


!******************* Select Employee Demographic Records **********************

   move 'Select-Output-Records Emp' to $ProcName

   move 0 to #Records_Processed
   show ' '

   move 0 to #WRITE-141-COUNT
   move 0 to #WRITE-513-COUNT
   move 0 to #WRITE-531-COUNT
   move 0 to #WRITE-532-COUNT

   move 'N' TO $HEADER_PRINTED

begin-SELECT on-error=Error-Proc($ProcName)


EMPLID			&SER.EMPLID
ALTER_EMPLID		&SER.ALTER_EMPLID
ACTION_CODE		&SER.ACTION_CODE
UA_DEMO_CHG_FLAG	&SER.UA_DEMO_CHG_FLAG
LAST_NAME		&SER.LAST_NAME
FIRST_NAME		&SER.FIRST_NAME
SUBSTR(MIDDLE_NAME,1,1)	&SER.MIDDLE_INITIAL
ADDRESS1		&SER.ADDRESS1
ADDRESS2		&SER.ADDRESS2
CITY			&SER.CITY
STATE			&SER.STATE
POSTAL			&SER.POSTAL
SEX			&SER.SEX
MAR_STATUS		&SER.MAR_STATUS
BIRTHDATE		&SER.BIRTHDATE
HIRE_DT			&SER.HIRE_DT
EFFDT			&SER.EFFDT
UA_ADDR_CHG_FLAG	&SER.UA_ADDR_CHG_FLAG
UA_NAME_CHG_FLAG	&SER.UA_NAME_CHG_FLAG
ANNUAL_RT		&SER.ANNUAL_RT
COMP_FREQ_SUPP		&SER.COMP_FREQ_SUPP
SSN			&SER.SSN


  MOVE &SER.ALTER_EMPLID       TO $ALTER_EMPLID
  MOVE &SER.ACTION_CODE        TO $ACTION_CODE
  MOVE &SER.UA_DEMO_CHG_FLAG  TO $DEMOGRAPHIC_CHANGE_FLAG
  MOVE &SER.LAST_NAME          TO $LAST_NAME
  MOVE &SER.FIRST_NAME         TO $FIRST_NAME
  MOVE &SER.MIDDLE_INITIAL     TO $MIDDLE_INITIAL
  MOVE &SER.ADDRESS1           TO $ADDRESS1
  MOVE &SER.ADDRESS2           TO $ADDRESS2
  MOVE &SER.CITY               TO $CITY
  MOVE &SER.STATE              TO $STATE

  let $POSTAL                  =  SUBSTR(&SER.POSTAL,1,5)
  let $ZIP4                    =  SUBSTR(&SER.POSTAL,7,4)
  if $ZIP4 = ''
    let $ZIP4 = ' '
  end-if

  MOVE &SER.SEX                TO $SEX
  MOVE &SER.MAR_STATUS         TO $MAR_STATUS

  do set-date(&SER.EFFDT,$EFFECTIVE_DATE_OUT,'MMDDYYYY')
  do set-date(&SER.BIRTHDATE,$BIRTHDATE_OUT,'MMDDYYYY')
  do set-date(&SER.HIRE_DT,$SERVICE_DT_OUT,'MMDDYYYY')

  MOVE &SER.UA_ADDR_CHG_FLAG  TO $ADDRESS_CHANGE_FLAG
  MOVE &SER.UA_NAME_CHG_FLAG  TO $NAME_CHANGE_FLAG
  MOVE &SER.EMPLID             TO $EMPLID

  MOVE &SER.ANNUAL_RT TO #ANNUAL_RT
  LET $ANNUAL_RT           = EDIT(TO_CHAR(#ANNUAL_RT),'000000')
  MOVE &SER.COMP_FREQ_SUPP TO #COMP_FREQ_SUPP
  LET $PAY_PDS_PER_YEAR    = TO_CHAR(#COMP_FREQ_SUPP)

  MOVE &SER.SSN                TO $Employee_SSN

!** Start - HCM-4285 - shimel
  IF $ADDRESS2 = ' ' AND $ADDRESS_CHANGE_FLAG = 'Y'
    DO check-for-previous-blank-address2
  END-IF
!** End - HCM-4285 - shimel

  DO WRITE-141-Record

FROM PS_UA_ADOA_EMPHST OUT
WHERE OUT.UA_INCLUDE_FLAG = 'Y'
  AND OUT.ASOFDATE   = (SELECT MAX(ASOFDATE)
                          FROM PS_UA_ADOA_EMPHST
                         WHERE EMPLID    = OUT.EMPLID
                           AND ASOFDATE <= $AsOfDate
                           AND UA_ADOA_CONF_FLAG <> 'X')
  AND OUT.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                          FROM PS_UA_ADOA_EMPHST
                         WHERE EMPLID    = OUT.EMPLID
                           AND ASOFDATE  = OUT.ASOFDATE
                           AND UA_ADOA_CONF_FLAG <> 'X')
  AND OUT.UA_ADOA_CONF_FLAG <> 'X'
ORDER BY ACTION_CODE, ALTER_EMPLID
end-SELECT

  do write-141-footer


!********************* Select Employee Benefit Records *************************

   move 'Select-Output-Records EmpBen' to $ProcName

   move 0 to #Records_Processed
   show ' '

   move 'N' TO $HEADER_PRINTED

begin-SELECT on-error=Error-Proc($ProcName)


EMPLID			&SEBR.EMPLID
BENEFIT_RCD_NBR		&SEBR.BENEFIT_RCD_NBR
PLAN_TYPE		&SEBR.PLAN_TYPE
ALTER_EMPLID		&SEBR.ALTER_EMPLID
ACTION_CODE		&SEBR.ACTION_CODE
UA_INTF_PLAN_TYPE	&SEBR.UA_INTF_PLAN_TYPE
UA_INTF_PLAN_CODE	&SEBR.UA_INTF_PLAN_CODE
UA_COVERAGE_OPT		&SEBR.UA_COVERAGE_OPT
AMOUNT			&SEBR.AMOUNT
COVERAGE_BEGIN_DT	&SEBR.COVERAGE_BEGIN_DT
COVERAGE_END_DT		&SEBR.COVERAGE_END_DT
SMOKER			&SEBR.SMOKER			!*** 07/29/2009 - Added life/disability  (UofA only)

  move &SEBR.EMPLID       to $EMPLID
  move &SEBR.ACTION_CODE  to $Action_Code
  move &SEBR.ALTER_EMPLID to $ALTER_EMPLID
  move &SEBR.PLAN_TYPE    to $PLAN_TYPE

  let #Amount = &SEBR.AMOUNT
  LET $Amount = EDIT(TO_CHAR(#Amount),'00000000000')

  if $Action_Code = 'S'
    let $Coverage_End_Dt = &SEBR.COVERAGE_END_DT
  else
    let $Coverage_End_Dt = ''
  end-if

  let $Coverage_Begin_Dt = &SEBR.COVERAGE_BEGIN_DT

  !*** Start - 04/29/2010 - WATSONR - If Coverage begin date is prior to last OE date, send last OE date
  if $Coverage_Begin_Dt < $Last_OE_Date and 1 = 2    !** 10/19/2010 - WATSONR - Added 1 = 2 to disable the automatic resend of active benefits on the OE date - HRP-15
    let $Coverage_Begin_Dt = $Last_OE_Date
  end-if
  !*** End - 04/29/2010 - WATSONR - If Coverage begin date is prior to last OE date, send last OE date


  do set-date($Coverage_Begin_Dt,$START_DATE_OUT,'MM/DD/YYYY')
  do set-date($Coverage_End_Dt  ,$STOP_DATE_OUT ,'MM/DD/YYYY')

  move &SEBR.UA_INTF_PLAN_TYPE to $UA_INTF_PLAN_TYPE
  move &SEBR.UA_INTF_PLAN_CODE to $UA_INTF_PLAN_CODE
  move &SEBR.UA_COVERAGE_OPT   to $UA_COVERAGE_OPT
  move &SEBR.SMOKER            to $SMOKER		!*** 07/29/2009 - Added life/disability  (UofA only)

  DO WRITE-531-Record

FROM PS_UA_ADOA_BENHST OUT
WHERE OUT.UA_INCLUDE_FLAG = 'Y'
  AND OUT.DEPENDENT_BENEF  = ' '
  AND (OUT.PLAN_TYPE <> '20' or ACTION_CODE = 'S')                   !*** 01/28/2010 - WATSONR - Only send Stops for plan type 20
  !AND (OUT.COVERAGE_BEGIN_DT >= $Last_OE_Date or ACTION_CODE <> 'S') !*** 04/29/2010 - WATSONR - Don't send any 'S'top benefit records if the coverage begin is earlier than the last OE     !** 10/19/2010 - WATSONR - Commented out to allow begin dates prior to last OE - HRP-15
  AND OUT.ASOFDATE   = (SELECT MAX(ASOFDATE)
                          FROM PS_UA_ADOA_BENHST
                         WHERE EMPLID             = OUT.EMPLID
                           AND DEPENDENT_BENEF    = OUT.DEPENDENT_BENEF
                           AND PLAN_TYPE          = OUT.PLAN_TYPE
                           AND ASOFDATE          <= $AsOfDate
                           AND UA_ADOA_CONF_FLAG    <> 'X')
  AND OUT.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                          FROM PS_UA_ADOA_BENHST
                         WHERE EMPLID             = OUT.EMPLID
                           AND DEPENDENT_BENEF    = OUT.DEPENDENT_BENEF
                           AND PLAN_TYPE          = OUT.PLAN_TYPE
                           AND ASOFDATE           = OUT.ASOFDATE
                           AND UA_ADOA_CONF_FLAG    <> 'X')
  AND OUT.UA_ADOA_CONF_FLAG    <> 'X'
ORDER BY ALTER_EMPLID, PLAN_TYPE, ACTION_CODE DESC
end-SELECT


!******************* Select Dependent Demographic Records **********************

   move 'Select-Output-Records Emp' to $ProcName

   move 0 to #Records_Processed
   show ' '

   move 'N' TO $HEADER_PRINTED

begin-SELECT on-error=Error-Proc($ProcName)


EMPLID			&SDR.EMPLID
DEPENDENT_BENEF		&SDR.DEPENDENT_BENEF
ALTER_EMPLID		&SDR.ALTER_EMPLID
LAST_NAME		&SDR.LAST_NAME
FIRST_NAME		&SDR.FIRST_NAME
SUBSTR(MIDDLE_NAME,1,1)	&SDR.MIDDLE_INITIAL
NAME_SUFFIX		&SDR.NAME_SUFFIX
EFFDT			&SDR.EFFDT
UA_RELATIONSHIP		&SDR.UA_RELATIONSHIP
BIRTHDATE		&SDR.BIRTHDATE
UA_DEPENDENT_TYPE	&SDR.UA_DEPENDENT_TYPE
SEX			&SDR.SEX
SMOKER			&SDR.SMOKER
STUDENT			&SDR.STUDENT
DISABLED		&SDR.DISABLED
COVERAGE_BEGIN_DT	&SDR.COVERAGE_BEGIN_DT
ACTION_CODE		&SDR.ACTION_CODE
SSN			&SDR.SSN

  move &SDR.EMPLID       	TO $EMPLID
  MOVE &SDR.ACTION_CODE		TO $ACTION_CODE
  MOVE &SDR.ALTER_EMPLID	TO $ALTER_EMPLID

  let $UA_DEPENDENT_NBR = ltrim(&SDR.DEPENDENT_BENEF,'0')

  MOVE &SDR.LAST_NAMe		TO $LAST_NAME
  MOVE &SDR.FIRST_NAME		TO $FIRST_NAME
  MOVE &SDR.MIDDLE_INITIAL	TO $MIDDLE_INITIAL
  MOVE &SDR.UA_RELATIONSHIP	TO $UA_RELATIONSHIP
  MOVE &SDR.UA_DEPENDENT_TYPE	TO $UA_DEPENDENT_TYPE

  do set-date(&SDR.BIRTHDATE,$BIRTHDATE_OUT,'MM/DD/YYYY')

  MOVE &SDR.SEX			TO $SEX
  MOVE &SDR.SMOKER		TO $SMOKER
  MOVE &SDR.STUDENT		TO $STUDENT
  MOVE &SDR.DISABLED		TO $DISABLED

  do set-date(&SDR.COVERAGE_BEGIN_DT,$COVERAGE_BEGIN_DT_OUT,'MM/DD/YYYY')

  LET $ACTIVE_FLAG = 'A'

  MOVE &SDR.NAME_SUFFIX		TO $NAME_SUFFIX

  do set-date(&SDR.EFFDT,$EFFDT_OUT,'MM/DD/YYYY')

  MOVE &SDR.SSN                 TO $Dependent_SSN

  DO WRITE-513-Record

FROM PS_UA_ADOA_DEPHST OUT
WHERE OUT.UA_INCLUDE_FLAG = 'Y'
  AND OUT.ASOFDATE   = (SELECT MAX(ASOFDATE)
                          FROM PS_UA_ADOA_DEPHST
                         WHERE EMPLID          = OUT.EMPLID
                           AND DEPENDENT_BENEF = OUT.DEPENDENT_BENEF
                           AND ASOFDATE       <= $AsOfDate
                           AND UA_ADOA_CONF_FLAG <> 'X')
  AND OUT.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                          FROM PS_UA_ADOA_DEPHST
                         WHERE EMPLID          = OUT.EMPLID
                           AND DEPENDENT_BENEF = OUT.DEPENDENT_BENEF
                           AND ASOFDATE        = OUT.ASOFDATE
                           AND UA_ADOA_CONF_FLAG <> 'X')
  AND OUT.UA_ADOA_CONF_FLAG <> 'X'
ORDER BY ACTION_CODE, ALTER_EMPLID, DEPENDENT_BENEF
end-SELECT


!********************* Select Dependent Benefit Records *************************

   move 'Select-Output-Records DepBen' to $ProcName

   move 0 to #Records_Processed
   show ' '

   move 'N' TO $HEADER_PRINTED

begin-SELECT on-error=Error-Proc($ProcName)


EMPLID			&SDBR.EMPLID
DEPENDENT_BENEF		&SDBR.DEPENDENT_BENEF
PLAN_TYPE		&SDBR.PLAN_TYPE
BENEFIT_RCD_NBR		&SDBR.BENEFIT_RCD_NBR
ALTER_EMPLID		&SDBR.ALTER_EMPLID
ACTION_CODE		&SDBR.ACTION_CODE
UA_INTF_PLAN_TYPE	&SDBR.UA_INTF_PLAN_TYPE
UA_INTF_PLAN_CODE	&SDBR.UA_INTF_PLAN_CODE
UA_COVERAGE_OPT	&SDBR.UA_COVERAGE_OPT
EFFDT			&SDBR.EFFDT
COVERAGE_BEGIN_DT	&SDBR.COVERAGE_BEGIN_DT
COVERAGE_END_DT		&SDBR.COVERAGE_END_DT

  move &SDBR.EMPLID       	to $EMPLID
  move &SDBR.ACTION_CODE  	to $Action_Code
  move &SDBR.ALTER_EMPLID 	to $ALTER_EMPLID
  move &SDBR.PLAN_TYPE		to $PLAN_TYPE

  let $UA_DEPENDENT_NBR = ltrim(&SDBR.DEPENDENT_BENEF,'0')

  if $Action_Code = 'C'
    let $Coverage_End_Dt = &SDBR.COVERAGE_END_DT
  else
    let $Coverage_End_Dt = ''
  end-if


  let $Coverage_Begin_Dt = &SDBR.COVERAGE_BEGIN_DT


  do set-date(&SDBR.EFFDT       ,$EE_START_DATE_OUT  ,'MM/DD/YYYY')
  do set-date($COVERAGE_BEGIN_DT,$START_DATE_OUT     ,'MM/DD/YYYY')
  do set-date($Coverage_End_Dt  ,$STOP_DATE_OUT      ,'MM/DD/YYYY')

  move &SDBR.UA_INTF_PLAN_TYPE to $UA_INTF_PLAN_TYPE
  move &SDBR.UA_INTF_PLAN_CODE to $UA_INTF_PLAN_CODE
  move &SDBR.UA_COVERAGE_OPT   to $UA_COVERAGE_OPT

  DO WRITE-532-Record

FROM PS_UA_ADOA_BENHST OUT
WHERE OUT.UA_INCLUDE_FLAG = 'Y'
  AND OUT.DEPENDENT_BENEF <> ' '
  !AND (OUT.COVERAGE_BEGIN_DT >= $Last_OE_Date or ACTION_CODE <> 'C')         !*** 04/29/2010 - WATSONR - Don't send any 'C' (stop) benefit record if the coverage begin is earlier than the last OE  !** 10/19/2010 - WATSONR - Commented out to allow begin dates prior to last OE - HRP-15
  AND OUT.ASOFDATE   = (SELECT MAX(ASOFDATE)
                          FROM PS_UA_ADOA_BENHST
                         WHERE EMPLID             = OUT.EMPLID
                           AND DEPENDENT_BENEF    = OUT.DEPENDENT_BENEF
                           AND PLAN_TYPE          = OUT.PLAN_TYPE
                           AND ASOFDATE          <= $AsOfDate
                           AND UA_ADOA_CONF_FLAG    <> 'X')
  AND OUT.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                          FROM PS_UA_ADOA_BENHST
                         WHERE EMPLID             = OUT.EMPLID
                           AND DEPENDENT_BENEF    = OUT.DEPENDENT_BENEF
                           AND PLAN_TYPE          = OUT.PLAN_TYPE
                           AND ASOFDATE           = OUT.ASOFDATE
                           AND UA_ADOA_CONF_FLAG    <> 'X')
  AND OUT.UA_ADOA_CONF_FLAG    <> 'X'
ORDER BY ALTER_EMPLID, DEPENDENT_BENEF, PLAN_TYPE, ACTION_CODE DESC
end-SELECT


end-procedure	!Select-Output-Records


!********************************
begin-procedure write-header-rows
!********************************

  DO FORMAT-DATETIME($ASOFTODAY, $ASOFTODAY_OUT,{DEFMDY}, '', '')
  unstring $ASOFTODAY_OUT BY '/' INTO $MONTH_OUT $DAY_OUT $YEAR_OUT
  LET $FORMATTED_ASOFTODAY = $MONTH_OUT || $DAY_OUT || $YEAR_OUT
  let $space = ' '


  let $header = 'BATCH HEADER UA  ' || $FORMATTED_ASOFTODAY || $FORMATTED_ASOFTODAY
  write #file_141_out from $header -
               $space:228

  write #file_141_bak from $header -
               $space:228

  let $header = 'Fc,Company,EnrollmentDate,Employee,PlanType,PlanCode,CoverOpt,MultSalary,CoverAmt,PayRate,PctAmtFlag,StartDate,PreAftFlag,SmokerFlag,EmpPreCont,EmpAftCont,StopDate,PendEvidence,YtdCont,CreationDate,UpdDate,UserId,TimeStamp,CreateTrans,Reason,MemberId'
  write #file_531_out from $header

  write #file_531_bak from $header

  let $header = 'Fc,Company,Employee,SeqNbr,LastName,FirstName,MiddleInit,FicaNbr,EmpAddress,RelCode,DepType,Birthdate,Sex,Smoker,Student,Disabled,PrimaryCare,HlCovFlag,DnCovFlag,DlCovFlag,Addr1,Addr2,Addr3,Addr4,City,State,Zip,CountryCode,HmPhoneCntry,HmPhoneNbr,WkPhoneCntry,WkPhoneNbr,WkPhoneExt,AdoptionDate,PlacementDate,Consent,ActiveFlag,LastNamePre,NameSuffix,Deceased,DateOfDeath,PriorMonthsCov,EstabPatient,EffectDate'   !JGM - TBGI - Changed 03/04/2008 - Added EffectDate
  write #file_513_out from $header

  write #file_513_bak from $header

  let $header = 'Fc,Company,Employee,Dependent,PlanType,PlanCode,EmpStart,StartDate,StopDate,CreationDate,UpdDate,TimeStamp,UserId,CreateTrans,Reason,MemberId'
  write #file_532_out from $header

  write #file_532_bak from $header

end-procedure	!write-header-rows


!******************************************************************************
! Write-141-Record
!******************************************************************************
begin-PROCEDURE Write-141-Record

    let $space = ' '

  write #file_141_out from
		   '01'                        -     !Transaction Code
                   $ALTER_EMPLID:9             -     !Employee Id
                   $ACTION_CODE:1              -     !Action Code
                   'UA'                        -     !Agency Code
                   $DEMOGRAPHIC_CHANGE_FLAG:1  -     !Demographic Change Flag
                   'N'             	       -     !$space:1                    -     !Work Phone Change Flag
                   $LAST_NAME:15               -
                   $FIRST_NAME:15              -
                   $MIDDLE_INITIAL:1           -
                   $ADDRESS1:30                -
                   $ADDRESS2:30                -
                   $CITY:18                    -
                   $STATE:2                    -
                   $POSTAL:5                   -
                   $ZIP4:4                     -
                   $space:3                    -     !Home Phone Area
                   $space:3                    -     !Home Phone Exch
                   $space:4                    -     !Home Phone No
                   $SEX:1                      -     !Gender Code
                   $MAR_STATUS:1               -
                   $BIRTHDATE_OUT:8            -
                   $space:1                    -     !Pay Cycle  D = UA
                   $SERVICE_DT_OUT:8           -     !Date of Employment
                   $EFFECTIVE_DATE_OUT:8       -     !Effective Date
                   $ANNUAL_RT:6                -     !Annual Salary
                   $space:2                    -     !Hours Worked
                   $space:3                    -     !Work Phone Area
                   $space:3                    -     !Work Phone Exch
                   $space:4                    -     !Work Phone No.
                   $ADDRESS_CHANGE_FLAG:1      -     !new effective dated address row? Y/N
                   $NAME_CHANGE_FLAG:1         -     !new effective dated name row? Y/N
                   $space:2                    -     !2 space fill
                   $space:4                    -     !Retirement Code
                   $Employee_SSN:9                   !Employee ID
                   'X'                         -     !University Flag
                   $space:1                    -     !Employee Type
                   $PAY_PDS_PER_YEAR:2         -     !# of Pay Periods
                   'N'                         -     !Foreign Address Indicator
                   $space:48

                   !$space:33                  -     !Country or County
                   !$UA_AsOfToday:8            -     !date of action
                   !$UA_AsOfNow:6              -     !time of action
                   !'N'                            !system indicator

  write #file_141_bak from
		   '01'                        -     !Transaction Code
                   $ALTER_EMPLID:9             -     !Employee Id
                   $ACTION_CODE:1              -     !Action Code
                   'UA'                        -     !Agency Code
                   $DEMOGRAPHIC_CHANGE_FLAG:1  -     !Demographic Change Flag
                   'N'             	       -     !$space:1                    -     !Work Phone Change Flag
                   $LAST_NAME:15               -
                   $FIRST_NAME:15              -
                   $MIDDLE_INITIAL:1           -
                   $ADDRESS1:30                -
                   $ADDRESS2:30                -
                   $CITY:18                    -
                   $STATE:2                    -
                   $POSTAL:5                   -
                   $ZIP4:4                     -
                   $space:3                    -     !Home Phone Area
                   $space:3                    -     !Home Phone Exch
                   $space:4                    -     !Home Phone No
                   $SEX:1                      -     !Gender Code
                   $MAR_STATUS:1               -
                   $BIRTHDATE_OUT:8            -
                   $space:1                    -     !Pay Cycle  D = UA
                   $SERVICE_DT_OUT:8           -     !Date of Employment
                   $EFFECTIVE_DATE_OUT:8       -     !Effective Date
                   $ANNUAL_RT:6                -     !Annual Salary
                   $space:2                    -     !Hours Worked
                   $space:3                    -     !Work Phone Area
                   $space:3                    -     !Work Phone Exch
                   $space:4                    -     !Work Phone No.
                   $ADDRESS_CHANGE_FLAG:1      -     !new effective dated address row? Y/N
                   $NAME_CHANGE_FLAG:1         -     !new effective dated name row? Y/N
                   $space:2                    -     !2 space fill
                   $space:4                    -     !Retirement Code
                   $Employee_SSN:9                   !Employee ID
                   'X'                         -     !University Flag
                   $space:1                    -     !Employee Type
                   $PAY_PDS_PER_YEAR:2         -     !# of Pay Periods
                   'N'                         -     !Foreign Address Indicator
                   $space:48

                   !$space:33                  -     !Country or County
                   !$UA_AsOfToday:8            -     !date of action
                   !$UA_AsOfNow:6              -     !time of action
                   !'N'                            !system indicator

     ADD 1 TO #WRITE-141-COUNT

     if $RUN_TYPE = 'C'
       DO WRITE-141-REPORT
     end-if

end-procedure	!Write-141-Record


!*****************************
begin-procedure WRITE-141-REPORT
!*****************************
   !-----------------------
   ! Print Header
   !-----------------------

   IF $HEADER_PRINTED = 'N' OR #current-line > {max_lines}
      IF $HEADER_PRINTED = 'N'
         MOVE 'Y' TO $HEADER_PRINTED
      END-IF
      if #current-line > {max_lines}
         NEW-PAGE
      END-IF
      let $Section_Title = 'Employee Demographics for '||$Date_Display
      PRINT $Section_Title	(+1,1)
      PRINT 'Action/'		(+2,{141_COL3})
      PRINT 'Demograhic'	(  ,{141_COL4})
      PRINT 'Last Name/'	(  ,{141_COL5})
      PRINT 'Address1/'		(+1,{141_COL3})
      PRINT 'Change Flg/'	(  ,{141_COL4})
      PRINT 'Address2/'		(  ,{141_COL5})
      PRINT 'First Name/'	(  ,{141_COL6})
      PRINT 'Middle Init/'	(  ,{141_COL7})
      PRINT 'Address'		(  ,{141_COL18})
      PRINT 'Name'		(  ,{141_COL19})
      PRINT 'Emplid'		(+1,{141_COL1})
      PRINT 'Alter Emplid'	(  ,{141_COL2})
      PRINT 'City'		(  ,{141_COL3})
      PRINT 'State'		(  ,{141_COL11})
      PRINT 'Zip'		(  ,{141_COL12})
      PRINT 'Zip4'		(  ,{141_COL13})
      PRINT 'Sex'		(  ,{141_COL14})
      PRINT 'Mar Status'	(  ,{141_COL15})
      PRINT 'Birthdate'		(  ,{141_COL16})
      PRINT 'Job Effdt'		(  ,{141_COL17})
      PRINT 'Change'		(  ,{141_COL18})
      PRINT 'Change'		(  ,{141_COL19})
      print '-'			(+1,1,{line_length}) fill
   END-IF

   !-----------------------
   ! Print employee detail
   !-----------------------
   PRINT $EMPLID                   (+1,{141_COL1})
   PRINT $ALTER_EMPLID             (  ,{141_COL2})
   PRINT $ACTION_CODE              (  ,{141_COL3})
   PRINT $DEMOGRAPHIC_CHANGE_FLAG  (  ,{141_COL4})
   PRINT $LAST_NAME                (  ,{141_COL5})
   PRINT $FIRST_NAME               (  ,{141_COL6})
   PRINT $MIDDLE_INITIAL           (  ,{141_COL7})
   PRINT $ADDRESS1                 (+1,{141_COL3})
   PRINT $ADDRESS2                 (  ,{141_COL9})
   PRINT $CITY                     (+1,{141_COL3})
   PRINT $STATE                    (  ,{141_COL11})
   PRINT $POSTAL                   (  ,{141_COL12})
   PRINT $ZIP4                     (  ,{141_COL13})
   PRINT $SEX                      (  ,{141_COL14})
   PRINT $MAR_STATUS               (  ,{141_COL15})
   PRINT $BIRTHDATE_OUT            (  ,{141_COL16})
   PRINT $EFFECTIVE_DATE_OUT       (  ,{141_COL17})
   PRINT $ADDRESS_CHANGE_FLAG      (  ,{141_COL18})
   PRINT $NAME_CHANGE_FLAG         (  ,{141_COL19})
   PRINT ' '                       (+1,1)


end-procedure	!WRITE-141-REPORT



!********************************
begin-procedure write-141-footer
!********************************

  LET $WRITE_COUNT = EDIT(#WRITE-141-COUNT,'00000000')
  let $space = ' '
  let $footer = 'BATCH TRAILER ' || $WRITE_COUNT ||  $WRITE_COUNT || $FORMATTED_ASOFTODAY
  write #file_141_out from $footer -
               $space:223

  write #file_141_bak from $footer -
               $space:223

end-procedure	!write-141-footer



!******************************************************************************
! Write-531-Record
!******************************************************************************
begin-PROCEDURE Write-531-Record

    let $space = ' '
    let $comma = ','

  write #file_531_out from
                   $Action_Code                -     !BNB-FC Function Code
                   $comma                      -
                   '7'                         -
                   $comma                      -
                   '00/00/0000'                -     !$ENROLLMENT_DATE:10 mm/dd/ccyy OR LEAVE BLANK
                   $comma                      -
                   $ALTER_EMPLID:9             -     !Employee Id
                   $comma                      -
                   $UA_INTF_PLAN_TYPE         -     !:2
                   $comma                      -
                   $UA_INTF_PLAN_CODE         -     !:4
                   $comma                      -
                   $UA_COVERAGE_OPT           -     !:2
                   $comma                      -
                  !'00000'                     -     !MultiSalary
                   $comma                      -
                   $Amount:11                  -     !Coverage Amount   !*** 07/29/2009 - Added life/disability
                   $comma                      -
                  !$SPACE:13                   -     !Pay Rate
                   $comma                      -
                  !$SPACE:1                    -     !PCT Amt Flag
                   $comma                      -
                   $START_DATE_OUT             -     !START DATE' mm/dd/ccyy
                   $comma                      -
                  !$SPACE:1                    -     !pre-aft-Flag
                   $comma                      -
                   $SMOKER:1                   -     !SMOKER FLAG	!*** 07/29/2009 - Added life/disability  (UofA only)
                   $comma                      -
                  !$SPACE:11                   -     !Pre-tax Contribution
                   $comma                      -
                  !$SPACE:11                   -     !After-Tax
                   $comma                      -
                   $STOP_DATE_OUT              -     !mm/dd/ccyy
                   $comma                      -
                  !$SPACE:1                    -     !Evidence of Insurability
                   $comma                      -
                  !$SPACE:11                   -     !Year to Date Contributions
                   $comma                      -
                   '00/00/0000'                -     !Creating Date
                   $comma                      -
                   '00/00/0000'                -     !Update Date
                   $comma                      -
                   $ALTER_EMPLID               -     !User ID
                   $comma                      -
                   '0:00:00'                   -     !Time Stamp
                   $comma                      -
                  !$SPACE:1                    -     !Create Transactions
                   $comma                      -
                  !$SPACE:2                    -     !Reason
                   $comma
                  !$SPACE:1                          !Member ID

  write #file_531_bak from
                   $Action_Code                -     !BNB-FC Function Code
                   $comma                      -
                   '7'                         -
                   $comma                      -
                   '00/00/0000'                -     !$ENROLLMENT_DATE:10 mm/dd/ccyy OR LEAVE BLANK
                   $comma                      -
                   $ALTER_EMPLID:9             -     !Employee Id
                   $comma                      -
                   $UA_INTF_PLAN_TYPE         -     !:2
                   $comma                      -
                   $UA_INTF_PLAN_CODE         -     !:4
                   $comma                      -
                   $UA_COVERAGE_OPT           -     !:2
                   $comma                      -
                  !'00000'                     -     !MultiSalary
                   $comma                      -
                   $Amount:11                  -     !Coverage Amount   !*** 07/29/2009 - Added life/disability
                   $comma                      -
                  !$SPACE:13                   -     !Pay Rate
                   $comma                      -
                  !$SPACE:1                    -     !PCT Amt Flag
                   $comma                      -
                   $START_DATE_OUT             -     !START DATE' mm/dd/ccyy
                   $comma                      -
                  !$SPACE:1                    -     !pre-aft-Flag
                   $comma                      -
                   $SMOKER:1                   -     !SMOKER FLAG	!*** 07/29/2009 - Added life/disability  (UofA only)
                   $comma                      -
                  !$SPACE:11                   -     !Pre-tax Contribution
                   $comma                      -
                  !$SPACE:11                   -     !After-Tax
                   $comma                      -
                   $STOP_DATE_OUT              -     !mm/dd/ccyy
                   $comma                      -
                  !$SPACE:1                    -     !Evidence of Insurability
                   $comma                      -
                  !$SPACE:11                   -     !Year to Date Contributions
                   $comma                      -
                   '00/00/0000'                -     !Creating Date
                   $comma                      -
                   '00/00/0000'                -     !Update Date
                   $comma                      -
                   $ALTER_EMPLID               -     !User ID
                   $comma                      -
                   '0:00:00'                   -     !Time Stamp
                   $comma                      -
                  !$SPACE:1                    -     !Create Transactions
                   $comma                      -
                  !$SPACE:2                    -     !Reason
                   $comma
                  !$SPACE:1                          !Member ID

     ADD 1 TO #WRITE-531-COUNT

     if $RUN_TYPE = 'C'
       DO WRITE-531-REPORT
     end-if

end-procedure	!Write-531-Record


!*****************************
begin-procedure WRITE-531-REPORT
!*****************************
   !-----------------------
   ! Print Header
   !-----------------------

   IF $HEADER_PRINTED = 'N' OR #current-line > {max_lines}

      IF $HEADER_PRINTED = 'N'
         MOVE 'Y' TO $HEADER_PRINTED
      END-IF
      if #current-line > {max_lines}
         NEW-PAGE
      END-IF
      let $Section_Title = 'Employee Benefits for '||$Date_Display
      PRINT $Section_Title	(+1,1)
      PRINT 'Emplid'		(+2,{531_COL1})
      PRINT 'Alter Emplid'	(  ,{531_COL2})
      PRINT 'Action'		(  ,{531_COL3})
      PRINT 'Plan Type'		(  ,{531_COL4})
      PRINT 'ADOA Plan Type'	(  ,{531_COL5})
      PRINT 'ADOA Plan Code'	(  ,{531_COL6})
      PRINT 'ADOA Coverage Opt'	(  ,{531_COL7})
      PRINT 'Amount'		(  ,{531_COL8})
      PRINT 'Start Date'	(  ,{531_COL9})
      PRINT 'Stop Date'		(  ,{531_COL10})
      print '-'			(+1,1,{line_length}) fill

   END-IF

   if #Amount = 0
     let $Amount = ' '
   else
     let #Amount = #Amount
     move #Amount to $Amount '999,999'
   end-if

   !-----------------------
   ! Print employee benefit detail
   !-----------------------
   PRINT $EMPLID		(+1,{531_COL1})
   PRINT $ALTER_EMPLID		(  ,{531_COL2})
   PRINT $ACTION_CODE		(  ,{531_COL3})
   PRINT $PLAN_TYPE		(  ,{531_COL4})
   PRINT $UA_INTF_PLAN_TYPE	(  ,{531_COL5})
   PRINT $UA_INTF_PLAN_CODE	(  ,{531_COL6})
   PRINT $UA_COVERAGE_OPT	(  ,{531_COL7})
   PRINT $AMOUNT		(  ,{531_COL8})
   PRINT $START_DATE_OUT	(  ,{531_COL9})
   PRINT $STOP_DATE_OUT		(  ,{531_COL10})

   PRINT ' '                       (+1,1)

end-procedure	!Write-531-Report



!******************************************************************************
! Write-513-Record
!******************************************************************************
begin-PROCEDURE Write-513-Record

    let $space = ' '
    let $comma = ','

    let $MIDDLE_INITIAL  = rtrim($MIDDLE_INITIAL,' ')
    let $NAME_SUFFIX     = rtrim($NAME_SUFFIX,' ')
    Let $LAST_NAME_OUT   = '"'||substr($LAST_NAME,1,28)||'"'
    Let $FIRST_NAME_OUT  = '"'||substr($FIRST_NAME,1,13)||'"'

     write #file_513_out from
		 $Action_Code:1
                 $comma
                 '7'                          !COMPANY
                 $comma
                 $ALTER_EMPLID:9
                 $comma
                 $UA_DEPENDENT_NBR           !:4
                 $comma
                 $LAST_NAME_OUT:30
                 $comma
                 $FIRST_NAME_OUT:15
                 $comma
                 $MIDDLE_INITIAL
                 $comma
                 $Dependent_SSN:15            !FICA-NBR
                 $comma
                 !$space:1                    !EMP-ADDRESS
                 $comma
                 $UA_RELATIONSHIP:10
                 $comma
                 $UA_DEPENDENT_TYPE:1
                 $comma
                 $BIRTHDATE_OUT               !MM/DD/CCYY
                 $comma
                 $SEX:1
                 $comma
                 $SMOKER:1
                 $comma
                 $STUDENT:1
                 $comma
                 $DISABLED:1
                 $comma
                !$SPACE:10                    !PRIMARY-CARE
                 $comma
                 'N'                          !HL-COV-FLAG
                 $comma
                 'N'                          !DN-COV-FLAG
                 $comma
                 'N'                          !DL-COV-FLAG
                 $comma
                !$SPACE:30                    !ADDR1
                 $comma
                !$SPACE:30                    !ADDR2
                 $comma
                !$SPACE:30                    !ADDR3
                 $comma
                !$SPACE:30                    !ADDR4
                 $comma
                !$SPACE:18                    !CITY
                 $comma
                !$SPACE:2                    !STATE
                 $comma
                !$SPACE:10                    !ZIP
                 $comma
                !$SPACE:2                     !COUNTRY-CODE
                 $comma
                !$SPACE:6                     !HM-PHONE-CNTRY
                 $comma
                !$SPACE:10                    !HM-PHONE-NBR
                 $comma
                !$SPACE:6                     !WK-PHONE-CNTRY
                 $comma
                !$SPACE:10                    !WK-PHONE-NBR
                 $comma
                !$SPACE:5                     !WK-PHONE-EXT
                 $comma
                '00/00/0000'                  !ADOPTION-DATE   NOT AVAILABLE IN PEOPLESOFT
                 $comma
                 $COVERAGE_BEGIN_DT_OUT       !'00/00/0000'  !PLACEMENT-DATE  NOT AVAILABLE IN PEOPLESOFT
                 $comma
                !$SPACE:1                     !CONSENT
                 $comma
                 $ACTIVE_FLAG:1               !ACTIVE-FLAG     NOT AVAILABLE IN PEOPLESOFT
                 $comma
                !$SPACE:30                    !LAST-NAME-PRE
                 $comma
                 $NAME_SUFFIX                 !NAME-SUFFIX
                 $comma
                 'N'       			!DECEASED
                 $comma
                 '00/00/0000'			!DATE-OF-DATE
                 $comma
                 $SPACE:2			!PRIOR-COV-MO
                 $comma
                 $SPACE:1                       !ESTAB-PATIENT
                 $comma
                 $EFFDT_OUT                    !EFFECT-DATE

     write #file_513_bak from
		 $Action_Code:1
                 $comma
                 '7'                          !COMPANY
                 $comma
                 $ALTER_EMPLID:9
                 $comma
                 $UA_DEPENDENT_NBR           !:4
                 $comma
                 $LAST_NAME_OUT:30
                 $comma
                 $FIRST_NAME_OUT:15
                 $comma
                 $MIDDLE_INITIAL
                 $comma
                 $Dependent_SSN:15            !FICA-NBR
                 $comma
                 !$space:1                    !EMP-ADDRESS
                 $comma
                 $UA_RELATIONSHIP:10
                 $comma
                 $UA_DEPENDENT_TYPE:1
                 $comma
                 $BIRTHDATE_OUT               !MM/DD/CCYY
                 $comma
                 $SEX:1
                 $comma
                 $SMOKER:1
                 $comma
                 $STUDENT:1
                 $comma
                 $DISABLED:1
                 $comma
                !$SPACE:10                    !PRIMARY-CARE
                 $comma
                 'N'                          !HL-COV-FLAG
                 $comma
                 'N'                          !DN-COV-FLAG
                 $comma
                 'N'                          !DL-COV-FLAG
                 $comma
                !$SPACE:30                    !ADDR1
                 $comma
                !$SPACE:30                    !ADDR2
                 $comma
                !$SPACE:30                    !ADDR3
                 $comma
                !$SPACE:30                    !ADDR4
                 $comma
                !$SPACE:18                    !CITY
                 $comma
                !$SPACE:2                    !STATE
                 $comma
                !$SPACE:10                    !ZIP
                 $comma
                !$SPACE:2                     !COUNTRY-CODE
                 $comma
                !$SPACE:6                     !HM-PHONE-CNTRY
                 $comma
                !$SPACE:10                    !HM-PHONE-NBR
                 $comma
                !$SPACE:6                     !WK-PHONE-CNTRY
                 $comma
                !$SPACE:10                    !WK-PHONE-NBR
                 $comma
                !$SPACE:5                     !WK-PHONE-EXT
                 $comma
                '00/00/0000'                  !ADOPTION-DATE   NOT AVAILABLE IN PEOPLESOFT
                 $comma
                 $COVERAGE_BEGIN_DT_OUT       !'00/00/0000'  !PLACEMENT-DATE  NOT AVAILABLE IN PEOPLESOFT
                 $comma
                !$SPACE:1                     !CONSENT
                 $comma
                 $ACTIVE_FLAG:1               !ACTIVE-FLAG     NOT AVAILABLE IN PEOPLESOFT
                 $comma
                !$SPACE:30                    !LAST-NAME-PRE
                 $comma
                 $NAME_SUFFIX                 !NAME-SUFFIX
                 $comma
                 'N'       			!DECEASED
                 $comma
                 '00/00/0000'			!DATE-OF-DATE
                 $comma
                 $SPACE:2			!PRIOR-COV-MO
                 $comma
                 $SPACE:1                       !ESTAB-PATIENT
                 $comma
                 $EFFDT_OUT                    !EFFECT-DATE

     ADD 1 TO #WRITE-513-COUNT

     if $RUN_TYPE = 'C'		!* Don't print to the report unless this is a changes only run
       DO WRITE-513-REPORT
     end-if

end-procedure	!Write-513-Record


!*****************************
begin-procedure WRITE-513-REPORT
!*****************************
   !-----------------------
   ! Print Header
   !-----------------------

   IF $HEADER_PRINTED = 'N' OR #current-line > {max_lines}
      IF $HEADER_PRINTED = 'N'
         MOVE 'Y' TO $HEADER_PRINTED
      END-IF
      if #current-line > {max_lines}
         NEW-PAGE
      END-IF
      let $Section_Title = 'Dependent Demographics for '||$Date_Display
      PRINT $Section_Title	(+1,1)
      PRINT 'Dependent'   	(+2,{513_COL3})
      PRINT 'Middle'		(  ,{513_COL6})
      PRINT 'Dep'		(  ,{513_COL9})
      PRINT 'Placement'		(  ,{513_COL15})
      PRINT 'Name'		(  ,{513_COL16})

      PRINT 'Emplid'		(+1,{513_COL1})
      PRINT 'Alter Emplid'	(  ,{513_COL2})
      PRINT 'Number'		(  ,{513_COL3})
      PRINT 'Action'		(  ,{513_COL4})
      PRINT 'Last Name'		(  ,{513_COL5})
      PRINT 'First Name'	(  ,{513_COL6})
      PRINT 'Init'		(  ,{513_COL7})
      PRINT 'Relation'		(  ,{513_COL8})
      PRINT 'Type'		(  ,{513_COL9})
      PRINT 'Birthdate'		(  ,{513_COL10})
      PRINT 'Sex'		(  ,{513_COL11})
      PRINT 'Smoker'		(  ,{513_COL12})
      PRINT 'Student'		(  ,{513_COL13})
      PRINT 'Disabled'		(  ,{513_COL14})
      PRINT 'Date'		(  ,{513_COL15})
      PRINT 'Suffix'		(  ,{513_COL16})

      print '-'			(+1,1,{line_length}) fill

   END-IF

   !-----------------------
   ! Print dependent detail
   !-----------------------
   PRINT $EMPLID		(+1,{513_COL1})
   PRINT $ALTER_EMPLID		(  ,{513_COL2})
   PRINT $UA_DEPENDENT_NBR	(  ,{513_COL3})
   PRINT $ACTION_CODE		(  ,{513_COL4})
   PRINT $LAST_NAME		(  ,{513_COL5})
   PRINT $FIRST_NAME		(  ,{513_COL6})
   PRINT $MIDDLE_INITIAL	(  ,{513_COL7})
   PRINT $UA_RELATIONSHIP	(  ,{513_COL8})
   PRINT $UA_DEPENDENT_TYPE	(  ,{513_COL9})
   PRINT $BIRTHDATE_OUT		(  ,{513_COL10})
   PRINT $SEX			(  ,{513_COL11})
   PRINT $SMOKER		(  ,{513_COL12})
   PRINT $STUDENT		(  ,{513_COL13})
   PRINT $DISABLED		(  ,{513_COL14})
   PRINT $COVERAGE_BEGIN_DT_OUT	(  ,{513_COL15})
   PRINT $NAME_SUFFIX		(  ,{513_COL16})

   PRINT ' '                       (+1,1)


end-procedure	!Write-513-Report



!******************************************************************************
! Write-532-Record
!******************************************************************************
begin-PROCEDURE Write-532-Record


    let $space = ' '
    let $comma = ','

    let $INTF_PLAN_TYPE         = rtrim($INTF_PLAN_TYPE,' ')
    let $UA_INTF_PLAN_CODE      = rtrim($UA_INTF_PLAN_CODE,' ')


    write #file_532_out from
                   $Action_Code:1             -      !BNB-FC Function Code
                   $comma                     -
                   '7'                        -      !Company
                   $comma                     -
                   $ALTER_EMPLID              -      !Employee Id
                   $comma                     -
                   $UA_DEPENDENT_NBR          -
                   $comma                     -
                   $UA_INTF_PLAN_TYPE         -
                   $comma                     -
                   $UA_INTF_PLAN_CODE         -
                   $comma                     -
                   $EE_START_DATE_OUT         -
                   $comma                     -
                   $START_DATE_OUT            -
                   $comma                     -
                   $STOP_DATE_OUT             -
                   $comma                     -
                   '00/00/0000'               -      !Creation Date
                   $comma                     -
                   '00/00/0000'               -      !Update Date
                   $comma                     -
                   '0:00:00'                  -      !Time Stamp
                   $comma                     -
                   $ALTER_EMPLID              -      !User ID
                   $comma                     -
                  !$SPACE:1                   -      !Create Transaction
                   $comma                     -
                  !$SPACE:2                   -      !Reason
                   $comma
                  !$SPACE:1                          !Member ID

    write #file_532_bak from
                   $Action_Code:1             -      !BNB-FC Function Code
                   $comma                     -
                   '7'                        -      !Company
                   $comma                     -
                   $ALTER_EMPLID              -      !Employee Id
                   $comma                     -
                   $UA_DEPENDENT_NBR          -
                   $comma                     -
                   $UA_INTF_PLAN_TYPE         -
                   $comma                     -
                   $UA_INTF_PLAN_CODE         -
                   $comma                     -
                   $EE_START_DATE_OUT         -
                   $comma                     -
                   $START_DATE_OUT            -
                   $comma                     -
                   $STOP_DATE_OUT             -
                   $comma                     -
                   '00/00/0000'               -      !Creation Date
                   $comma                     -
                   '00/00/0000'               -      !Update Date
                   $comma                     -
                   '0:00:00'                  -      !Time Stamp
                   $comma                     -
                   $ALTER_EMPLID              -      !User ID
                   $comma                     -
                  !$SPACE:1                   -      !Create Transaction
                   $comma                     -
                  !$SPACE:2                   -      !Reason
                   $comma
                  !$SPACE:1                          !Member ID


     ADD 1 TO #WRITE-532-COUNT

     if $RUN_TYPE = 'C'
       DO WRITE-532-REPORT
     end-if

end-procedure	!Write-532-Record



!*****************************
begin-procedure WRITE-532-REPORT
!*****************************
   !-----------------------
   ! Print Header
   !-----------------------

   IF $HEADER_PRINTED = 'N' OR #current-line > {max_lines}

      IF $HEADER_PRINTED = 'N'
         MOVE 'Y' TO $HEADER_PRINTED
      END-IF
      if #current-line > {max_lines}
         NEW-PAGE
      END-IF
      let $Section_Title = 'Dependent Benefits for '||$Date_Display
      PRINT $Section_Title	(+1,1)
      PRINT 'Dependent'		(+2,{532_COL3})
      PRINT 'Employee'		(  ,{532_COL9})
      PRINT 'Dependent'		(  ,{532_COL10})
      PRINT 'Dependent'		(  ,{532_COL11})

      PRINT 'Emplid'		(+1,{532_COL1})
      PRINT 'Alter Emplid'	(  ,{532_COL2})
      PRINT 'Number'		(  ,{532_COL3})
      PRINT 'Action'		(  ,{532_COL4})
      PRINT 'Plan Type'		(  ,{532_COL5})
      PRINT 'ADOA Plan Type'	(  ,{532_COL6})
      PRINT 'ADOA Plan Code'	(  ,{532_COL7})
      PRINT 'ADOA Coverage Opt'	(  ,{532_COL8})
      PRINT 'Start Date'	(  ,{532_COL9})
      PRINT 'Start Date'	(  ,{532_COL10})
      PRINT 'Stop Date'		(  ,{532_COL11})
      print '-'			(+1,1,{line_length}) fill

   END-IF

   !-----------------------
   ! Print dependent benefit detail
   !-----------------------
   PRINT $EMPLID		(+1,{532_COL1})
   PRINT $ALTER_EMPLID		(  ,{532_COL2})
   PRINT $UA_DEPENDENT_NBR	(  ,{532_COL3})
   PRINT $ACTION_CODE		(  ,{532_COL4})
   PRINT $PLAN_TYPE		(  ,{532_COL5})
   PRINT $UA_INTF_PLAN_TYPE	(  ,{532_COL6})
   PRINT $UA_INTF_PLAN_CODE	(  ,{532_COL7})
   PRINT $UA_COVERAGE_OPT	(  ,{532_COL8})
   PRINT $EE_START_DATE_OUT	(  ,{532_COL9})
   PRINT $START_DATE_OUT	(  ,{532_COL10})
   PRINT $STOP_DATE_OUT		(  ,{532_COL11})

   PRINT ' '                       (+1,1)

end-procedure	!Write-532-Report


!******************************************************************************
! Write-CSV-Record		!*** 10/30/2009 - WATSONR - New procedure to write to the error table
! Writes errors to a CSV file
!******************************************************************************
begin-PROCEDURE Write-CSV-Record

	move 'Write-CSV-Record' to $ProcName

  !*** Start - 11/19/2009 - WATSONR - Added Severity and resend count to warnings
  If $Error_Type = 'Error'
    let $Severity = ' '
    let #Resend_Count = 0
  Else
    If #Resend_Count > 0
      If #Resend_Count > 1
        let $Severity = 'H'
      Else
        let $Severity = 'L'
      End-If
    End-if
  End-if
  !*** End - 11/19/2009 - WATSONR - Added Severity and resend count to warnings

begin-SQL on-error=Warning-Proc($ProcName)
INSERT INTO PS_UA_ADOA_HI_ERR
(EMPLID
,DEPENDENT_BENEF
,PLAN_YEAR                      !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
,PROCESS_DT
,ERROR_TYPE
,SEVERITY			!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
,UA_RESEND_COUNT		!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
,ALTER_EMPLID
,PLAN_TYPE
,DESCR254)
VALUES
($Emplid
,nvl($Dependent_Benef,' ')
,#Plan_Year                     !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
,$Process_Dt
,UPPER(SUBSTR($Error_type,1,3))
,$Severity			!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
,nvl(#Resend_Count,0)		!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
,$Alter_Emplid
,nvl($Plan_Type,' ')
,$Output_Text);
end-SQL

end-PROCEDURE Write-CSV-Record


!******************************************************************************
! Output-CSV-File            !*** 10/30/2009 - WATSONR - Renamed from Write-CSV-Record to Output-CSV-File
! Writes errors to a CSV file
!******************************************************************************
begin-PROCEDURE Output-CSV-File

  let $delimiter = '","'

  write #file_CSV_out from
                   '"'
  !***             'Error Type'			!Error Type	!*** 01/12/2010 - WATSONR - Removed error type
  !***		   $delimiter 					!*** 01/12/2010 - WATSONR - Removed error type
                   'Severity'			!Severity	!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
		   $delimiter 					!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
                   'Resend Count'		!Resend Count	!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
                   $delimiter                 			!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   'Last Name'			!Last Name	!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   $delimiter                 			!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   'First Name'			!First Name	!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   $delimiter
                   'Emplid'			!Employee ID
                   $delimiter
                   'Alter Emplid'		!Alternate Employee ID
                   $delimiter
                   'Dependent ID'		!Dependent ID
                   $delimiter
                   'Plan Type'			!Plan Type
                   $delimiter
                   'Error Message'		!Error Message
                   '"'

  write #file_CSV_bak from
                   '"'
  !***             'Error Type'			!Error Type	!*** 01/12/2010 - WATSONR - Removed error type
  !***		   $delimiter 					!*** 01/12/2010 - WATSONR - Removed error type
                   'Severity'			!Severity	!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
		   $delimiter 					!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
                   'Resend Count'		!Resend Count	!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
                   $delimiter                 			!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   'Last Name'			!Last Name	!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   $delimiter                 			!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   'First Name'			!First Name	!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   $delimiter
                   'Emplid'			!Employee ID
                   $delimiter
                   'Alter Emplid'		!Alternate Employee ID
                   $delimiter
                   'Dependent ID'		!Dependent ID
                   $delimiter
                   'Plan Type'			!Plan Type
                   $delimiter
                   'Error Message'		!Error Message
                   '"'



begin-SELECT
ERR.EMPLID		&OCF.EMPLID
NAME.LAST_NAME		&OCF.LAST_NAME
NAME.FIRST_NAME		&OCF.FIRST_NAME
ERR.DEPENDENT_BENEF	&OCF.DEPENDENT_BENEF
ERR.ERROR_TYPE		&OCF.ERROR_TYPE
ERR.SEVERITY		&OCF.SEVERITY				!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
ERR.UA_RESEND_COUNT	&OCF.RESEND_COUNT			!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
ERR.ALTER_EMPLID	&OCF.ALTER_EMPLID
ERR.PLAN_TYPE		&OCF.PLAN_TYPE
ERR.DESCR254		&OCF.DESCR254

  let $Emplid          = &OCF.EMPLID
  let $Last_Name       = &OCF.LAST_NAME
  let $First_Name      = &OCF.FIRST_NAME
  let $Dependent_Benef = &OCF.DEPENDENT_BENEF

  If &OCF.ERROR_TYPE = 'ERR'
    let $Error_Type = 'Error'
  Else
    let $Error_Type = 'Warning'
  End-If


  !*** Start - 11/19/2009 - WATSONR - Added Severity and resend count to warnings

  EVALUATE &OCF.SEVERITY
    WHEN = 'H'
      let $Severity = 'High'
      BREAK
    WHEN = 'M'
      let $Severity = 'Medium'
      BREAK
    WHEN = 'L'
      let $Severity = 'Low'
      BREAK
    WHEN-OTHER
      let $Severity = ' '
  END-EVALUATE

  If &OCF.RESEND_COUNT > 0
    move &OCF.RESEND_COUNT to $Resend_Count '99'
  Else
    let $Resend_Count = ' '
  End-If

  !*** End - 11/19/2009 - WATSONR - Added Severity and resend count to warnings


  let $Alter_Emplid = &OCF.ALTER_EMPLID
  let $Plan_Type    = &OCF.PLAN_TYPE
  let $Output_Text  = &OCF.DESCR254


  write #file_CSV_out from
                   '"'
  !***             $Error_type			!Error Type	!*** 01/12/2010 - WATSONR - Removed error type
  !***		   $delimiter 					!*** 01/12/2010 - WATSONR - Removed error type
                   $Severity			!Severity	!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
		   $delimiter 					!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
                   $Resend_Count		!Resend Count	!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
                   $delimiter                 			!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   $Last_Name			!Last Name	!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   $delimiter                 			!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   $First_Name			!First Name	!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   $delimiter
                   $Emplid			!Employee ID
                   $delimiter
                   $Alter_Emplid		!Alternate Employee ID
                   $delimiter
                   $Dependent_Benef		!Dependent ID
                   $delimiter
                   $Plan_Type			!Plan Type
                   $delimiter
                   $Output_Text			!Error Message
                   '"'

  write #file_CSV_bak from
                   '"'
  !***             $Error_type			!Error Type	!*** 01/12/2010 - WATSONR - Removed error type
  !***		   $delimiter 					!*** 01/12/2010 - WATSONR - Removed error type
                   $Severity			!Severity	!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
		   $delimiter 					!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
                   $Resend_Count		!Resend Count	!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
                   $delimiter                 			!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   $Last_Name			!Last Name	!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   $delimiter                 			!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   $First_Name			!First Name	!*** 10/30/2009 - WATSONR - Added first and last name to csv file
                   $delimiter
                   $Emplid			!Employee ID
                   $delimiter
                   $Alter_Emplid		!Alternate Employee ID
                   $delimiter
                   $Dependent_Benef		!Dependent ID
                   $delimiter
                   $Plan_Type			!Plan Type
                   $delimiter
                   $Output_Text			!Error Message
                   '"'

FROM PS_UA_ADOA_HI_ERR ERR
    ,PS_NAMES_VW       NAME
WHERE ERR.PROCESS_DT = $PROCESS_DT
  AND ERR.EMPLID     = NAME.EMPLID
  AND NAME.NAME_TYPE = 'PRI'
ORDER BY NAME.LAST_NAME,NAME.FIRST_NAME,ERROR_TYPE,DEPENDENT_BENEF
end-SELECT


end-PROCEDURE Output-CSV-File


!******************************************************************************
! Check-Relationship-Exists
! Returns a 'Y' if a dependent exists for the emplid/plan_type/effdt/relationship
!******************************************************************************
begin-PROCEDURE Check-Relationship-Exists($i_Emplid,#i_Plan_Data_Empl_Rcd,#i_Plan_Data_Cobra_Event_Id,$i_PLAN_TYPE,#i_Plan_Data_Benefit_Nbr,$i_Plan_Data_Effdt,$i_UA_REQ_RLTNSHP,:$Relationship_Exists)

  let $Relationship_Exists = 'N'

Begin-SELECT

'Y'    &CRE.RELATIONSHIP_EXISTS

  let $Relationship_Exists = &CRE.RELATIONSHIP_EXISTS

FROM PS_HEALTH_DEPENDNT HD
   , PS_DEP_BEN_EFF     DB
WHERE HD.EMPLID             = DB.EMPLID
  AND HD.DEPENDENT_BENEF    = DB.DEPENDENT_BENEF
  AND HD.EMPLID             = $i_Emplid
  AND HD.EMPL_RCD           = #i_Plan_Data_Empl_Rcd
  AND HD.COBRA_EVENT_ID     = #i_Plan_Data_Cobra_Event_Id
  AND HD.PLAN_TYPE          = $i_PLAN_TYPE
  AND HD.BENEFIT_NBR        = #i_Plan_Data_Benefit_Nbr
  AND HD.EFFDT              = $i_Plan_Data_Effdt
  AND DB.RELATIONSHIP       = $i_UA_REQ_RLTNSHP
  AND DB.EFFDT              = (SELECT MAX(EFFDT)
                                       FROM PS_DEP_BEN_EFF
                                      WHERE EMPLID           = DB.EMPLID
                                        AND DEPENDENT_BENEF  = DB.DEPENDENT_BENEF
                                        AND EFFDT           <= HD.EFFDT)
end-SELECT

end-PROCEDURE Check-Relationship-Exists


!******************************************************************************
! Validate-Date
!  Verifies that that the value for the Processing Date is a properly formed date.
!    $In     - Input value accepted by user at runtime
!    $DateOK - Equals 'Y' if the value for $In was a valid date; 'N' if it was not
!******************************************************************************
begin-PROCEDURE Validate-Date($In,:$DateOK)

	move 'Y' to $DateOK

        unstring $In by '/' INTO $Month $Day $Year

	move $Month	to #Month
	move $Day	to #Day
	move $Year	to #Year

	if #Month < 1 or #Month > 12
		move 'N' to $DateOK
	else
		if #Day < 1
			move 'N' to $DateOK
		else
			evaluate #Month
				when = 1
				when = 3
				when = 5
				when = 7
				when = 8
				when = 10
				when = 12
					if #Day > 31
						move 'N' to $DateOK
					end-if
					break
				when = 4
				when = 6
				when = 9
				when = 11
					if #Day > 30
						move 'N' to $DateOK
					end-if
					break
				when = 2
					let #Leap_Year = mod(#Year, 4)
					if #Leap_Year = 0
						if #Day > 29
							move 'N' to $DateOK
						end-if
					else
						if #Day > 28
							move 'N' to $DateOK
						end-if
					end-if
					break
			end-evaluate
		end-if
	end-if

end-PROCEDURE	!Validate-Date


!******************************************************************************
! Get-Cost-Effective-Date
! Returns the cost effective date cost_effdt
!******************************************************************************
begin-PROCEDURE Get-Cost-Effective-Date

	move 'Get-Rate-Tbl-Id' to $ProcName

  let $RATE_TBL_ID = ''
  let $Cost_Effdt  = StrToDate('01-JAN-1901','DD-MON-YYYY')

begin-SELECT on-error=Error-Proc($ProcName)

COST.RATE_TBL_ID		&GCED.RATE_TBL_ID

  let $RATE_TBL_ID = &GCED.RATE_TBL_ID

 FROM PS_BEN_DEFN_OPTN OPTN
    , PS_BEN_DEFN_COST COST
WHERE OPTN.PLAN_TYPE    = $Plan_Type
  AND OPTN.BENEFIT_PLAN = $Benefit_Plan
  AND OPTN.COVRG_CD     = $Covrg_Cd
  AND OPTN.BENEFIT_PROGRAM = $Benefit_Program
  AND OPTN.BENEFIT_PROGRAM = COST.BENEFIT_PROGRAM
  AND OPTN.PLAN_TYPE       = COST.PLAN_TYPE
  AND OPTN.OPTION_ID       = COST.OPTION_ID
  AND OPTN.EFFDT = (SELECT MAX(EFFDT)
                     FROM PS_BEN_DEFN_OPTN
                    WHERE BENEFIT_PROGRAM = OPTN.BENEFIT_PROGRAM
                      AND EFFDT          <= $AsOfDate)
  AND COST.EFFDT = (SELECT MAX(EFFDT)
                      FROM PS_BEN_DEFN_COST
                     WHERE BENEFIT_PROGRAM = COST.BENEFIT_PROGRAM
                       AND EFFDT          <= $AsOfDate)
end-SELECT


if not isnull($RATE_TBL_ID)

	move 'Get-Cost-Effective-Date' to $ProcName

begin-SELECT on-error=Error-Proc($ProcName)

RATE.EFFDT			&GCED.EFFDT

  let $Cost_Effdt = &GCED.EFFDT

 FROM PS_BN_RATE_TBL RATE
WHERE RATE.RATE_TBL_ID = $RATE_TBL_ID
  AND RATE.EFFDT = (SELECT MAX(EFFDT)
                      FROM PS_BN_RATE_TBL
                     WHERE RATE_TBL_ID = RATE.RATE_TBL_ID
                       AND EFFDT       <= $AsOfDate)
end-SELECT

end-if

end-PROCEDURE	!Get-Cost-Effective-Date


!******************************************************************************
! Get-Current-ADOA-Coverage
! Returns the current ADOA coverage
!******************************************************************************
begin-PROCEDURE Get-Current-ADOA-Coverage


  let $ADOA_Coverage_Begin_Dt	= ''
  let $ADOA_Coverage_Opt	= ' '
  let $ADOA_Dependent_Coverage  = ' '

	move 'Get-Current-ADOA-Coverage' to $ProcName

Begin-SELECT on-error=Error-Proc($ProcName)

DECODE($Plan_Type,'10',EB.UA_MEDICAL_EFFDT
                 ,'11',EB.UA_DENTAL_EFFDT
                 ,'14',EB.UA_VISION_EFFDT
                 ,'21',EB.UA_STD_SUP_LIFE_DT                                          !*** 01/28/2010 - WATSONR - Added Sup Life Effdt
                 ,'23',EB.UA_STD_DEP_LIFE_DT                                          !*** 01/28/2010 - WATSONR - Added Dep Life Effdt
                 ,'30',EB.UA_STD_STD_EFFDT                                            !*** 01/28/2010 - WATSONR - Added STD Effdt
                 ,'7M',EB.UA_LTD_EFFDT                                                !*** 01/28/2010 - WATSONR - Added LTD Effdt
                 ,'7N',EB.UA_LTD_EFFDT) 	&GCAC.ADOA_COVERAGE_BEGIN_DT          !*** 01/28/2010 - WATSONR - Added LTD Effdt
DECODE($Plan_Type,'10',EB.UA_MEDICAL_COVRG,'11',EB.UA_DENTAL_COVRG,'14',EB.UA_VISION_COVRG,' ') 	&GCAC.ADOA_COVERAGE_OPT

	let $ADOA_Coverage_Begin_Dt	= &GCAC.ADOA_COVERAGE_BEGIN_DT
	let $ADOA_Coverage_Opt		= &GCAC.ADOA_COVERAGE_OPT

FROM PS_UA_ADOA_EMPBEN EB
WHERE EB.EMPLID = $Emplid

End-SELECT


if $Dependent_Benef <> ' '

	move 'Get-Current-ADOA-Dependent-Coverage' to $ProcName

Begin-SELECT on-error=Error-Proc($ProcName)

DECODE($Plan_Type,'10',DD.MEDICAL_COVERAGE,'11',DD.DENTAL_COVERAGE,'14',DD.UA_VISION_COVERAGE) 	&GCAC.ADOA_DEPENDENT_COVERAGE

	let $ADOA_Dependent_Coverage	= &GCAC.ADOA_DEPENDENT_COVERAGE

FROM PS_UA_ADOA_DEPDEM DD
WHERE DD.EMPLID          = $Emplid
  AND DD.DEPENDENT_BENEF = $Dependent_Benef

End-SELECT

end-if


End-Procedure !Get-Current-ADOA-Coverage


!******************************************************************************
! Get-ADOA-Coverage-Begin-Date
! Returns the current ADOA coverage begin date
!******************************************************************************
begin-PROCEDURE Get-ADOA-Coverage-Begin-Date


   do Get-Current-ADOA-Coverage

   if not isnull($ADOA_Coverage_Begin_Dt)

     if (ltrim($ADOA_Coverage_Opt,'0') <> ltrim($Previous_UA_Coverage_Opt,'0')) or
        $ADOA_Coverage_Begin_Dt > $AsOfDAte                                      or
        ($Dependent_Benef <> ' ' and $ADOA_Dependent_Coverage <> 'Y')

         let $ADOA_Coverage_Begin_Dt = ''

     end-if

   end-if

End-Procedure !Get-ADOA-Coverage-Begin-Date


!******************************************************************************
! Update-Confirmation-Flags
! Changes the ua_adoa_conf_flags from 'N' to 'Y' if the record exists at ADOA
! and then removes the 'N' records
!******************************************************************************
begin-PROCEDURE Update-Confirmation-Flags

  do Update-ADOA-Override-Flags       ! HCM-4999 - Added call to new procedure

  do Update-EMPHST-Confirmation-Flag

  do Update-DEPHST-Confirmation-Flag

  do Update-BENHST-Confirmation-Flag

  do Delete-Unconfirmed

End-Procedure !Update-Confirmation-Flags


!******************************************************************************
! Update-EMPHST-Confirmation-Flag
! Updates the confirmation flags in ps_ua_adoa_emphst
!******************************************************************************
begin-PROCEDURE Update-EMPHST-Confirmation-Flag

	move 'Update-EMPHST-Confirmation-Flag' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_EMPHST OUT
   SET UA_ADOA_CONF_FLAG = 'Y'
 WHERE OUT.UA_ADOA_CONF_FLAG = 'N'
   AND OUT.ACTION_CODE IN ('N','C')
   AND EXISTS (SELECT 'X' FROM PS_UA_ADOA_EMPDEM
                WHERE EMPLID = OUT.EMPLID)
End-SQL

	move 'Update-EMPHST-Confirmation-Flag-Terms' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_EMPHST OUT
   SET UA_ADOA_CONF_FLAG = 'Y'
 WHERE OUT.UA_ADOA_CONF_FLAG = 'N'
   AND OUT.ACTION_CODE = 'T'
   AND NOT EXISTS (SELECT 'X' FROM PS_UA_ADOA_EMPDEM
                    WHERE EMPLID = OUT.EMPLID)
End-SQL


end-PROCEDURE !Update-EMPHST-Confirmation-Flag


!******************************************************************************
! Update-DEPHST-Confirmation-Flag
! Updates the confirmation flags in ps_ua_adoa_dephst
!******************************************************************************
begin-PROCEDURE Update-DEPHST-Confirmation-Flag

	move 'Update-DEPHST-Confirmation-Flag' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_DEPHST OUT
   SET UA_ADOA_CONF_FLAG = 'Y'
 WHERE OUT.UA_ADOA_CONF_FLAG = 'N'
   AND EXISTS (SELECT 'X' FROM PS_UA_ADOA_DEPDEM
                WHERE EMPLID          = OUT.EMPLID
                  AND DEPENDENT_BENEF = OUT.DEPENDENT_BENEF)
End-SQL


end-PROCEDURE !Update-DEPHST-Confirmation-Flag


!******************************************************************************
! Update-BENHST-Confirmation-Flag
! Updates the confirmation flags in ps_ua_adoa_benhst
!******************************************************************************
begin-PROCEDURE Update-BENHST-Confirmation-Flag

!**** 07/29/2009 - Added Life/Disability ********

	move 'Update-BENHST-Confirmation-Flag-Life-Dis' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_BENHST OUT
   SET UA_ADOA_CONF_FLAG = 'Y'
 WHERE OUT.UA_ADOA_CONF_FLAG = 'N'
   AND OUT.ACTION_CODE = 'A'        !*** 04/29/2010 - WATSONR - Added action code A so only basic life adds will be auto-confirmed
   AND OUT.PLAN_TYPE = '20';        !*** 01/28/2010 - WATSONR - Changed "NOT IN ('10','11','14')" to " = '20'"  Only basic life will be auto-confirmed

End-SQL

!**** 07/29/2009 - Added Life/Disability ********


	move 'Update-BENHST-Confirmation-Flag-Emp' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_BENHST OUT
   SET UA_ADOA_CONF_FLAG = 'Y'
 WHERE OUT.UA_ADOA_CONF_FLAG = 'N'
   AND OUT.DEPENDENT_BENEF   = ' '
   AND OUT.ACTION_CODE       = 'A'
   AND EXISTS (SELECT 'X' FROM PS_UA_ADOA_EMPBEN
                WHERE EMPLID = OUT.EMPLID
                  AND DECODE(OUT.Plan_Type,'10',UA_MEDICAL_EFFDT
                                          ,'11',UA_DENTAL_EFFDT
                                          ,'14',UA_VISION_EFFDT
                                          ,'21',UA_STD_SUP_LIFE_DT                       !*** 01/28/2010 - WATSONR - Added Sup Life Effdt
                                          ,'23',UA_STD_DEP_LIFE_DT                       !*** 01/28/2010 - WATSONR - Added Dep Life Effdt
                                          ,'30',UA_STD_STD_EFFDT                         !*** 01/28/2010 - WATSONR - Added STD Effdt
                                          ,'7M',UA_LTD_EFFDT                             !*** 01/28/2010 - WATSONR - Added LTD Effdt
                                          ,'7N',UA_LTD_EFFDT) >= OUT.COVERAGE_BEGIN_DT)  !*** 01/28/2010 - WATSONR - Added LTD Effdt
End-SQL


	move 'Update-BENHST-Confirmation-Flag-Dep' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_BENHST OUT
   SET UA_ADOA_CONF_FLAG = 'Y'
 WHERE OUT.UA_ADOA_CONF_FLAG = 'N'
   AND OUT.DEPENDENT_BENEF  <> ' '
   AND OUT.ACTION_CODE       = 'A'
   AND EXISTS (SELECT 'X' FROM PS_UA_ADOA_EMPBEN
                WHERE EMPLID = OUT.EMPLID
                  AND DECODE(OUT.Plan_Type,'10',UA_MEDICAL_EFFDT,'11',UA_DENTAL_EFFDT,'14',UA_VISION_EFFDT) >= OUT.EFFDT)  !** 10/18/2010 - WATSONR - Changed OUT.COVERAGE_BEGIN_DT TO OUT.EFFDT - HCM-840
   AND EXISTS (SELECT 'X' FROM PS_UA_ADOA_DEPDEM
                WHERE EMPLID          = OUT.EMPLID
                  AND DEPENDENT_BENEF = OUT.Dependent_Benef
                  AND DECODE(OUT.Plan_Type,'10',MEDICAL_COVERAGE,'11',DENTAL_COVERAGE,'14',UA_VISION_COVERAGE) = 'Y')
End-SQL


	move 'Update-BENHST-Confirmation-Flag-Emp-Terms' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_BENHST OUT
   SET UA_ADOA_CONF_FLAG = 'Y'
 WHERE OUT.UA_ADOA_CONF_FLAG = 'N'
   AND OUT.DEPENDENT_BENEF   = ' '
   AND OUT.ACTION_CODE       = 'S'                                                    !*** 04/29/2010 - WATSONR - Removed left parenthesis
   !          or                                                                      !*** 04/29/2010 - WATSONR - Removed
   !    (OUT.ACTION_CODE = 'A' AND OUT.UA_INTF_PLAN_CODE IN ('WHLT','WDNT','WVIS')))  !*** 04/29/2010 - WATSONR - Removed
   AND NOT EXISTS (SELECT 'X' FROM PS_UA_ADOA_EMPBEN
                    WHERE EMPLID = OUT.EMPLID
                     AND RTRIM(DECODE(OUT.Plan_Type,'10',UA_MEDICAL_PLAN                            !*** 01/28/2010 - WATSONR - Added rtrim and changed ua_medical_effdt to ua_medical_plan
                                                   ,'11',UA_DENTAL_PLAN                             !*** 01/28/2010 - WATSONR - Changed ua_dental_effdt to ua_dental_plan
                                                   ,'14',UA_VISION_COVRG                            !*** 01/28/2010 - WATSONR - Changed ua_vision_effdt to ua_vision_covrg
                                                   ,'21',UA_STD_SUP_LIFE_DT                         !*** 01/28/2010 - WATSONR - Added Sup Life Effdt
                                                   ,'23',UA_STD_DEP_LIFE_DT                         !*** 01/28/2010 - WATSONR - Added Dep Life Effdt
                                                   ,'30',DECODE(UA_STD_ELECT,'Y',UA_STD_ELECT,NULL) !*** 01/28/2010 - WATSONR - Added STD Elect
                                                   ,'7M',UA_LTD_EFFDT                               !*** 01/28/2010 - WATSONR - Added LTD Effdt
                                                   ,'7N',UA_LTD_EFFDT)) IS NOT NULL)                !*** 01/28/2010 - WATSONR - Added LTD Effdt
End-SQL


	move 'Update-BENHST-Confirmation-Flag-Dep-Terms' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_BENHST OUT
   SET UA_ADOA_CONF_FLAG = 'Y'
 WHERE OUT.UA_ADOA_CONF_FLAG = 'N'
   AND OUT.DEPENDENT_BENEF  <> ' '
   AND OUT.ACTION_CODE      = 'C'                                                     !*** 04/29/2010 - WATSONR - Removed left parenthesis
   !          or                                                                      !*** 04/29/2010 - WATSONR - Removed
   !    (OUT.ACTION_CODE = 'A' AND OUT.UA_INTF_PLAN_CODE IN ('WHLT','WDNT','WVIS')))  !*** 04/29/2010 - WATSONR - Removed
   AND NOT EXISTS (SELECT 'X' FROM PS_UA_ADOA_DEPDEM
                    WHERE EMPLID          = OUT.EMPLID
                      AND DEPENDENT_BENEF = OUT.Dependent_Benef
                      AND DECODE(OUT.Plan_Type,'10',MEDICAL_COVERAGE,'11',DENTAL_COVERAGE,'14',UA_VISION_COVERAGE) = 'Y')
End-SQL



   !**** Reset the sequence 0 BENHST record to unconfirmed if the sequence 1 record is unconfirmed

	move 'Update-BENHST-Confirmation-Flag-Seq0' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)

UPDATE PS_UA_ADOA_BENHST OUT
   SET UA_ADOA_CONF_FLAG = 'N'
 WHERE OUT.UA_ADOA_CONF_FLAG = 'Y'
   AND OUT.SEQNO = 0
   AND EXISTS (SELECT 'X' FROM PS_UA_ADOA_BENHST
                WHERE EMPLID             = OUT.EMPLID
                  AND DEPENDENT_BENEF    = OUT.DEPENDENT_BENEF
                  AND PLAN_TYPE          = OUT.PLAN_TYPE
                  AND PROCESS_DT         = OUT.PROCESS_DT
                  AND SEQNO              = 1
                  AND UA_ADOA_CONF_FLAG = 'N')
End-SQL



end-PROCEDURE !Update-BENHST-Confirmation-Flag


!******************************************************************************
! Delete-Unconfirmed
! Virtually deletes unconfirmed records so they can be resent
! Also physically deletes them after 30 days
!******************************************************************************
begin-PROCEDURE Delete-Unconfirmed

	move 'Virtually-Delete-Unconfirmed-Emp' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_EMPHST OUT
   SET OUT.UA_ADOA_CONF_FLAG = 'X'
 WHERE OUT.UA_ADOA_CONF_FLAG = 'N'
   AND OUT.PROCESS_DT <= $Process_Dt - #Days_to_Resend     !***  It take 2 days for new records to show up
   AND OUT.EFFDT <= $Process_Dt - #Days_to_Resend          ! 03/01/2013 - shimel - HCM-4804 - Added to where clause to modify resend logic to effdt + 2 days
   AND OUT.ASOFDATE   = (SELECT MAX(ASOFDATE)
!                           FROM PS_UA_ADOA_BENHST         ! 03/01/2013 - shimel - HCM-4804 - commented out incorrect table name in sub-query
                           FROM PS_UA_ADOA_EMPHST          ! 03/01/2013 - shimel - HCM-4804 - added correct table name in sub-query
                          WHERE EMPLID             = OUT.EMPLID
                            AND ASOFDATE          <= $AsOfDate)
   AND OUT.PROCESS_DT = (SELECT MAX(PROCESS_DT)
!                           FROM PS_UA_ADOA_BENHST         ! 03/01/2013 - shimel - HCM-4804 - commented out incorrect table name in sub-query
                           FROM PS_UA_ADOA_EMPHST          ! 03/01/2013 - shimel - HCM-4804 - added correct table name in sub-query
                          WHERE EMPLID             = OUT.EMPLID
                            AND ASOFDATE           = OUT.ASOFDATE)
End-SQL


	move 'Virtually-Delete-Unconfirmed-Dep' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_DEPHST OUT
   SET OUT.UA_ADOA_CONF_FLAG = 'X'
 WHERE OUT.UA_ADOA_CONF_FLAG = 'N'
   AND OUT.PROCESS_DT <= $Process_Dt - #Days_to_Resend     !***  It take 2 days for new records to show up
   AND OUT.EFFDT <= $Process_Dt - #Days_to_Resend          ! 03/01/2013 - shimel - HCM-4804 - Added to where clause to modify resend logic to effdt + 2 days
   AND OUT.ASOFDATE   = (SELECT MAX(ASOFDATE)
!                           FROM PS_UA_ADOA_BENHST         ! 03/01/2013 - shimel - HCM-4804 - commented out incorrect table name in sub-query
                           FROM PS_UA_ADOA_DEPHST          ! 03/01/2013 - shimel - HCM-4804 - added correct table name to sub-query
                          WHERE EMPLID             = OUT.EMPLID
                            AND DEPENDENT_BENEF    = OUT.DEPENDENT_BENEF
                            AND ASOFDATE          <= $AsOfDate)
   AND OUT.PROCESS_DT = (SELECT MAX(PROCESS_DT)
!                           FROM PS_UA_ADOA_BENHST         ! 03/01/2013 - shimel - HCM-4804 - commented out incorrect table name in sub-query
                           FROM PS_UA_ADOA_DEPHST          ! 03/01/2013 - shimel - HCM-4804 - added correct table name to sub-query
                          WHERE EMPLID             = OUT.EMPLID
                            AND DEPENDENT_BENEF    = OUT.DEPENDENT_BENEF
                            AND ASOFDATE           = OUT.ASOFDATE)
End-SQL


	move 'Virtually-Delete-Unconfirmed-Ben' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_BENHST OUT
   SET OUT.UA_ADOA_CONF_FLAG = 'X'
 WHERE OUT.UA_ADOA_CONF_FLAG = 'N'
   AND OUT.PROCESS_DT <= $Process_Dt - #Days_to_Resend     !***  It take 2 days for new records to show up
   AND OUT.COVERAGE_BEGIN_DT <= $Process_Dt - #Days_to_Resend !** 12/07/2011 - WATSONR - Don't resend records before the coverage begin date - HCM-3586  ! 03/01/2013 - shimel - Added '- #Days_to_Resend' which modifies resend logic to effdt + 2 days - HCM-4804
   AND OUT.ASOFDATE   = (SELECT MAX(ASOFDATE)
                           FROM PS_UA_ADOA_BENHST
                          WHERE EMPLID             = OUT.EMPLID
                            AND DEPENDENT_BENEF    = OUT.DEPENDENT_BENEF
                            AND PLAN_TYPE          = OUT.PLAN_TYPE
                            AND ASOFDATE          <= $AsOfDate)
   AND OUT.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                           FROM PS_UA_ADOA_BENHST
                          WHERE EMPLID             = OUT.EMPLID
                            AND DEPENDENT_BENEF    = OUT.DEPENDENT_BENEF
                            AND PLAN_TYPE          = OUT.PLAN_TYPE
                            AND ASOFDATE           = OUT.ASOFDATE)
End-SQL


	move 'Delete-Unconfirmed-Emp' to $ProcName

! Begin - HCM-4669 - shimel - Use dateadd function to correctly set $Process_Dt_minus_30 variable to $Process_Dt minus 30 days
  LET $Process_Dt_minus_30 = dateadd($Process_Dt,'day',-30)
! End - HCM-4669 - shimel - Use dateadd function to correctly set $Process_Dt_minus_30 variable to $Process_Dt minus 30 days
Begin-SQL on-error=Error-Proc($ProcName)
DELETE FROM PS_UA_ADOA_EMPHST WHERE UA_ADOA_CONF_FLAG = 'X' AND PROCESS_DT < $Process_Dt_minus_30 ! $Process_Dt-30 - HCM-4669 - shimel - Changed $Process_Dt-30 to $Process_Dt_minus_30
End-SQL

	move 'Delete-Unconfirmed-Dep' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)
DELETE FROM PS_UA_ADOA_DEPHST WHERE UA_ADOA_CONF_FLAG = 'X' AND PROCESS_DT < $Process_Dt_minus_30  ! $Process_Dt-30 - HCM-4669 - shimel - Changed $Process_Dt-30 to $Process_Dt_minus_30
End-SQL

	move 'Delete-Unconfirmed-Ben' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)
DELETE FROM PS_UA_ADOA_BENHST WHERE UA_ADOA_CONF_FLAG = 'X' AND PROCESS_DT < $Process_Dt_minus_30  ! $Process_Dt-30 - HCM-4669 - shimel - Changed $Process_Dt-30 to $Process_Dt_minus_30
End-SQL


end-PROCEDURE !Delete-Unconfirmed

! HCM-4999 - Begin - shimel - Added new procedures to handle UA ADOA Override logic
!******************************************************************************
! Update-ADOA-Override-Flags
! Sets UA_ADOA_CONF_FLAG to Y where UA_ADOA_OVRRD = Y for the 3 ADOA tables
!******************************************************************************
begin-PROCEDURE Update-ADOA-Override-Flags

	move 'Update-ADOA-Override-Flags' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_EMPHST OUT
   SET OUT.UA_ADOA_CONF_FLAG = 'Y'
 WHERE OUT.UA_ADOA_OVRRD = 'Y'
End-SQL

Begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_DEPHST OUT
   SET OUT.UA_ADOA_CONF_FLAG = 'Y'
 WHERE OUT.UA_ADOA_OVRRD = 'Y'
End-SQL

Begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_BENHST OUT
   SET OUT.UA_ADOA_CONF_FLAG = 'Y'
 WHERE OUT.UA_ADOA_OVRRD = 'Y'
End-SQL

end-PROCEDURE Update-ADOA-Override-Flags

!******************************************************************************
! Reset-ADOA-Override-Flags
! Resets UA_ADOA_CONF_FLAG back to N where UA_ADOA_OVRRD = Y for the 3 ADOA tables
!******************************************************************************
begin-PROCEDURE Reset-ADOA-Override-Flags

	move 'Reset-ADOA-Override-Flags' to $ProcName

Begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_EMPHST OUT
   SET OUT.UA_ADOA_CONF_FLAG = 'N'
 WHERE OUT.UA_ADOA_OVRRD = 'Y'
End-SQL

Begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_DEPHST OUT
   SET OUT.UA_ADOA_CONF_FLAG = 'N'
 WHERE OUT.UA_ADOA_OVRRD = 'Y'
End-SQL

Begin-SQL on-error=Error-Proc($ProcName)
UPDATE PS_UA_ADOA_BENHST OUT
   SET OUT.UA_ADOA_CONF_FLAG = 'N'
 WHERE OUT.UA_ADOA_OVRRD = 'Y'
End-SQL

end-PROCEDURE Reset-ADOA-Override-Flags
! HCM-4999 - End

!******************************************************************************
! Get-Database-Name
!******************************************************************************
begin-PROCEDURE Get-Database-Name

	move 'Get-Database-Name' to $ProcName

let $Database_Name	= ' '

Begin-SELECT on-error=Error-Proc($ProcName)

DB.DBNAME 		&GDN.DBNAME

	let $Database_Name	= &GDN.DBNAME

FROM PSDBOWNER DB

End-SELECT

End-Procedure !Get-Database-Name



!******************************************************************************
! Get-Output-Directory
! Returns the report output directory
!******************************************************************************
begin-PROCEDURE Get-Output-Directory

	move 'Get-Output-Directory' to $ProcName

let $Output_Directory	= ''

Begin-SELECT on-error=Error-Proc($ProcName)

PRCSOUTPUTDIR	 		&GOD.PRCSOUTPUTDIR

  if $sqr-platform = 'WINDOWS-NT'
	let $Output_Directory = &GOD.PRCSOUTPUTDIR||'\'
  else
	let $Output_Directory = &GOD.PRCSOUTPUTDIR||'/'
  end-if

 FROM PSPRCSPARMS
WHERE PRCSINSTANCE = $prcs_process_instance

End-SELECT

End-Procedure !Get-Output-Directory


!******************************************************************************
! Warning-Proc    !*** 10/30/2009 - WATSONR - Added new procedure to output a
!                                             message and continue running
!******************************************************************************
begin-PROCEDURE Warning-Proc($ProcName)

  show ' '
  show 'Warning in Procedure ======> ' $ProcName
  show ''
  show 'Process Date:    ' $_Process_Dt
  show 'Employee ID:     ' $_EmplID
  show 'Dependent Benef: ' $_Dependent_Benef
  show ' '
  show 'SQL-ERROR = ' $_SQL-Error

end-PROCEDURE	!Warning-Proc


!******************************************************************************
! Error-Proc
!******************************************************************************
begin-PROCEDURE Error-Proc($ProcName)

  show ' '
  show 'Error in Procedure ======> ' $ProcName
  show ''
  show 'Process Date:    ' $_Process_Dt
  show 'Employee ID:     ' $_EmplID
  show 'Dependent Benef: ' $_Dependent_Benef
  show ' '
  show '******* PROGRAM TERMINATING UNSUCCESSFULLY *******'
  show 'RETURN-STATUS = ' #return-status
  show 'SQL-ERROR = ' $_SQL-Error

  close #_file_141_out
  close #_file_531_out
  close #_file_513_out
  close #_file_532_out
  close #_file_csv_out

  stop

end-PROCEDURE	!Error-Proc


!******************************************************************************
! Insert-Into-ADOA-HST
!******************************************************************************
begin-PROCEDURE Insert-Into-ADOA-HST

	move 'Insert-Into-ADOA-HST' to $ProcName

begin-SQL on-error=Error-Proc($ProcName)
INSERT INTO PS_UA_ADOA_HI_HST
(
 RUNDTTM
,OPRID
,RUN_CNTL_ID
,PLAN_YEAR               !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
,PROCESS_DT
,ASOFDATE
,UA_RUN_TYPE
,UA_FILE1_COUNT
,UA_FILE2_COUNT
,UA_FILE3_COUNT
,UA_FILE4_COUNT
)
VALUES
(
 SYSDATE
,nvl($prcs_oprid,user)
,nvl($prcs_run_cntl_id,'RUN01')
,#Plan_Year              !** 01/10/2011 - WATSONR - Added PLAN_YEAR - HCM-1679
,$PROCESS_DT
,$ASOFDATE
,$RUN_TYPE
,#WRITE-141-COUNT
,#WRITE-531-COUNT
,#WRITE-513-COUNT
,#WRITE-532-COUNT
)
end-SQL

end-PROCEDURE !Insert-Into-ADOA-HST


!******************************************************************************
! Add-Resends-To-CSV
!******************************************************************************
begin-PROCEDURE Add-Resends-To-CSV



	move 'Add-Resends-To-CSV-EmpDem' to $ProcName

Begin-SELECT DISTINCT on-error=Error-Proc($ProcName)
EMPLID				&ARTCED.EMPLID
ALTER_EMPLID			&ARTCED.ALTER_EMPLID

  let $Emplid       = &ARTCED.EMPLID
  let $Alter_Emplid = &ARTCED.ALTER_EMPLID
  let $Dependent_Benef = ' '
  let $Plan_Type       = ' '
  let $Output_Text = 'EMPLID ' || $EMPLID || ' was resent in the AZ141 file.'

  do get-emp-resend-count	!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings

  let $Error_Type = 'Warning'
  do Write-CSV-Record

FROM PS_UA_ADOA_EMPHST OUT
WHERE OUT.PROCESS_DT      = $PROCESS_DT
  AND OUT.UA_INCLUDE_FLAG = 'Y'
  AND EXISTS(SELECT 'X' FROM PS_UA_ADOA_EMPHST HST
              WHERE HST.EMPLID            = OUT.EMPLID
                AND HST.UA_ADOA_CONF_FLAG = 'X'
                AND HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                                        FROM PS_UA_ADOA_EMPHST
                                       WHERE EMPLID     = HST.EMPLID
                                         AND PROCESS_DT < OUT.PROCESS_DT
                                         AND ASOFDATE  <= OUT.ASOFDATE))
end-SELECT

	move 'Add-Resends-To-CSV-DepDem' to $ProcName

Begin-SELECT DISTINCT on-error=Error-Proc($ProcName)
EMPLID				&ARTCDD.EMPLID
ALTER_EMPLID			&ARTCDD.ALTER_EMPLID
DEPENDENT_BENEF			&ARTCDD.DEPENDENT_BENEF

  let $Emplid          = &ARTCDD.EMPLID
  let $Alter_Emplid    = &ARTCDD.ALTER_EMPLID
  let $Dependent_Benef = &ARTCDD.DEPENDENT_BENEF
  let $Plan_Type       = ' '
  let $Output_Text = 'EMPLID ' || $EMPLID || ' Dependent_Benef ' || $Dependent_Benef || ' was resent in the HR513 file.'

  do get-dep-resend-count	!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings

  let $Error_Type = 'Warning'
  do Write-CSV-Record

FROM PS_UA_ADOA_DEPHST OUT
WHERE OUT.PROCESS_DT   = $PROCESS_DT
  AND OUT.UA_INCLUDE_FLAG = 'Y'
  AND EXISTS(SELECT 'X' FROM PS_UA_ADOA_DEPHST HST
              WHERE HST.EMPLID            = OUT.EMPLID
                AND HST.DEPENDENT_BENEF   = OUT.DEPENDENT_BENEF  		!*** 11/19/2009 - WATSONR - Added missing critera from select
                AND HST.UA_ADOA_CONF_FLAG = 'X'
                AND HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                                        FROM PS_UA_ADOA_DEPHST
                                       WHERE EMPLID          = HST.EMPLID
                                         AND DEPENDENT_BENEF = HST.DEPENDENT_BENEF
                                         AND PROCESS_DT      < OUT.PROCESS_DT
                                         AND ASOFDATE       <= OUT.ASOFDATE))
end-SELECT


	move 'Add-Resends-To-CSV-EmpBen' to $ProcName

Begin-SELECT DISTINCT on-error=Error-Proc($ProcName)
EMPLID				&ARTCEB.EMPLID
ALTER_EMPLID			&ARTCEB.ALTER_EMPLID
PLAN_TYPE			&ARTCEB.PLAN_TYPE

  let $Emplid          = &ARTCEB.EMPLID
  let $Alter_Emplid    = &ARTCEB.ALTER_EMPLID
  let $Dependent_Benef = ' '
  let $Plan_Type       = &ARTCEB.PLAN_TYPE
  let $Output_Text = 'EMPLID ' || $EMPLID || ' Plan_Type ' || $Plan_Type ||' was resent in the HR531 file.'

  do get-ben-resend-count	!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings

  let $Error_Type = 'Warning'
  do Write-CSV-Record

FROM PS_UA_ADOA_BENHST OUT
WHERE OUT.PROCESS_DT   = $PROCESS_DT
  AND OUT.UA_INCLUDE_FLAG = 'Y'
  AND OUT.DEPENDENT_BENEF = ' '
  AND EXISTS(SELECT 'X' FROM PS_UA_ADOA_BENHST HST
              WHERE HST.EMPLID            = OUT.EMPLID
                AND HST.DEPENDENT_BENEF   = OUT.DEPENDENT_BENEF
                AND HST.PLAN_TYPE         = OUT.PLAN_TYPE  			!*** 11/19/2009 - WATSONR - Added missing critera from select
                AND HST.UA_ADOA_CONF_FLAG = 'X'
                AND HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                                        FROM PS_UA_ADOA_BENHST
                                       WHERE EMPLID          = HST.EMPLID
                                         AND DEPENDENT_BENEF = HST.DEPENDENT_BENEF
                                         AND PLAN_TYPE       = HST.PLAN_TYPE	!*** 11/19/2009 - WATSONR - Added missing critera from select
                                         AND PROCESS_DT      < OUT.PROCESS_DT
                                         AND ASOFDATE       <= OUT.ASOFDATE))
end-SELECT


	move 'Add-Resends-To-CSV-DepBen' to $ProcName

Begin-SELECT DISTINCT on-error=Error-Proc($ProcName)
EMPLID				&ARTCDB.EMPLID
ALTER_EMPLID			&ARTCDB.ALTER_EMPLID
DEPENDENT_BENEF			&ARTCDB.DEPENDENT_BENEF
PLAN_TYPE			&ARTCDB.PLAN_TYPE

  let $Emplid          = &ARTCDB.EMPLID
  let $Alter_Emplid    = &ARTCDB.ALTER_EMPLID
  let $Dependent_Benef = &ARTCDB.DEPENDENT_BENEF
  let $Plan_Type       = &ARTCDB.PLAN_TYPE
  let $Output_Text = 'EMPLID ' || $EMPLID || ' Dependent_Benef ' || $Dependent_Benef || ' Plan_Type ' || $Plan_Type ||' was resent in the HR532 file.'

  do get-ben-resend-count	!*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings

  let $Error_Type = 'Warning'
  do Write-CSV-Record

FROM PS_UA_ADOA_BENHST OUT
WHERE OUT.PROCESS_DT        = $PROCESS_DT
  AND OUT.UA_INCLUDE_FLAG  = 'Y'
  AND OUT.DEPENDENT_BENEF <> ' '
  AND EXISTS(SELECT 'X' FROM PS_UA_ADOA_BENHST HST
              WHERE HST.EMPLID            = OUT.EMPLID
                AND HST.DEPENDENT_BENEF   = OUT.DEPENDENT_BENEF
                AND HST.PLAN_TYPE         = OUT.PLAN_TYPE  			!*** 11/19/2009 - WATSONR - Added missing critera from select
                AND HST.UA_ADOA_CONF_FLAG = 'X'
                AND HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                                        FROM PS_UA_ADOA_BENHST
                                       WHERE EMPLID          = HST.EMPLID
                                         AND DEPENDENT_BENEF = HST.DEPENDENT_BENEF
                                         AND PLAN_TYPE       = HST.PLAN_TYPE	!*** 11/19/2009 - WATSONR - Added missing critera from select
                                         AND PROCESS_DT      < OUT.PROCESS_DT
                                         AND ASOFDATE       <= OUT.ASOFDATE))
end-SELECT

end-PROCEDURE !Add-Resends-To-CSV


!******************************************************************************
! Get-Emp-Resend-Count !*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
!******************************************************************************
begin-PROCEDURE Get-Emp-Resend-Count

  let #Resend_Count = 0

Begin-SELECT

count('x')		&GERC_RESENDS

  let #Resend_Count = &GERC_RESENDS

FROM PS_UA_ADOA_EMPHST HST
WHERE HST.EMPLID            = $EMPLID
  AND HST.UA_ADOA_CONF_FLAG = 'X'
  AND HST.PROCESS_DT        < $PROCESS_DT
  AND HST.ASOFDATE         <= $ASOFDATE
End-SELECT

end-PROCEDURE !Get-Emp-Resend-Count


!******************************************************************************
! Get-Dep-Resend-Count !*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
!******************************************************************************
begin-PROCEDURE Get-Dep-Resend-Count

  let #Resend_Count = 0

Begin-SELECT

count('x')		&GDRC_RESENDS

  let #Resend_Count = &GDRC_RESENDS

FROM PS_UA_ADOA_DEPHST HST
WHERE HST.EMPLID            = $EMPLID
  AND HST.DEPENDENT_BENEF   = $DEPENDENT_BENEF
  AND HST.UA_ADOA_CONF_FLAG = 'X'
  AND HST.PROCESS_DT        < $PROCESS_DT
  AND HST.ASOFDATE         <= $ASOFDATE
End-SELECT

end-PROCEDURE !Get-Dep-Resend-Count


!******************************************************************************
! Get-Ben-Resend-Count !*** 11/19/2009 - WATSONR - Added Severity and resend count to warnings
!******************************************************************************
begin-PROCEDURE Get-Ben-Resend-Count

  let #Resend_Count = 0

Begin-SELECT

count('x')		&GBRC_RESENDS

  let #Resend_Count = &GBRC_RESENDS

FROM PS_UA_ADOA_BENHST HST
WHERE HST.EMPLID            = $EMPLID
  AND HST.DEPENDENT_BENEF   = $DEPENDENT_BENEF
  AND HST.PLAN_TYPE         = $PLAN_TYPE
  AND HST.UA_ADOA_CONF_FLAG = 'X'
  AND HST.PROCESS_DT        < $PROCESS_DT
  AND HST.ASOFDATE         <= $ASOFDATE
  AND HST.SEQNO             = 0        !*** 01/28/2010 - WATSONR - Added seqno to prevent double counts
End-SELECT

end-PROCEDURE !Get-Ben-Resend-Count


!******************************************************************************
! check-for-previous-blank-address2 !*** 08/01/2012 - shimel - check previous row in PS_UA_ADOA_EMPHST for non-blank value
!******************************************************************************
begin-PROCEDURE check-for-previous-blank-address2

begin-SELECT
HST.ADDRESS2          &adoa_emphst_addr2

  LET $adoa_emphst_addr2 = &adoa_emphst_addr2

  IF $adoa_emphst_addr2 <> ' '
     LET $ADDRESS2 = '*BLANK'
  END-IF

FROM PS_UA_ADOA_EMPHST HST
WHERE HST.UA_INCLUDE_FLAG = 'N'
  AND HST.ASOFDATE   = (SELECT MAX(ASOFDATE)
                          FROM PS_UA_ADOA_EMPHST
                         WHERE EMPLID    = HST.EMPLID
                           AND ASOFDATE  = HST.ASOFDATE
                           AND UA_ADOA_CONF_FLAG <> 'X')
  AND HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                          FROM PS_UA_ADOA_EMPHST
                         WHERE EMPLID     = HST.EMPLID
                           AND PROCESS_DT < $Process_Dt
                           AND UA_ADOA_CONF_FLAG <> 'X')
  AND HST.UA_ADOA_CONF_FLAG <> 'X'
  AND HST.EMPLID = $EMPLID
end-SELECT

end-PROCEDURE  !check-for-previous-blank-address2


!******************************************************************************
! check-for-dep-stop-records-sent !*** 11/30/2012 - HCM-4669 - shimel - added new procedure to check for previous stops records that
!                                                                       may have been sent for a particular $EmplID, $PLAN_TYPE, and $Dependent_Benef
!******************************************************************************
begin-PROCEDURE check-for-dep-stop-records-sent

  LET $previous_dep_stop_sent = 'N'

begin-SELECT
'Y'                              &previous_dep_stop_sent

  LET $previous_dep_stop_sent  = &previous_dep_stop_sent

FROM	PS_UA_ADOA_BENHST	HST
WHERE	HST.EMPLID               = $EmplID
  AND   HST.DEPENDENT_BENEF    = $Dependent_Benef
  AND   HST.PLAN_TYPE          = $PLAN_TYPE
  AND   HST.ASOFDATE   = (SELECT MAX(ASOFDATE)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND ASOFDATE          <= $AsOfDate
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND   HST.PROCESS_DT = (SELECT MAX(PROCESS_DT)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND ASOFDATE           = HST.ASOFDATE
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND   HST.SEQNO      = (SELECT MAX(SEQNO)
                            FROM PS_UA_ADOA_BENHST
                           WHERE EMPLID             = HST.EMPLID
                             AND DEPENDENT_BENEF    = HST.DEPENDENT_BENEF
                             AND PLAN_TYPE          = HST.PLAN_TYPE
                             AND PROCESS_DT         = HST.PROCESS_DT
                             AND UA_ADOA_CONF_FLAG <> 'X')
  AND	HST.UA_ADOA_CONF_FLAG <> 'X'
  AND HST.COVERAGE_END_DT IS NOT NULL
end-SELECT

end-PROCEDURE  !check-for-dep-stop-records-sent


!******************************************************************************
! TerminateProgram
!******************************************************************************
begin-PROCEDURE TerminateProgram

  close #file_141_out
  close #file_531_out
  close #file_513_out
  close #file_532_out
  close #file_csv_out


  !*** Start - 04/29/2010 - watsonr - Added close of backup files and pgp of output files

  close #file_141_bak
  close #file_531_bak
  close #file_513_bak
  close #file_532_bak
  close #file_csv_bak

  do pgp-file($UA_File_Name ,$pgp_file_name ,$adoa_pgp_key_name)  !** 09/20/2010 - WATSONR - Uncommented to allow pgp of output files - HCM-1343
  do pgp-file($UA_File_Name2,$pgp_file_name2,$adoa_pgp_key_name)  !** 09/20/2010 - WATSONR - Uncommented to allow pgp of output files - HCM-1343
  do pgp-file($UA_File_Name3,$pgp_file_name3,$adoa_pgp_key_name)  !** 09/20/2010 - WATSONR - Uncommented to allow pgp of output files - HCM-1343
  do pgp-file($UA_File_Name4,$pgp_file_name4,$adoa_pgp_key_name)  !** 09/20/2010 - WATSONR - Uncommented to allow pgp of output files - HCM-1343

  !*** End - 04/29/2010 - watsonr - Added close of backup files and pgp of output files

  Commit

  move #WRITE-141-COUNT		to $wRITE-141-COUNT	999,999
  move #WRITE-531-COUNT		to $WRITE-531-COUNT	999,999
  move #WRITE-513-COUNT		to $WRITE-513-COUNT	999,999
  move #WRITE-532-COUNT		to $WRITE-532-COUNT	999,999

  show ''

  let $Output_Text = $UA_File_Name  ||' - Employee Demographic Records...... ' || $wRITE-141-COUNT   !** 10/19/2010 - WATSONR - Replaced hard coded file_name with file_name variable - HRP-15

  show  $Output_Text
  print $Output_Text (+2,1)


  let $Output_Text = $UA_File_Name2 ||' - Employee Benefit Records.......... ' || $WRITE-531-COUNT   !** 10/19/2010 - WATSONR - Replaced hard coded file_name with file_name variable - HRP-15

  show  $Output_Text
  print $Output_Text (+1,1)


  let $Output_Text = $UA_File_Name3 ||' - Dependent Demographic Records..... ' || $WRITE-513-COUNT   !** 10/19/2010 - WATSONR - Replaced hard coded file_name with file_name variable - HRP-15

  show  $Output_Text
  print $Output_Text (+1,1)


  let $Output_Text = $UA_File_Name4 ||' - Dependent Benefit Records......... ' || $WRITE-532-COUNT   !** 10/19/2010 - WATSONR - Replaced hard coded file_name with file_name variable - HRP-15

  show  $Output_Text
  print $Output_Text (+1,1)


  do Get-Current-DateTime

  show ''
  show $ReportID ' completed at ' $AsOfToday ' ' $AsOfNow

  let #return-status = 0
  show 'RETURN-STATUS = ' #return-status

  !do Reset
  do Stdapi-Term

end-PROCEDURE	!TerminateProgram

!******************************************************************************
! Include SQCs
!******************************************************************************
#include 'curdttim.sqc'	!Get-Current-DateTime procedure
#include 'datetime.sqc'	!Routines for date and time formatting
#include 'number.sqc'	!Routines to format numbers
#include 'validdt.sqc'	!Date Validation
#Include 'stdapi.sqc'   !Update Process API
#Include 'sqrtrans.sqc' !Translate SQR strings to given language
#include 'uaparm.sqc'   !UA Parameter SQC
#include 'uapgp.sqc'	!PGP files                 !** 04/29/2010 - watsonr - Added pgp of output files
!******************************* End of Program *******************************
