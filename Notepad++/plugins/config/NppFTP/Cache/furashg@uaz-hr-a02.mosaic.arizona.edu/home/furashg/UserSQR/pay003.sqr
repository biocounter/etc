!***********************************************************************
!  PAY003:  Payroll Check Print - USA                                  *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2008 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2008/11/12:12:06:38                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  741930                                              !
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
! Function: Generates paychecks and earnings statements for a given    *
!           RUN_ID or (partial) pay calendar.                          *
!                                                                      *
! Comments: Utilizes a bank microcode soft font and a custom signature *
!           font catridge to allow printing of the entire check on an  *
!           HP LaserJet printer so equipped and configured.            *
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
! HP99998       E&G 7.51 AU Merge                                      *
!***********************************************************************
!***********************************************************************
! UAZ Mods                                                             *
!                                                                      !
!   6/10/2009    FurashG    UA Modifications  UA_PY_0001                 !
!    7/30/2009    FurashG    UA Modifications UA_PY_0022                  !
!    9/21/2009    furashg    ua modifications ua_py_0022
!    10/4/2009    furashg    Modified sort order
!    10/7/2009    furashg    Modifications for wells fargo
!   10/14/2009   furashg   UA_PY_0001 Warrant Check Mods
!   10/15/2009  furashg    UA_PY_0001 earning/hrs mods
!  07/28/2009   gfurash   Removal of Printing Rate Remedy # 01982
!   01/25/2010  llswanso  HCM427 fix a join on the ps_payroll_data
!    02/02/2010  gfurash    HCM-449 R03525 - Signature change (modify pay003.sqr)
!    07/29/2010  gfurash    HCM-1202 3C Changes to FWS Program for 2011
!                          Replacing Jole Valdez signature for off-cycle
!                          checks
!    08/17/2010  gfurash    HCM-1202 - fix for alignment
!    10/25/2010  gfurash    HCM-1315 Deceased Employee's Beneficiary Not
!                          Showing Up
!   04/18/2010  GFURASH   HCM-2236 Remove Error on Prior Earnings in CA
!   02/05/2013  gfurash   HCM-3247 Update Advice
!   05/28/2013  GFURASH   HCM-5689 Correct NY/Prior Error
!   06/18/2013  GFURASH   HCM-5771 Correct Arizona State Tax %
!    09/04/2013 LLSWANSO  HCM-6121 Emergency fix for prior pay California
!   09/12/2013  LLSWANSO  HCM-6036 Tax Update 13-D issue with prior pay & clean up
! 12/11/2013    LLSWANSO    HCM-6460 retrofit Tax Update 13-F changes for Hawaii
!***********************************************************************
#include 'setenv.sqc'    !set database environment
#include 'chkadvpr.sqc'  !Printer settings for the Check-Advice printing
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'getdednm.sqc'  !Get-Deduction-Name procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'geternnm.sqc'  !Get-Earnings-Name procedure
#include 'getjobtl.sqc'  !Get-Job-Title procedure
#include 'getlcdta.sqc'  !Get-Local-Tax-Data
#include 'getsetid.sqc'  !Get Set-Id procedure
#include 'getlocnm.sqc'  !Get-Location-Name procedure
#include 'ldnumlit.sqc'  !Load-NumberLits-Array procedure
#include 'netinwds.sqc'  !Net-Pay-In-Words procedure
#include 'readxlat.sqc'  !Read-Translate-Table procedure
#include 'rotname1.sqc'  !Rotate-Name procedure
#include 'datetime.sqc'  !general date and time formatting procedures
#include 'datemath.sqc'  !date arithmetic procedures
#include 'number.sqc'    !general number formatting procedures
#include 'payinit.sqc'   !Payroll-Report-Initialization procedure
#include 'payrnctl.sqc'  !Get-Run-Control procedure
#include 'stdapi.sqc'    !StdAPI-Init procedure
!#include 'reset1.sqc'    !Reset printer procedure    ! 08/2008 furashg modifications ua_py_0001
#include 'getbalid.sqc'  !Get-Calendar-Year-Id
#include 'usarpt.sqc'    !Get USA variables
#Include 'getaddr.sqc'   !Get Person Current Address
#include 'getmsgct.sqc'  !Gets Message Catalog
#include 'pysspxml.sqc'  !Self Service Paycheck (SSP) XML Data process
#include 'uaparm.sqc'    !20130206 furashg HCM-3247
#include 'uapy0001.sqc'   !Common procedures for PY_0001 Customization
!#include 'getlogou.sqc'  !20130206 furashg HCM-3247    !20130618 FURASHG HCM-5771
! #define PAYROLL_ADDR_1   'Financial Services Office'  ! 20130319 FURASH HCM-3247
! #define PAYROLL_ADDR_2   'Payroll'                    ! 20130319 FURASH HCM-3247
! #define PAYROLL_ADDR_3   'PO Box 3310'                ! 20130319 FURASH HCM-3247
! #define PAYROLL_ADDR_4   'Tucson, AZ 85722-3310'      ! 20130319 FURASH HCM-3247

!***********************************************************************
begin-procedure Init-Page-Size
!***********************************************************************
! This sends a 'Perforation Skip' command to disable any bottom
! margin and obtain the maximum PCL page.  This is required to
! print the MICR line sufficiently close to the bottom of the
! form to be correctly positioned on the check.

#ifndef MVS
#ifndef OS400
 encode '<27>&l0L' into $perforation_skip
#else
 encode '<39>&l0L' into $perforation_skip
#endif
#else
 encode '<39>&l0L' into $perforation_skip
#endif

  print $perforation_skip () code-printer={PRINTER_CHQADV}


end-procedure


!***********************************************************************
begin-procedure Init-Variables
!***********************************************************************

  let $ReportID    = 'PAY003'
  let $ReportTitle = 'Payroll Check Print'
  let $Country     = 'USA'
  let $ssp_setup_id = 'PNAUSA'

!printer escape sequence for the check signature font

#ifndef MVS
#ifndef OS400
  encode '<27>&l0O<27>(1Q<27>(s0p1.00h72.0v0s0b0T' into $SigFont
#else
  encode '<39>&l0O<39>(1Q<39>(s0p1.00h72.0v0s0b0T' into $SigFont
#endif
#else
  encode '<39>&l0O<39>(1Q<39>(s0p1.00h72.0v0s0b0T' into $SigFont
#endif


!the bank city/state prefix as printed on the check as part of the
!hyphenated numerator of the fractional bank routing number

  let $BankDistrict = '90'              !for paygroup $BankID

  do Read-PSPRCSRQST

  ! variables for using Troy Printer USB card
  encode '<27>(202Q<27>(s0p2h72v0s0b202T' into $PsFontSigOffChk   ! 09/2009 furashg UA Modifications UA_PY_0001
  encode '<27>(201Q<27>(s0p2h72v0s0b201T' into $PsFontSigStdChk   ! 09/2009 furashg UA Modifications UA_PY_0001
  let $PsSigChk = 'bcde'                                          ! 09/2009 furashg UA Modifications UA_PY_0001
  !encode '<27>(0Q<27>(s0p8.00h8.8v0s0b0T' into $PsFontMicr        ! 09/2009 furashg UA Modifications UA_PY_0001
  !*** HCM-1202 07/29/2010 FURASHG START ***
  let $PsSigOffChk = 'abcdef'
!*** HCM-1202 END ***
  encode '<27>(0Q<27>(s0p4.00h8.8v0s0b0T' into $PsFontMicr        ! 09/2009 furashg UA Modifications UA_PY_0001
  encode '<27>(19u<27>(s1p7.00vs0b25093T' into $PsFontTimes7      ! 09/2009 furashg UA Modifications UA_PY_0001
  encode '<27>(19u<27>(s1p5.00vs0b25093T' into $PsFontTimes5      ! gff
  encode '<27>(19u<27>(s1p9.00vs0b25093T' into $PsFontTimes9      ! 09/2009 furashg UA Modifications UA_PY_0001
  ! BEGIN MODIFICATION 02/02/2010 GFURASH HCM-449 R03525 - Signature change (modify pay003.sqr)
  encode '<27>(19u<27>(s1p11.00vs0b25093T' into $PsFontTimes11
  ! BEGIN MODIFICATION 02/02/2010 GFURASH HCM-449 R03525 - Signature change (modify pay003.sqr)
  do init-datetime                            !20130201 furashg hcm-3247

end-procedure

!***********************************************************************
begin-procedure Init-Arrays
!***********************************************************************

  #define m  7  !number of separate detail sections
  #define n 13  !maximum number of detail entries per section
! BEGIN HCM-6036 LLSWANSO line missing
  #define no 60 !maximum number of earnings entries for overflow  
! END HCM-6036 LLSWANSO line missing
  #define ep 100 !maximum number of entries processed

  let #RatesRow       = 0
  let #HoursRow       = 1
  let #EarnsRow       = 2
  let #PreTaxDedsRow  = 3
  let #TaxesRow       = 4
  let #PostTaxDedsRow = 5
  let #BenefitsRow    = 6

! BEGIN HCM-6036 LLSWANSO line missing
  let #Maxrow   = 0
! END HCM-6036 LLSWANSO line missing
  let #lastRow  = {m}-1
  let #lastCol  = {n}-1
  let #MaxCol = {ep}-1
  let $lastCode = '***'
  let $lastName1 = 'Other'
  let $lastCmpRtCd = '***'
  let #lastRate = 0
  let $lastEarnBegin = ''
  let $lastEarnEnd = ''
! BEGIN HCM-6036 LLSWANSO missing 
  let $lastNY_ind  = 'N'
  let #lastNY_drate = 0
! END HCM-6036 LLSWANSO missing   

  create-array name  = ETDarray        -
               size  = {m}             -
               field = Code:char:{ep}   -
               field = Name:char:{ep}   -
               field = EarnBegin:char:{ep} -
               field = EarnEnd:char:{ep}   -
               field = CmpRtCd:char:{ep} -    ! Comp_rate_code
               field = Cur:number:{ep}  -
               field = YTD:number:{ep} -
               field = NYind:char:{ep}  -          ! 20130128 furashg HCM-3247
               field = NYdrate:number:{ep}         ! 20130128 furashg HCM-3247
  do Load-NumberLits-Array  !load literals for converting Net Pay to words

  create-array name  = etdarray_buf   -            ! 20130128 furashg HCM-3247
                size  = {m}            -            ! 20130128 furashg HCM-3247
                field = Code:char:{ep}  -           ! 20130128 furashg HCM-3247
                field = Name:char:{ep}  -           ! 20130128 furashg HCM-3247
                field = EarnBegin:char:{ep} -       ! 20130128 furashg HCM-3247
                field = EarnEnd:char:{ep}   -       ! 20130128 furashg HCM-3247
                field = CmpRtCd:char:{ep} -         ! 20130128 furashg HCM-3247
                field = Cur:number:{ep} -           ! 20130128 furashg HCM-3247
                field = YTD:number:{ep}  -          ! 20130128 furashg HCM-3247
                field = NYind:char:{ep}  -          ! 20130128 furashg HCM-3247
                field = NYdrate:number:{ep}         ! 20130128 furashg HCM-3247
  do Load-NumberLits-Array  !load literals for converting Net Pay to words

end-procedure


!***********************************************************************
begin-report
!***********************************************************************

! use-report chkadvprn
  use-printer-type {PRINTER_CHQADV}
  do Init-DateTime
  do Get-Current-DateTime
  do Init-Number
  do Get-Calendar-Year-Id
  do StdAPI-Init
  do Init-Variables
  do Init-Arrays
  do Init-SSP-XML-Variables
  do Payroll-Report-Initialization      !calls "Report" procedure

  do Open-XML-Data-For-Bulk-Print

  do Delete-SSP-Temporary-Guide-Data
! BEGIN HCM-6036 LLSWANSO missing but will we do not do overflow comment out
!     do Get-Overflow-Flag
!  else
!     move 'N' to $Create_Overflow
!  end-if
! END HCM-6036 LLSWANSO missing but will we do not do overflow comment out
  do Verify-Support                              ! 08/2009 furashg UA Modifications UA_PY_0001

  do Get-Paychecks

  if $FirstRecord = 'N' and $RC_PAYINIT.Text15 = $Create_XML_DATA
     let $xmltag = 'US_CHECK'
     let $xmloutput_line = ''
     let $xmloutput_line = $xmlcntrl_begin || $xmltag_end || $xmltag || $xmlcntrl_end
     write #outputfile from $xmloutput_line
  end-if

  do Close-XML-Data-For-Bulk-Print
#DEBUG let $infile = $xmlssp_filenm           !06/18/13 GFURASH HCM-5771
#DEBUG let $outfile = 'xml_output_log.xml'    !06/18/13 GFURASH HCM-5771
#DEBUG do copy-file                           !06/18/13 GFURASH HCM-5771

  display 'Total Checks  ' noline
  display #TotalChecks  999,999,999
  display 'Total Net Pay ' noline
  display #TotalNetPay  $,$$$,$$$,$$9.99mi
  display 'XML Data File ' noline
  display $xmlssp_filenm

  do StdAPI-Term
!  do Reset  HCM-6036 LLSWANSO missing but will we do not do overflow comment out

end-report


!***********************************************************************
begin-procedure Report
!***********************************************************************

  if $Prcs_Process_Instance = ''
    display 'Enter a Beginning Check No. if restarting the run; ' noline
    display 'otherwise leave blank'
    input $BeginPAYCHECK_NBR maxlen=15 'Enter Beginning Check No.' type=integer
    move  $BeginPAYCHECK_NBR to #BeginPAYCHECK_NBR
    input $ThruPAYCHECK_NBR maxlen=15 'Enter Thru Check No.' type=integer
    if $ThruPAYCHECK_NBR = ''
      move '999999999999999' to $ThruPAYCHECK_NBR
    end-if
    move $ThruPAYCHECK_NBR to #ThruPAYCHECK_NBR
    input $CheckMessage maxlen=110 'Enter Check Message'
  else
     move #RC_PAYINIT.ChkAdv_No_Start to #BeginPAYCHECK_NBR
     move #RC_PAYINIT.ChkAdv_No_Thru  to #ThruPAYCHECK_NBR
     move $RC_PAYINIT.Message_Text   to $CheckMessage
  end-if

end-procedure


!***********************************************************************
begin-procedure Get-Paychecks
!***********************************************************************
!  ** BEGIN MODIFICATION 10/25/2010 gfurash HCM-1315 ****************************
  LET $check_name = ' '
!  ** BEGIN MODIFICATION 10/25/2010 gfurash HCM-1315 ****************************
begin-SELECT
A.COMPANY,A.PAYGROUP,A.PAY_BEGIN_DT,A.PAY_END_DT,A1.BALANCE_ID
A1.BALANCE_YEAR,A1.BALANCE_PERIOD,A.CHECK_DT
B.OFF_CYCLE,B.PAGE_NUM,B.LINE_NUM,B.SEPCHK
B.FORM_ID,B.PAYCHECK_NBR,B.CHECK_DT
B.EMPLID,B.EMPL_RCD,B.NAME,B.PAYCHECK_NAME,B.ADDRESS1,B.ADDRESS2,B.ADDRESS3
B.CITY,B.STATE,B.POSTAL
B.PAYCHECK_OPTION,B.PAYCHECK_ADDR_OPTN
B.TOTAL_GROSS,B.TOTAL_TAXES,B.TOTAL_DEDUCTIONS,B.NET_PAY
B.PAY_SHEET_SRC, B.BUSINESS_UNIT, B.UPDATE_DT
G.EFFDT
Y.TOTAL_GROSS_YTD,Y.TOTAL_TAXES_YTD,Y.TOTAL_DEDNS_YTD,Y.NET_PAY_YTD
p.paycheck_locn_optn                                                        ! 09/2009 furashg ua modifications ua_py_0022
l.descrshort                                                                ! 09/2009 furashg ua modifications ua_py_0022
l.address3  &l_addr3                                                        ! 09/2009 furashg ua modifications ua_py_0022
b.deptid &b.deptid                                                                    ! 07/2009 furashg UA Modifications UA_PY_0022
p.location                                                                  ! 10/2009 furashg UA Modifications UA_PY_0022
add_months(b.CHECK_DT, 6) &void_dt                                          ! 10/14/2009 furashg UA_PY_0001 warrant modifications

!  ** BEGIN MODIFICATION 10/25/2010 gfurash HCM-1315 ****************************
  DO get-name-for-check( &b.emplid, $check_name )
!  ** END MODIFICATION 10/25/2010 gfurash HCM-1315 ******************************

  ! set mail drop to either location's mail drop or custom pull code        ! 10/2009 furashg UA Modifications UA_PY_0022
  if &p.paycheck_locn_optn = 'D'                                            ! 10/2009 furashg UA Modifications UA_PY_0022
    let $mail_drop = &l.descrshort                                          ! 10/2009 furashg UA Modifications UA_PY_0022
  else                                                                      ! 10/2009 furashg UA Modifications UA_PY_0022c
    let $mail_drop = &p.location                                            ! 10/2009 furashg UA Modifications UA_PY_0022
  end-if

  if &p.paycheck_locn_optn = 'D' and &l.descrshort > '0' and &l.descrshort < '9'  ! 07/2009 furashg UA Modifications UA_PY_0022
    let $building = &l_addr3                                                ! 09/2009 furashg ua modifications ua_py_0022
  else                                                                      ! 09/2009 furashg ua modifications ua_py_0022
    let $building = ' '                                                     ! 09/2009 furashg ua modifications ua_py_0022
  end-if                                                                    ! 09/2009 furashg ua modifications ua_py_0022
  let $b_deptid = &b.deptid                   ! 20130205 furashg HCM

  let $Prior_Earns_Found = 'N'
  do Find-Prior-Earn-Adj

  let $bus_unit = &B.Business_Unit
  if &A.Company <> $Company
    move &A.Company    to $Company
    move &A.Pay_End_Dt to $AsOfDate
    do Get-Company-Data
!    do Get-Company-Main-Phone-Number   !HCM-6036 LLSWANSO line missing do not use
    move ''            to $PayGroup
  end-if

  if &A.PayGroup <> $PayGroup
    move &A.PayGroup   to $PayGroup
    move &A.Pay_End_Dt to $AsOfDate
    do Get-PayGroup-Data
  end-if

  do Reset-Variables

  do Get-Ee-Job-Data
  do Get-Ee-Tax-Data

! BEGIN HCM-6036 LLSWANSO missing section but will comment pieces out not used and continue with U of A mod
  if $Prior_Earns_Found = 'Y'
    let #lastCol = {ep}-1
  else
!    if $Create_Overflow = 'Y' and $RC_PAYINIT.Text15 = $Create_XML_DATA
!       let #lastCol = {no}-1
!    else
    let #lastCol = {n}-1
   end-if
!  end-if

!  let #NY_OT_rate = 0
!  do Get-Earnings-Detail
!  if $Create_Overflow = 'Y' and $RC_PAYINIT.Text15 = $Create_XML_DATA
!     let #lastCol = {no}-1
!     if #NY_OT_rate > 0
!         let #lastCol = #lastCol - #NY_OT_rate
!     end-if
!  else
  do Get-Earnings-Detail                      ! 20130205 furashg HCM-3247
  do Merge-By-Code                            ! 20130205 furashg HCM-3247
     let #lastCol = {n}-1
!  end-if

! END HCM-6036 LLSWANSO missing

  do Get-Taxes-Detail
  do Get-Deductions-Detail

  DO Get-MailTo-Address                                           ! 7/7/09  furashg UA Modifications UA_PY_0001

  let $adv_acct_type = ''
  let $deposit_acct_nbr = ''
  let $deposit_acct_nbr_chckngs = ''
  let $deposit_acct_nbr_savings = ''
  let #chkg_ctr = 0
  let #svng_ctr = 0

  let $adv_checkings = ''
  let $adv_savings = ''
  let $chk_issued = ''

  if &B.PayCheck_Option = '&'           !both advice and check
    do Get-Net-Pay-Distribution
  else
    let $FieldName  = 'ACCOUNT_TYPE'
    let $FieldValue = '$'
    do Read-Translate-Table
    move $XLatShortName to $chk_issued
    move &B.Net_Pay     to #CheckNetPay
  end-if

  do Get-Vacation-Balances

  if $FirstRecord = 'Y'

     let $FirstRecord = 'N'
     let $PY_PSLP_PROCNAME = 'PrtCheck'

     if $RC_PAYINIT.Text15 = $Create_XML_DATA
         do Insert-SSP-Temporary-Guide-Hdr
         do Write-1st-SSP-XML-Data
         let $xmltag = 'US_CHECK'
         let $xmloutput_line = ''
         let $xmloutput_line = $xmlcntrl_begin || $xmltag || $xmlcntrl_end
         write #outputfile  from $xmloutput_line
     end-if

  end-if

  if $RC_PAYINIT.Text15 = $Create_XML_DATA

     do Get-Unique-Burst-Value

     let $burstfilename  = $xmlssp_burst || '.xml'
     let $xmlssp_filenm2 = '{IMPORTPREFIX}' || $burstfilename || '{IMPORTSUFFIX}'

     open $xmlssp_filenm2 as 20 for-writing record=150:vary

     write #outputfile2 from '<?xml version="1.0" encoding="Windows-1252"?>'

     let $xmltag = 'US_CHECK'
     let $xmloutput_line = ''
     let $xmloutput_line = $xmlcntrl_begin || $xmltag || $xmlcntrl_end
     write #outputfile2  from $xmloutput_line

     let $xmltag = 'G_EMP_DATA'
     do Process-SSP-XML-Tag-Beg

     if #RC_PAYINIT.PY_BATCH_SIZE > 0
        add 1 to #xmlssp_btch_ctr
        if #xmlssp_btch_ctr > #RC_PAYINIT.PY_BATCH_SIZE
           move 1 to #xmlssp_btch_ctr
           add  1 to #xmlssp_batch_id
        end-if
     end-if

     do SSP-Statement

     if &B.PAYCHECK_OPTION <> 'M'
        do SSP-Check
     end-if

! BEGIN HCM-6036 LLSWANSO missing section but will comment pieces out not used and continue with U of A mod
!     if $Create_Overflow = 'Y'
!
!       if #Maxrow > 13
!
!          add 1 to #py_pslp_ver_no
!          let $xmltag = 'G_EMP_DATA'
!          do Process-SSP-XML-Tag-End
!
!          let $xmltag = 'G_EMP_DATA'
!          do Process-SSP-XML-Tag-Beg
!          do SSP-Overflow-Statement
!
!       end-if
!
!     end-if
! END HCM-6036 LLSWANSO missing section

     do Insert-SSP-Temporary-Guide-Dtl

     let $xmltag = 'G_EMP_DATA'
     do Process-SSP-XML-Tag-End

     let $xmltag = 'US_CHECK'
     let $xmloutput_line = ''
     let $xmloutput_line = $xmlcntrl_begin || $xmltag_end || $xmltag || $xmlcntrl_end
     write #outputfile2 from $xmloutput_line

     close #outputfile2

  else

    if &b.net_pay > 0                                      ! 10/4/2009 furashg UA Modifications UA_PY_0001
     do Print-Statement
     do Print-Check
     do Print-Mailing-Cover                               ! 7/7/09  furashg UA Modifications UA_PY_0001
    else                                                  ! 10/4/2009 furashg UA Modifications UA_PY_0001
      let #zero_checks = #zero_checks + 1                  ! 10/4/2009 furashg UA Modifications UA_PY_0001
    end-if                                                ! 10/4/2009 furashg UA Modifications UA_PY_0001

  end-if

  add 1            to #TotalChecks
  add #CheckNetPay to #TotalNetPay

  do Delete-PY-Earns-Wrk

FROM  PS_PAY_CALENDAR A, PS_PAY_CAL_BAL_ID A1,
      PS_PAY_CHECK    B,
      PS_PAYGROUP_TBL G,
      PS_CHECK_YTD    Y,
      PS_PAYROLL_DATA p,                                  ! 07/2009 furashg UA Modifications UA_PY_0022
      ps_dept_tbl d    ,                                  ! 07/2009 furashg UA Modifications UA_PY_0022
      ps_location_tbl l                                    ! 07/2009 furashg UA Modifications UA_PY_0022
WHERE [$SlctCalendar]
  AND A.COMPANY = A1.COMPANY AND A.PAYGROUP = A1.PAYGROUP
  AND A.PAY_END_DT = A1.PAY_END_DT AND A1.BALANCE_ID = $Calendar_Year_Id
   AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND B.COMPANY         = A.COMPANY
  AND B.PAYGROUP        = A.PAYGROUP
  AND B.PAY_END_DT      = A.PAY_END_DT
  AND B.PAYCHECK_NBR         <> 0
  AND B.PAYCHECK_NBR         >= #BeginPAYCHECK_NBR
  AND B.PAYCHECK_NBR         <= #ThruPAYCHECK_NBR
  AND (($RC_PAYINIT.PY_SSP_MAN_CHK = 'R' AND B.PAYCHECK_OPTION IN ('C','&')) OR
       ($RC_PAYINIT.PY_SSP_MAN_CHK = 'M' AND B.PAYCHECK_OPTION = 'M'))
   AND B.PAYCHECK_OPTION IN ('C', '&', 'M')
  AND B.PAYCHECK_STATUS = 'F'
  AND B.EMPLID         >= $RC_PAYINIT.Emplid_From
   AND B.EMPLID         <= $RC_PAYINIT.Emplid_To
  AND G.COMPANY         = A.COMPANY
  AND G.PAYGROUP        = A.PAYGROUP
  AND G.COUNTRY         = $Country
  AND Y.COMPANY         = A.COMPANY
  AND Y.BALANCE_ID   =  A1.BALANCE_ID
  AND Y.BALANCE_YEAR   =  A1.BALANCE_YEAR
  AND Y.BALANCE_QTR    = A1.BALANCE_QTR
  AND Y.BALANCE_PERIOD  = A1.BALANCE_PERIOD
  AND Y.EMPLID          = B.EMPLID
  AND G.EFFDT           =
    (SELECT MAX(EFFDT)
       FROM PS_PAYGROUP_TBL
      WHERE COMPANY    = A.COMPANY
        AND PAYGROUP   = A.PAYGROUP
        AND EFF_STATUS = 'A'
        AND EFFDT     <= A.PAY_END_DT)
  ! ---- begin 09/2009 furashg UA Modifications UA_PY_0022 -------------
AND p.emplid   = b.emplid
AND p.company  = b.company     !HCM427 llswanso add company to the join
AND d.deptid   = b.deptid
AND l.setid    = d.setid_location
AND l.location = d.location
AND l.effdt    =
  (SELECT MAX(l_ed.effdt)
     FROM ps_location_tbl l_ed
    WHERE l_ed.effdt <= sysdate
  AND l_ed.location  = l.location
  AND l_ed.setid     = l.setid       !HCM427 llswanso add setid to the join
  )
  AND d.effdt    =
  (SELECT MAX(d_ed.effdt)
     FROM ps_dept_tbl d_ed
    WHERE d_ed.effdt <= sysdate
  AND d_ed.deptid  = d.deptid
  AND d_ed.setid   = d.setid                !HCM427 llswanso add setid to the join
  )
ORDER BY
  case
    when p.paycheck_locn_optn = 'D' then l.descrshort
    else p.location
  end,
  CASE
    WHEN p.paycheck_locn_optn = 'D'
    AND l.descrshort BETWEEN '0' AND '9'
    THEN l.address3
    ELSE NULL
  END     ,
  l.address3,
  l.building,
  d.deptid,
  b.paycheck_name
  ! ---- end 09/2009 furashg UA Modifications UA_PY_0022 ---------------
end-SELECT

if #totalchecks = 0                                                        ! 10/14/2009 furashg UA_PY_0001 warrant mods
  show 'No checks selected meeting parameters'                            ! 10/14/2009 furashg UA_PY_0001 warrant mods
end-if                                                                    ! 10/14/2009 furashg UA_PY_0001 warrant mods

SHOW '************************************************************************************'
SHOW 'Main Select Parameters:'
DISPLAY ' '
SHOW 'Page From (#SlctPageFrom) =                       ' #SlctPageFrom
SHOW 'Page Through (#SlctPageThru) =                     ' #SlctPageThru
SHOW 'Beginning Paycheck Number (#BeginPAYCHECK_NBR) =   ' #BeginPAYCHECK_NBR
SHOW 'Ending Paycheck Number (#ThruPAYCHECK_NBR) =       ' #BeginPAYCHECK_NBR
SHOW 'Employee From ($RC_PAYINIT.Emplid_From) =         ' $RC_PAYINIT.Emplid_From
SHOW 'Employee To ($RC_PAYINIT.Emplid_To) =             ' $RC_PAYINIT.Emplid_To
SHOW 'Country ($Country) =                               ' $Country
SHOW 'Calendar Year ID ($Calendar_Year_Id) =            ' $Calendar_Year_Id
SHOW 'Select Off Cycle ? ($SlctOffCycleA) =              ' $SlctOffCycleA
SHOW 'Select Off Cycle ? ($SlctOffCycleB) =              ' $SlctOffCycleB
SHOW '************************************************************************************'

SHOW 'Total Checks:                                     ' #TOTALCHECKS
SHOW 'Zero Checks:                                       ' #zero_checks
let #net_checks = #TOTALCHECKS - #zero_checks
SHOW 'Printed Checks:                                   ' #net_checks
show 'Note: checks printed any other format than HP/PCL (e.g., PDF) will display without graphics such as ICONs and signatures'
end-procedure


!***********************************************************************
begin-procedure Get-Company-Data
!***********************************************************************

begin-SELECT
CT.DESCR,CT.ADDRESS1,CT.ADDRESS2,CT.CITY,CT.STATE,CT.POSTAL

  let $CompanyName      = &CT.Descr
  move &CT.Postal                  to $Zip
  move &CT.Postal                  to $ZipExtsn ~~~~~~xxxx

  if instr($Zip,'-',6) = 0 and $ZipExtsn <> '    '
    let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
  end-if

  move $Zip                        to $ZipExtsn ~~~~~xxxxx

  let $CompanyCityState =
      rtrim(&CT.City,' ') ||' '|| rtrim(&CT.State,' ') ||'  '|| $Zip

  ! ** BEGIN MODIFICATION 20130319 FURASHG HCM-3247 **
  !   let $CompanyAddrLine1   = &CT.Address1
  !   let $CompanyAddrLine3   = ''
  !   if rtrim(&CT.Address2,' ') = ''
  !     let $CompanyAddrLine2 = $CompanyCityState
  !   else
  !     let $CompanyAddrLine2 = &CT.Address2
  !     let $CompanyAddrLine3 = $CompanyCityState
  !   end-if
  let $CompanyAddrLine1 = 'Financial Services Office/Payroll'
  let $CompanyAddrLine2 = &CT.Address1 
  let $CompanyAddrLine3 = $CompanyCityState
  ! ** END MODIFICATION 20130319 FURASHG HCM-3247 **

FROM  PS_COMPANY_TBL CT
WHERE COMPANY = &A.Company
  AND EFFDT   =
    (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
      WHERE COMPANY = CT.COMPANY
        AND EFFDT  <= &A.Pay_End_Dt)
end-SELECT

end-procedure

! BEGIN HCM-6036 LLSWANSO missing section 
!***********************************************************************
begin-procedure Get-Company-Main-Phone-Number
!***********************************************************************

 move ' ' to $CompanyMainPhone

Begin-Select
DTC.PHONE

  Let $CompanyMainPhone = Rtrim(&DTC.PHONE, ' ')

FROM PS_COMP_PHONE_TBL DTC
WHERE DTC.COMPANY = &A.Company
AND DTC.PHONE_TYPE = 'MAIN'
AND DTC.EFFDT = (SELECT MAX(EFFDT)
                 FROM PS_COMP_PHONE_TBL
                 WHERE COMPANY = DTC.COMPANY
                 AND EFFDT <= &A.Pay_End_Dt)
End-Select

end-procedure

!***********************************************************************
begin-procedure Get-PayGroup-Data
!***********************************************************************

! begin modification 09/2009 furashg UA modification ua_py_0006
  let $join_clause = ''
  let $u_form_id = upper(&B.FORM_ID)
  evaluate $u_form_id
    when = 'CHECK'
      let $join_clause = 'and sb.src_bank_id = us.src_bank_id'
      break
    when = 'ADVICE'
      let $join_clause = 'and sb.src_bank_id = us.dd_src_bank_id'
      break
    when = 'ODCHK'
      let $join_clause = 'and sb.src_bank_id = us.ua_src_bank_id'
      break
    when = 'ODADV'
      let $join_clause = 'and sb.src_bank_id = us.ua_dd_src_bank_id'
      break
    when-other
       show 'Error for paycheck ' &b.paycheck_nbr ', ' $u_form_id ' is not a known FORM_ID'
      stop quiet
    break
  end-evaluate
! end  modification 09/2009 furashg UA modification ua_py_0006

begin-SELECT
PG.DESCR
PG.ERNCD_REG_HRS,PG.ERNCD_OT_HRS,PG.ERNCD_REG_EARNS
PG.SRC_BANK_ID
SB.SRC_BANK_ID,SB.BANK_CD,SB.ACCOUNT_EC_ID
BT.BANK_NM,BT.ADDRESS1,BT.ADDRESS2,BT.CITY,BT.STATE,BT.POSTAL


  let $PayGroupName = &PG.Descr
  let $TransitNum   = &SB.BANK_CD
  let $AccountNum   = translate(rtrim(&SB.ACCOUNT_EC_ID,' '),'-','D')

  if $AccountNum = '9600022299'                                        ! 10/07/2009 furashg Mod for Wells Fargo
    let $BankDistrict = '56'                                          ! 10/07/2009 furashg Mod for Wells Fargo
  else                                                                ! 10/07/2009 furashg Mod for Wells Fargo
    let $BankDistrict = '90'                                          ! 10/07/2009 furashg Mod for Wells Fargo
  end-if                                                              ! 10/07/2009 furashg Mod for Wells Fargo
  let $BankID       = $BankDistrict || '-' ||                         ! 10/07/2009 furashg Mod for Wells Fargo
!                      SUBSTR(&SB.BANK_CD,5,4) || '/' ||              ! 10/07/2009 furashg Mod for Wells Fargo
!                      SUBSTR(&SB.BANK_CD,1,4)                        ! 10/07/2009 furashg Mod for Wells Fargo
                      LTRIM(SUBSTR(&SB.BANK_CD,5,4),'0') || '/' ||    ! 10/07/2009 furashg Mod for Wells Fargo
                      LTRIM(SUBSTR(&SB.BANK_CD,1,4),'0')              ! 10/07/2009 furashg Mod for Wells Fargo

  let $ErnCd = &PG.ErnCd_Reg_Hrs
  do Get-Earnings-Name
  let $ShiftDiffEligRegular = $ShiftDiffElig
  let #FactorMultRegular    = #FactorMult

  if $Prior_Earns_Found = 'Y'
    move $EarningsAbbrv to $EarnNameRegHrs
  else
    move $EarningsName to $EarnNameRegHrs
  end-if

  let $ErnCd = &PG.ErnCd_OT_Hrs
  do Get-Earnings-Name
  let $ShiftDiffEligOT = $ShiftDiffElig
  let #FactorMultOT    = #FactorMult

  if $Prior_Earns_Found = 'Y'
    move $EarningsAbbrv to $EarnNameOTHrs
  else
    move $EarningsName to $EarnNameOTHrs
  end-if

  let $ErnCd = &PG.ErnCd_Reg_Earns
  do Get-Earnings-Name

  if $Prior_Earns_Found = 'Y'
    move $EarningsAbbrv to $EarnNameRegEarns
  else
    move $EarningsName to $EarnNameRegEarns
  end-if


  let $BankName      = upper(&BT.BANK_NM)

  move &BT.Postal                  to $Zip
  move &BT.Postal                  to $ZipExtsn ~~~~~~xxxx

  if instr($Zip,'-',6) = 0 and $ZipExtsn <> '    '
    let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
  end-if

  move $Zip                        to $ZipExtsn ~~~~~xxxxx

  let $BankCityState =
      rtrim(&BT.City,' ') ||' '|| rtrim(&BT.State,' ') ||'  '|| $Zip

  let $BankAddrLine1   = &BT.Address1
  let $BankAddrLine3   = ''
  if rtrim(&BT.Address2,' ') = ''
    let $BankAddrLine2 = $BankCityState
  else
    let $BankAddrLine2 = &BT.Address2
    let $BankAddrLine3 = $BankCityState
  end-if

FROM  PS_PAYGROUP_TBL PG,
      PS_SRC_BANK SB,
      PS_BANK_EC_TBL BT,
      ps_ua_py_src_bank us                           ! 09/2009 furashg UA modification ua_py_0006
WHERE PG.COMPANY  = &A.Company
  AND PG.PAYGROUP = &A.PayGroup
  AND PG.COUNTRY  = $Country
  AND PG.EFFDT    = &G.Effdt
  ! AND PG.SRC_BANK_ID = SB.SRC_BANK_ID              09/2009 furashg UA modification ua_py_0006
  AND BT.BANK_CD     = SB.BANK_CD
  AND BT.COUNTRY_CD  = $Country
  [$join_clause]                                    ! 09/2009 furashg UA modification ua_py_0006
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Ee-Job-Data
!***********************************************************************

begin-SELECT
J.DEPTID,J.JOBCODE,J.LOCATION,J.COMPRATE
P.NAME,
J.BUSINESS_UNIT
J.SETID_JOBCODE
FQ.FREQUENCY_TYPE

  let $BU       = rtrim(&J.BUSINESS_UNIT,' ')
  let $DeptID   = rtrim(&J.DeptID,' ')
  do Get-Department-Name
  let $SetID = rtrim(&J.SetID_JobCode, ' ')
  let $JobCode  = rtrim(&J.JobCode,' ')
  do Get-Job-Title
  move &J.Business_unit to $Busunit
  let $Recname  = 'LOCATION_TBL'
  do Get-Setid($Busunit, $Recname, $Setid)
  let $Location = rtrim(&J.Location,' ')
  do Get-Location-Name

  let $FieldName  = 'FREQUENCY_TYPE'
  let $FieldValue = &FQ.FREQUENCY_TYPE
  do Read-Translate-Table
  move $XLatLongName to $CompFrequency

! ** begin modification 20101025 gfurash HCM-1315 **
  LET $name = $check_name
! ** end modification 20101025 gfurash HCM-1315 **
  do Rotate-Name
  move $Name to $HomeName

   Do Get-Empl-Address (&B.Emplid,'HOME', $AddressFound)

   let $ADDRESS1 = $GETADDR_Address1
   let $ADDRESS2 = $GETADDR_Address2
   let $CITY = $GETADDR_CITY
   let $STATE =$GETADDR_STATE
   let $POSTAL   = $GETADDR_POSTAL

  move $Postal                   to $Zip
  move $Postal                   to $ZipExtsn ~~~~~~xxxx

  if instr($Zip,'-',6) = 0 and $ZipExtsn <> '    '
    let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
  end-if

  move $Zip                        to $ZipExtsn ~~~~~xxxxx

  let $HomeCityState =
      rtrim($City,' ') ||' '|| rtrim($State,' ') ||'  ' || $Zip


  let $HomeAddrLine1   = $Address1
  let $HomeAddrLine3   = ''
  if rtrim($Address2,' ') = ''
    let $HomeAddrLine2 = $HomeCityState
  else
    let $HomeAddrLine2 = $Address2
    let $HomeAddrLine3 = $HomeCityState
  end-if

FROM  PS_JOB           J,
      PS_NAMES P,
      PS_FREQUENCY_TBL FQ
WHERE P.EMPLID            = J.EMPLID
  AND J.EMPLID            = &B.EmplID
  AND J.EMPL_RCD         = &B.EMPL_RCD
  AND J.COMPANY = &A.COMPANY
  AND J.EFFDT             =
    (SELECT MAX(EFFDT)
       FROM PS_JOB
      WHERE EMPLID    = J.EMPLID
        AND EMPL_RCD = J.EMPL_RCD
        AND COMPANY = J.COMPANY
        AND EFFDT    <= &A.Pay_End_Dt)
  AND J.EFFSEQ =
    (SELECT MAX(EFFSEQ)
       FROM PS_JOB
      WHERE EMPLID    = J.EMPLID
        AND EMPL_RCD = J.EMPL_RCD
        AND COMPANY = J.COMPANY
        AND EFFDT     = J.EFFDT)
  AND J.COMP_FREQUENCY    = FQ.FREQUENCY_ID
  AND FQ.EFF_STATUS       = 'A'
  AND FQ.EFFDT            =
    (SELECT MAX(FQ1.EFFDT)
       FROM PS_FREQUENCY_TBL FQ1
      WHERE FQ1.FREQUENCY_ID   = FQ.FREQUENCY_ID
!        AND FQ1.EFF_STATUS     = FQ.EFF_STATUS   !HCM   remove status from select is not a key llswanso
        AND FQ1.EFFDT         <= J.EFFDT)
  AND P.NAME_TYPE = 'PRI'
  AND P.EFFDT =
      (SELECT MAX(PN.EFFDT)
       FROM   PS_NAMES PN
       WHERE  PN.EMPLID    = P.EMPLID
         AND  PN.NAME_TYPE = P.NAME_TYPE
         AND  PN.EFFDT    <= $AsOfToday)
end-SELECT
end-procedure

!***********************************************************************
begin-procedure Get-Ee-Tax-Data
!***********************************************************************

begin-SELECT
FT.EFFDT,
FT.SPECIAL_FWT_STATUS,
FT.FWT_MAR_STATUS,
FT.FWT_ALLOWANCES,
FT.FWT_ADDL_AMT,
FT.FWT_ADDL_PCT

  let $FieldName    = 'FWT_MAR_STATUS'
  let $FieldValue   = &FT.FWT_Mar_Status
  do Read-Translate-Table
  let $FWTMarStatus = $XlatShortName
  let $FieldName    = 'SPECIAL_FWT_STATUS'
  let $FieldValue   = &FT.SPECIAL_FWT_STATUS
  let $FieldValue   = 'E'
  do Read-Translate-Table
  let $FWTStatus    = $XLatShortName

FROM  PS_FED_TAX_DATA   FT
WHERE FT.EMPLID   = &B.EmplID
  AND FT.COMPANY  = &A.Company
  AND FT.EFFDT    =
    (SELECT MAX(EFFDT)
       FROM PS_FED_TAX_DATA
      WHERE EMPLID  = FT.EMPLID
        AND COMPANY = FT.COMPANY
        AND CREATION_DT <= &B.UPDATE_DT
        AND EFFDT  <= &A.Check_Dt)
end-SELECT

LET $ST_FOUND               = 'N'
LET $ST_STATE               = ''
LET $ST_RESIDENT            = ''
LET $ST_SWT_MAR_STATUS      = ''
LET #ST_SWT_ALLOWANCES      = 0
LET #ST_SWT_ADDL_ALLOWNCES  = 0
LET #ST_SWT_ADDL_AMT        = 0
LET #ST_SWT_ADDL_PCT        = 0
LET $ST.SPECIAL_SWT_STATUS  = ' '
LET #st_percent_of_fwt      = 0       !20130618 FURASHG HCM-5771

begin-select
ST.STATE
ST.RESIDENT
ST.SPECIAL_SWT_STATUS,
ST.SWT_MAR_STATUS
ST.SWT_ALLOWANCES
ST.SWT_ADDL_ALLOWNCES
ST.SWT_ADDL_AMT
ST.SWT_ADDL_PCT
ST.PERCENT_OF_FWT                                           !    6/10/2009  ABeecham   UA Modifications  UA_PY_0001

   LET $ST_FOUND               = 'Y'
   LET $ST_STATE               = &ST.STATE
   LET $ST_RESIDENT            = &ST.RESIDENT
   LET $ST_SWT_MAR_STATUS      = &ST.SWT_MAR_STATUS
   LET #ST_SWT_ALLOWANCES      = &ST.SWT_ALLOWANCES
   LET #ST_SWT_ADDL_ALLOWNCES  = &ST.SWT_ADDL_ALLOWNCES
   LET #ST_SWT_ADDL_AMT        = &ST.SWT_ADDL_AMT
   LET #ST_SWT_ADDL_PCT        = &ST.SWT_ADDL_PCT
   LET $ST.SPECIAL_SWT_STATUS  = &ST.SPECIAL_SWT_STATUS
   LET #ST_PERCENT_OF_FWT      = &ST.PERCENT_OF_FWT         !    6/10/2009  ABeecham   UA Modifications  UA_PY_0001
   let $FieldName              = 'SPECIAL_SWT_STATUS'
   let $FieldValue             = &ST.SPECIAL_SWT_STATUS
   let $FieldValue             = 'E'
   do Read-Translate-Table
   let $SWTStatus              = $XLatShortName


from PS_STATE_TAX_DATA ST
WHERE ST.EMPLID   = &B.EmplID
  AND ST.COMPANY  = &A.COMPANY
  AND ST.EFFDT    = &FT.EFFDT
  AND ST.CREATION_DT <= &B.UPDATE_DT
  AND ST.RESIDENT = 'Y'
end-select

IF $ST_FOUND = 'N'
begin-select
ST2.STATE
ST2.RESIDENT
ST2.SPECIAL_SWT_STATUS,
ST2.SWT_MAR_STATUS
ST2.SWT_ALLOWANCES
ST2.SWT_ADDL_ALLOWNCES
ST2.SWT_ADDL_AMT
ST2.SWT_ADDL_PCT
PT.LOCALITY
ST2.PERCENT_OF_FWT                                     !20130618 FURASHG HCM-5771

   if $ST_FOUND = 'N'
      if rtrim(&PT.LOCALITY,' ') = ''
         LET $ST_FOUND               = 'Y'
         LET $ST_STATE               = &ST2.STATE
         LET $ST_RESIDENT            = &ST2.RESIDENT
         LET $ST_SWT_MAR_STATUS      = &ST2.SWT_MAR_STATUS
         LET #ST_SWT_ALLOWANCES      = &ST2.SWT_ALLOWANCES
         LET #ST_SWT_ADDL_ALLOWNCES  = &ST2.SWT_ADDL_ALLOWNCES
         LET #ST_SWT_ADDL_AMT        = &ST2.SWT_ADDL_AMT
         LET #ST_SWT_ADDL_PCT        = &ST2.SWT_ADDL_PCT
         LET $ST.SPECIAL_SWT_STATUS  = &ST2.SPECIAL_SWT_STATUS
         let $FieldName              = 'SPECIAL_SWT_STATUS'
         let $FieldValue             = &ST2.SPECIAL_SWT_STATUS
         let $FieldValue             = 'E'
         do Read-Translate-Table
         let $SWTStatus              = $XLatShortName
      end-if
   end-if

  if &st2.state = 'AZ'                                !20130618 FURASHG HCM-5771
    let #st_percent_of_fwt   = &ST2.PERCENT_OF_FWT    !20130618 FURASHG HCM-5771
  end-if                                              !20130618 FURASHG HCM-5771
  
from PS_STATE_TAX_DATA ST2,
     PS_PAY_TAX PT
WHERE ST2.EMPLID    = &B.EmplID
  AND ST2.COMPANY   = &A.COMPANY
  AND ST2.CREATION_DT <= &B.UPDATE_DT
  AND ST2.EFFDT     = &FT.EFFDT
  AND ST2.STATE     = PT.STATE
  AND PT.COMPANY    = &A.COMPANY
  AND PT.PAYGROUP   = &A.PAYGROUP
  AND PT.PAY_END_DT = &A.PAY_END_DT
  AND PT.OFF_CYCLE  = &B.OFF_CYCLE
  AND PT.PAGE_NUM   = &B.PAGE_NUM
  AND PT.LINE_NUM   = &B.LINE_NUM
  AND PT.SEPCHK     = &B.SEPCHK
  AND PT.STATE     <> '$U'
  AND PT.TAX_CLASS  = 'H'
ORDER BY ST2.STATE
end-select
END-IF

! BEGIN MODIFICATION 20090720 FURASHG PY_0001 Modifications ************

  LET $fica_total_pct = '0.00'
  LET #fica_tip_pct = 0
  LET #fica_notip_pct = 0
  LET #fica_pct = 0

! calculate ee-specific FICA percentage withdrawn from this check
BEGIN-SELECT
PT2.TAX_CLASS
PT2.TAX_CUR
PT2.TXGRS_CUR

  ! calculate the percentage as of this tax withdrawal
  IF &pt2.txgrs_cur > 0
    LET #fica_pct = &pt2.tax_cur / &pt2.txgrs_cur * 100
  ELSE
    LET #fica_pct = 0
  END-IF

  ! sum up tax percentages across FICA tip/notip
  EVALUATE &PT2.TAX_CLASS
    WHEN = 'D' ! OASDI/Disability - EE
      LET #fica_notip_pct = #fica_notip_pct + #fica_pct
      BREAK
    WHEN = 'F' ! FICA Med Hospital Ins / EE
      LET #fica_notip_pct = #fica_notip_pct + #fica_pct
      BREAK
    WHEN = 'Z' ! FICA Med Hospital Ins /ER-tips  Med/ER/tip
      LET #fica_tip_pct = #fica_tip_pct + #fica_pct
      BREAK
    WHEN = 'G' ! OASDI/EE - tips  OASDItipEE
      LET #fica_tip_pct = #fica_tip_pct + #fica_pct
      BREAK
    WHEN = '7' ! Additional Medicare (Earnings > $200,000)
      LET #fica_notip_pct = #fica_notip_pct + #fica_pct
      BREAK
  END-EVALUATE

FROM PS_PAY_TAX PT2
WHERE PT2.COMPANY    = &A.COMPANY
  AND PT2.PAYGROUP   = &A.PAYGROUP
  AND PT2.PAY_END_DT = &A.PAY_END_DT
  AND PT2.OFF_CYCLE  = &B.OFF_CYCLE
  AND PT2.PAGE_NUM   = &B.PAGE_NUM
  AND PT2.LINE_NUM   = &B.LINE_NUM
  AND PT2.SEPCHK     = &B.SEPCHK
  AND PT2.STATE       = '$U'
  AND PT2.TAX_CLASS  IN ('D', 'F', 'Z', 'G', '7') ! 20130211 FURASHG HCM-3247
END-SELECT

  LET $fica_total_pct = LTRIM(EDIT(#fica_notip_pct,'9.99'),' ')
  IF #fica_tip_pct > 0
    LET $fica_total_pct = $fica_total_pct || ' (' || LTRIM(EDIT(#fica_tip_pct,'9.99'),' ') || ')'
  END-IF
! END MODIFICATION 20090720 FURASHG PY_0001 Modifications ************

IF $ST_FOUND = 'Y'
   do Get-SWT-Marital-Status
END-IF

end-procedure


!***********************************************************************
begin-procedure Get-SWT-Marital-Status
!***********************************************************************

begin-SELECT
SM.DESCRSHORT

  let $SWTMarStatus = substr(&SM.DescrShort,1,10)

FROM  PS_SWT_MARSTAT_TBL SM
WHERE SM.STATE          = $ST_State
  AND SM.SWT_MAR_STATUS = $ST_SWT_Mar_Status
  AND SM.EFFDT          =
    (SELECT MAX(EFFDT)
       FROM PS_SWT_MARSTAT_TBL
      WHERE STATE          = SM.STATE
        AND SWT_MAR_STATUS = SM.SWT_MAR_STATUS
        AND EFFDT         <= &A.Pay_End_Dt)
end-SELECT

end-procedure

! BEGIN HCM-6036 LLSWANSO missing section 
!***********************************************************************
begin-procedure Get-Overflow-Flag
!***********************************************************************

begin-SELECT
OH.PY_CHK_OVERFLOW

    move &OH.PY_chk_overflow to $Create_Overflow


FROM  PS_PY_SSP_OPTN_HDR OH
WHERE OH.PY_SSP_SETUP_ID = $ssp_setup_id
  AND OH.EFFDT = (SELECT MAX(EFFDT) FROM PS_PY_SSP_OPTN_HDR
                     WHERE PY_SSP_SETUP_ID = $ssp_setup_id
                       AND EFFDT <= $AsOfToday)
end-SELECT

end-procedure

!***********************************************************************
! Check if paycheck contains adjustment to prior period earnings
!***********************************************************************
begin-procedure Find-Prior-Earn-Adj

  let $Print-Phone = 'N'                  ! 20130321 FURASHG HCM-3247

!begin-SELECT
!'X'                                      ! 20130321 FURASHG HCM-3247
begin-select
EA.STATE                                  ! 20130321 FURASHG HCM-3247
EA.EARNS_END_DT                           ! 20130321 FURASHG HCM-3247

!  let $Prior_Earns_Found = 'Y'           ! 20130321 FURASH HCM-3247

! ** BEGIN MODIFICATION 04/18/2011 FURASHG HCM-2236 **
!  if $Prior_Earns_Found  ='Y'                                              ! 10/15/2009 furashg UA_PY_0001 earnings mods
!    show 'Program not cfg. for CA Prior Earns on check ' &B.PAYCHECK_NBR  ! 10/15/2009 furashg UA_PY_0001 earnings mods
!    stop quiet                                                            ! 10/15/2009 furashg UA_PY_0001 earnings mods
!  end-if                                                                  ! 10/15/2009 furashg UA_PY_0001 earnings mods
! ** BEGIN MODIFICATION 04/18/2011 FURASHG HCM-2236 **

  If &EA.EARNS_END_DT < &A.PAY_BEGIN_DT   ! 20130321 FURASH HCM-3247
     let $Prior_Earns_Found = 'Y'         ! 20130321 FURASH HCM-3247
  end-if                                  ! 20130321 FURASH HCM-3247

  if  rtrim(&EA.STATE,' ') = 'NY'         ! 20130321 FURASH HCM-3247
   or rtrim(&EA.STATE,' ') = 'HI'         ! LLSWANSO HCM-6460 Tax Update 13-F
      let $Print-Phone = 'Y'              ! 20130321 FURASH HCM-3247
  end-if                                  ! 20130321 FURASH HCM-3247

FROM  PS_PAY_EARNINGS EA
WHERE EA.COMPANY    = &A.Company
  AND EA.PAYGROUP   = &A.PayGroup
  AND EA.PAY_END_DT = &A.Pay_End_Dt
  AND EA.OFF_CYCLE  = &B.Off_Cycle
  AND EA.PAGE_NUM   = &B.PAGE_NUM
  AND EA.LINE_NUM   = &B.LINE_NUM
  AND EA.SEPCHK     = &B.SepChk
  AND EA.SINGLE_CHECK_USE IN ('C', 'N')
  ! AND EA.STATE = 'CA'                    ! 20130912 LLSWANSO TAX Update 13-D cleanup
  ! AND EA.EARNS_END_DT < &A.PAY_BEGIN_DT  ! 20130321 FURASH HCM-3247
  AND EA.STATE IN ('CA','NY','CO','HI')       ! LLSWANSO HCM-6460 Tax Update 13-F
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Get-Earnings-Detail
!***********************************************************************

  let $EarnBegin = ''
  let $EarnEnd = ''
  let $lastEarnBegin = ''
  let $lastEarnEnd = ''

  if $Prior_Earns_Found = 'Y'
     let $E_OrderBy = 'ORDER BY E.EARNS_END_DT DESC, E.EARNS_BEGIN_DT DESC'
  else
     let $E_OrderBy = 'ORDER BY E.ADDL_NBR'
  end-if

begin-SELECT
E.HOURLY_RT
E.REG_HRS
E.REG_HRLY_EARNS
E.OT_HRS
E.OT_HRLY_EARNS
E.REG_EARNS
E.REG_EARN_HRS
E.COMP_RATECD_REG
E.COMP_RATECD_OT
E.COMPRATE_USED_REG
E.COMPRATE_USED_OT
E.ADDL_NBR
E.RATE_USED
E.SHIFT_RT
E.EARNS_BEGIN_DT
E.EARNS_END_DT
E.STATE
E.FLSA_STATUS

  if $Prior_Earns_Found = 'Y'
    do Format-DateTime(&E.EARNS_END_DT, $temp1, {DEFCMP}, '', '')
    do Format-DateTime(&A.PAY_BEGIN_DT, $Pay_Begin_Dt, {DEFCMP}, '', '')
    if $temp1 < $Pay_Begin_Dt
      move &E.EARNS_BEGIN_DT   to $EarnBegin
      move &E.EARNS_END_DT     to $EarnEnd
    else
      let $EarnBegin = ''
      let $EarnEnd = ''
    end-if
    move $PG_EarnAbbrvRegHrs   to $EarnNameRegHrs
    move $PG_EarnAbbrvOTHrs    to $EarnNameOTHrs
    move $PG_EarnAbbrvRegEarns to $EarnNameRegEarns
  else
    move $PG_EarnNameRegHrs    to $EarnNameRegHrs
    move $PG_EarnNameOTHrs     to $EarnNameOTHrs
    move $PG_EarnNameRegEarns  to $EarnNameRegEarns
  end-if

  if (rtrim(&E.STATE,' ') = 'CA' or rtrim(&E.STATE,' ') = 'NY'
      or rtrim(&E.STATE,' ') = 'HI')  and                ! LLSWANSO HCM-6460 Tax Update 13-F
     (&E.Flsa_status = 'N' or &E.Flsa_status = 'V')
     move 'Y' to $CA_NY_Sal_Nonexempt
  else
     move 'N' to $CA_NY_Sal_Nonexempt
  end-if

  move &E.Shift_Rt                 to #ShiftRate
  let #k = 1
  WHILE #k <= 3
    move 'N' to $NY_spec_rate
    evaluate #k
      when = 1
        move &PG.ErnCd_Reg_Hrs     to $Code
        move $EarnNameRegHrs       to $Name
        move &E.Comp_Ratecd_Reg    to $CmpRtCd
!       move &E.Hourly_Rt          to #Rate
        move &E.Comprate_used_reg  to #Rate
        move &E.Reg_Hrs            to #Hours
        move &E.Reg_Hrly_Earns     to #Earns
        move ''                    to $RateUsed
        move $ShiftDiffEligRegular to $ShiftDiffElig
        move #FactorMultRegular    to #FactorMult
        do Test-For-Rate-Recalc
      when = 2
        move &PG.ErnCd_OT_Hrs      to $Code
        move $EarnNameOTHrs        to $Name
        move &E.Comp_Ratecd_Ot     to $CmpRtCd        !++
        move &E.Comprate_used_Ot   to #Rate           !++
        move &E.OT_Hrs             to #Hours
        move &E.OT_Hrly_Earns      to #Earns
        move &E.Rate_Used          to $RateUsed
        move $ShiftDiffEligOT      to $ShiftDiffElig
        move #FactorMultOT         to #FactorMult
        do Test-For-Rate-Recalc
        if $Create_Overflow = 'Y' and $RC_PAYINIT.Text15 = $Create_XML_DATA
           and (rtrim(&E.STATE,' ') = 'NY' or rtrim(&E.STATE,' ') = 'CA'
                or rtrim(&E.STATE,' ') = 'HI')            ! LLSWANSO HCM-6460 Tax Update 13-F
           and #Rate <> 0
           and (&E.RATE_USED = 'F' or &E.RATE_USED = 'A')
           move 'Y' to $NY_spec_rate
           add 1 to #NY_OT_rate
           move &E.STATE to $NY_ot_state
        end-if
      when = 3
        move &PG.ErnCd_Reg_Earns   to $Code
        move $EarnNameRegEarns     to $Name
        move ''                    to $CmpRtCd        !++
        if $CA_NY_Sal_Nonexempt = 'N'
          move 0                     to #Rate
          move 0                     to #Hours
        else
          move &E.Reg_Earn_Hrs      to #Hours
          move &E.Hourly_rt         to #Rate
        end-if
        move &E.Reg_Earns          to #Earns
     end-evaluate
     move #RatesRow                to #i
     do Update-ETDarray-Current-Earnings
     IF $NY_spec_rate = 'Y'
        do Update-ETDarray-NY
     end-if
     add 1 to #k
  END-WHILE
  do Get-Other-Earnings-Detail

FROM  PS_PAY_EARNINGS E
WHERE E.COMPANY    = &A.Company
  AND E.PAYGROUP   = &A.PayGroup
  AND E.PAY_END_DT = &A.Pay_End_Dt
  AND E.OFF_CYCLE  = &B.Off_Cycle
  AND E.PAGE_NUM      = &B.PAGE_NUM
  AND E.LINE_NUM      = &B.LINE_NUM
  AND E.SEPCHK     = &B.SepChk
  AND E.SINGLE_CHECK_USE IN ('C', 'N')
[$E_Orderby]
end-SELECT

  let $EarnBegin = ''
  let $EarnEnd = ''

  do Get-Earning-Balances

  do Get-ETDarray-Entry-Count
  let #maxrow = #ecnt + #NY_OT_rate + 1

  if $Prior_Earns_Found = 'Y'
    do Arrange-Earnings
  else
    let $lastEarnBegin = ''
    let $lastEarnEnd = ''
  end-if

end-procedure


!***********************************************************************
begin-procedure Get-Other-Earnings-Detail
!***********************************************************************

begin-SELECT
OE.ERNCD
  let $ErnCd = &OE.ErnCd
  do Get-Earnings-Name
OE.COMP_RATECD
OE.COMPRATE_USED
OE.OTH_HRS
OE.OTH_EARNS
OE.OTH_PAY
OE.HRS_DIST_SW
OE.RATE_USED
  move $ErnCd            to $Code
  move 'N'               to $NY_spec_rate

  if $Prior_Earns_Found = 'Y'
    move $EarningsAbbrv to $Name
  else
    move $EarningsName to $Name
  end-if

  do Check-Override-Rate

  move &OE.Comp_Ratecd   to $CmpRtCd        !++

  if $override-yes = 'Y'
    move &OV.Perunit_Ovr_Rt to #Rate
  else
    if &OE.OTH_HRS <> 0 and &OE.OTH_PAY <> 0
      move 0                  to #Rate
    else
      move &OE.Comprate_used  to #Rate
    end-if
  end-if

  if &OE.HRS_DIST_SW = 'Y'
    move 0               to #Rate
    move 0               to #Hours
  else
    move &OE.Oth_Hrs     to #Hours
  end-if

  move &OE.Oth_Earns     to #Earns
  move &OE.Rate_Used     to $RateUsed
  do Test-For-Rate-Recalc
  if $Create_Overflow = 'Y' and $RC_PAYINIT.Text15 = $Create_XML_DATA
     and (rtrim(&E.STATE,' ') = 'NY' or rtrim(&E.STATE,' ') = 'CA'
          or rtrim(&E.STATE,' ') = 'HI')               ! LLSWANSO HCM-6460 Tax Update 13-F
     and &OE.Oth_Hrs <> 0
     and (&OE.RATE_USED = 'F' or &OE.RATE_USED = 'A')
     move 'Y' to $NY_spec_rate
     add 1 to #NY_OT_rate
     move &E.STATE to $NY_ot_state
  end-if

  if $Prior_Earns_Found = 'Y'
    do Format-DateTime(&E.EARNS_END_DT, $temp1, {DEFCMP}, '', '')
    if $temp1 < $Pay_Begin_Dt
      move &E.EARNS_BEGIN_DT   to $EarnBegin
      move &E.EARNS_END_DT     to $EarnEnd
    else
      let $EarnBegin = ''
      let $EarnEnd = ''
    end-if
  end-if

  move #RatesRow         to #i
  do Update-ETDarray-Current-Earnings
  IF $NY_spec_rate = 'Y'
     do Update-ETDarray-NY
  end-if
FROM  PS_PAY_OTH_EARNS OE
WHERE OE.COMPANY    = &A.Company
  AND OE.PAYGROUP   = &A.PayGroup
  AND OE.PAY_END_DT = &A.Pay_End_Dt
  AND OE.OFF_CYCLE  = &B.Off_Cycle
  AND OE.PAGE_NUM      = &B.PAGE_NUM
  AND OE.LINE_NUM      = &B.LINE_NUM
  AND OE.SEPCHK     = &B.SepChk
  AND OE.ADDL_NBR      = &E.ADDL_NBR
ORDER BY OE.ERNCD
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Check-Override-Rate
!***********************************************************************

  let $override-yes = 'N'

begin-SELECT
OV.PERUNIT_OVR_RT

  let $override-yes = 'Y'

FROM  PS_EARNINGS_TBL OV
WHERE OV.ERNCD        = &OE.ERNCD
  AND OV.EFF_STATUS   = 'A'
  AND OV.PAYMENT_TYPE = 'U'
  AND OV.EFFDT        =
     (SELECT MAX(EFFDT)
        FROM PS_EARNINGS_TBL
       WHERE ERNCD         = OV.ERNCD
         AND EFF_STATUS    = OV.EFF_STATUS
         AND EFFDT        <= &A.Pay_End_Dt)
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Test-For-Rate-Recalc
!***********************************************************************

  if #Rate <> 0 and #Hours <> 0 and #Earns <> 0

    let #wEarns = #Rate * #Hours
    let #wEarns = #wEarns - #Earns

    if #wEarns > .01 or #wEarns < -.01

      if $RateUsed = 'F' or $RateUsed = 'A'
        or #FactorHrsAdj <> 0 or #FactorErnAdj <> 0
        move 'Y' to $NeedXfootMsg
      else
        if $ShiftDiffElig = 'Y'
          let #Rate = (#Rate + #ShiftRate + #FactorRateAdj) * #FactorMult
        else
          let #Rate = (#Rate + #FactorRateAdj) * #FactorMult
        end-if

        let #wEarns = #Rate * #Hours
        let #wEarns = #wEarns - #Earns

        if #wEarns > .01 or #wEarns < -.01
          let #Rate = #Earns / #Hours
        end-if

        if #Rate < 0
          let #Rate = #Rate * -1
        end-if
      end-if
    end-if
  end-if

end-procedure

!***********************************************************************
begin-procedure Get-Earning-Balances
!***********************************************************************

  let #Cur = 0

begin-SELECT
EB.EMPL_RCD, EB.ERNCD,EB.HRS_YTD,EB.GRS_YTD

  let $ErnCd = &EB.ErnCd
  do Get-Earnings-Name
  let $Code = $ErnCd

  if $Prior_Earns_Found = 'Y'
    let $Name = $EarningsAbbrv
  else
    let $Name = $EarningsName
  end-if

  let #k = 1
  WHILE #k <= 3
    evaluate #k
      when = 1
        move 0           to #YTD
        move #RatesRow   to #i
      when = 2
        move &EB.Hrs_YTD to #YTD
        move #HoursRow   to #i
      when = 3
        move &EB.Grs_YTD to #YTD
        move #EarnsRow   to #i
    end-evaluate
            do Update-ETDarray
    add 1 to #k
  END-WHILE

FROM  PS_EARNINGS_BAL EB
WHERE EB.EMPLID        = &B.EmplID
  AND EB.COMPANY       = &A.Company
  AND EB.BALANCE_ID    = &A1.BALANCE_ID
  AND EB.BALANCE_YEAR  = &A1.BALANCE_YEAR
  AND EB.SPCL_BALANCE  = 'N'
  AND EB.BALANCE_PERIOD       =
    (SELECT MAX(BALANCE_PERIOD)
       FROM PS_EARNINGS_BAL
      WHERE EMPLID        = EB.EMPLID
        AND EMPL_RCD      = EB.EMPL_RCD
        AND COMPANY       = EB.COMPANY
        AND BALANCE_ID    = EB.BALANCE_ID
        AND BALANCE_YEAR  = EB.BALANCE_YEAR
        AND SPCL_BALANCE  = EB.SPCL_BALANCE
        AND ERNCD         = EB.ERNCD
        AND BALANCE_PERIOD      <= &A1.BALANCE_PERIOD)
ORDER BY EB.EMPL_RCD, EB.ERNCD
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Get-Taxes-Detail
!***********************************************************************

  let #YTD = 0
  let #i   = #TaxesRow

begin-SELECT
T.STATE,T.LOCALITY,T.TAX_CLASS,T.TAX_CUR,T.TXGRS_CUR
  if rtrim(&T.State,' ') = 'PA' and &T.TAX_CUR = 0
    ! bypass zero tax_cur for PA
  else
    let $Code = rtrim(&T.State,' ') || rtrim(&T.Locality,' ') || &T.Tax_Class
    if rtrim(&T.State, ' ') = '$U'
      let $Name = 'Fed'
      if &T.Tax_Class = 'H' or &T.Tax_Class = 'A'   !withholding          !HP99999
        add  &T.TxGrs_Cur to #FedTaxGrossCur                              !HP99998
      end-if
    else
      let $Name = rtrim(&T.State, ' ')
      if rtrim(&T.Locality,' ') <> ''     !if a Locality
        let $State = rtrim(&T.State, ' ')
        let $Locality = rtrim(&T.Locality, ' ')
        do Get-Local-Tax-Data
        let $Name = $Name || ' ' || $Localabbr
      end-if
    end-if
    let $FieldName  = 'TAX_CLASS'
    let $FieldValue = &T.Tax_Class
    do Read-Translate-Table
    let $Name = $Name || ' ' || $XLatShortName

    move &T.Tax_Cur to #Cur
    do Update-ETDarray

  end-if

FROM  PS_PAY_TAX T
WHERE T.COMPANY    = &A.Company
  AND T.PAYGROUP   = &A.PayGroup
  AND T.PAY_END_DT = &A.Pay_End_Dt
  AND T.OFF_CYCLE  = &B.Off_Cycle
  AND T.PAGE_NUM      = &B.PAGE_NUM
  AND T.LINE_NUM      = &B.LINE_NUM
  AND T.SEPCHK     = &B.SepChk
  AND T.STATE NOT IN ('$UAS','$UGU','$UPR','$UVI')
  AND T.TAX_CLASS IN ('A','B','C','D','F','G','H','I','L','M','N','O','P','T','V','W','7')     !HP99999
ORDER BY T.STATE,T.LOCALITY,T.TAX_CLASS DESC
end-SELECT
  do Get-Tax-Balances
end-procedure


!***********************************************************************
begin-procedure Get-Tax-Balances
!***********************************************************************

  let #Cur = 0

begin-SELECT
TB.STATE,TB.LOCALITY,TB.TAX_CLASS,TB.TAX_YTD,TB.TXGRS_YTD
  if rtrim(&TB.State, ' ') = 'PA' and &TB.TAX_YTD = 0
    ! bypass zero tax_ytd for PA
  else
    let $Code = rtrim(&TB.State, ' ') || rtrim(&TB.Locality,' ') || &TB.Tax_Class  !-:
    if rtrim(&TB.State, ' ') = '$U'
      let $Name = 'Fed'
      if &TB.Tax_Class = 'H' or &TB.Tax_Class = 'A'         !withholding  !HP99999
        add  &TB.TxGrs_YTD to #FedTaxGrossYTD                             !HP99998
      end-if
    else
      let $Name = rtrim(&TB.State,' ')
      if rtrim(&TB.Locality,' ') <> ''     !if a Locality
        let $State = rtrim(&TB.State, ' ')
        let $Locality = rtrim(&TB.Locality, ' ')
        do Get-Local-Tax-Data
        let $Name = $Name || ' ' || $Localabbr
      end-if
    end-if
    let $FieldName  = 'TAX_CLASS'
    let $FieldValue = &TB.Tax_Class
    do Read-Translate-Table
    let $Name = $Name || ' ' || $XLatShortName
    move &TB.Tax_YTD to #YTD
    let $StName = rtrim(&TB.State, ' ')
    if $StName = 'PA'
      if rtrim(&TB.Locality,' ') = ''
        if &TB.Tax_Class = 'P'
        else
          do Update-ETDarray
        end-if
      else
        do Update-ETDarray
      end-if
    else
      do Update-ETDarray
    end-if
  end-if
FROM  PS_TAX_BALANCE TB
WHERE TB.EMPLID        = &B.EmplID
  AND TB.COMPANY       = &A.Company
  AND TB.BALANCE_ID    = &A1.BALANCE_ID
  AND TB.BALANCE_YEAR  = &A1.BALANCE_YEAR
  AND TB.STATE NOT IN ('$UAS','$UGU','$UPR','$UVI')
  AND TB.TAX_CLASS IN ('A','B','C','D','F','G','H','I','L','M','N','O','P','T','V','W','7')    !HP99999
  AND TB.BALANCE_PERIOD      =
    (SELECT MAX(BALANCE_PERIOD)
       FROM PS_TAX_BALANCE
      WHERE EMPLID        = TB.EMPLID
        AND COMPANY       = TB.COMPANY
        AND BALANCE_ID    = TB.BALANCE_ID
        AND BALANCE_YEAR  = TB.BALANCE_YEAR
        AND STATE         = TB.STATE
        AND (LOCALITY     = TB.LOCALITY
         OR  LOCALITY = ' ' and TB.LOCALITY = ' ')
        AND TAX_CLASS     = TB.TAX_CLASS
!        AND WORK_PSD_CD   = TB.WORK_PSD_CD       ! BEGIN HCM-6036 LLSWANSO missing join 
!        AND RES_PSD_CD    = TB.RES_PSD_CD  ! BEGIN HCM-6036 LLSWANSO missing join     
        AND BALANCE_PERIOD      <= &A1.BALANCE_PERIOD)
ORDER BY TB.STATE,TB.LOCALITY,TB.TAX_CLASS DESC
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Deductions-Detail
!***********************************************************************

  let #YTD = 0

begin-SELECT
N.PLAN_TYPE,N.DEDCD,N.DED_CLASS,N.DED_CUR

  let $PlanType = &N.Plan_Type
  let $DedCd    = &N.DedCd

  do Get-Deduction-Name

  if $SpclProcess= 'G'
    do Get-Garnishment-Detail
  else
    let $Code = $PlanType || $DedCd || &N.Ded_Class
    let $Name = $DeductionName

    evaluate &N.Ded_Class
      when = 'B'           !Before-tax deduction
        move #PreTaxDedsRow  to #i
      when = 'A'           !After-tax deduction
        move #PostTaxDedsRow to #i
      when = 'N'           !Non-taxable benefit
      when = 'P'
        move #BenefitsRow    to #i
      when = 'T'           !Taxable benefit
        move #BenefitsRow    to #i
        concat '*' with $Name
      when-other
        move #PostTaxDedsRow to #i
    end-evaluate

    move &N.Ded_Cur to #Cur
    do Update-ETDarray
  end-if

FROM  PS_PAY_DEDUCTION N
WHERE N.COMPANY    = &A.Company
  AND N.PAYGROUP   = &A.PayGroup
  AND N.PAY_END_DT = &A.Pay_End_Dt
  AND N.OFF_CYCLE  = &B.Off_Cycle
  AND N.PAGE_NUM   = &B.PAGE_NUM
  AND N.LINE_NUM   = &B.LINE_NUM
  AND N.SEPCHK     = &B.SepChk
end-SELECT
  do Get-Deduction-Balances
end-procedure


!**********************************************************************
begin-procedure Get-Garnishment-Detail
!**********************************************************************

  let #YTD = 0

begin-SELECT
GR.GARNID, GR.DEDUCT_AMT
GR.DEDUCT_GARN_AMT, GR.DEDUCT_CMPNY_FEE, GR.DEDUCT_PAYEE_FEE

     let $GarnID = RTRIM(&GR.Garnid, ' ')
     do Get-Garn-Type
     let $FieldName = 'GARN_TYPE'
     do Read-Translate-Table
     let $GarnName = Rtrim($XlatShortName,' ')

     move #PostTaxDedsRow to #i
     do Get-ETDarray-Entry-Count

     if &GR.Deduct_Amt = &GR.Deduct_Garn_Amt
        let #GarnAmt = &GR.Deduct_Amt
        let $Name = $DeductionAbbrv || '-' || $GarnName
        let $Code = 'GG' || $GarnID || &N.Ded_Class
        move #PostTaxDedsRow to #i
        move #GarnAmt to #Cur
        do Update-ETDarray

     else

        if #ecnt > 8
           let #GarnAmt = &GR.Deduct_Amt
           let $Name = $DeductionAbbrv || '-' || $GarnName || ' (Total)'
           let $Code = 'GG' || $GarnID || &N.Ded_Class
           move #PostTaxDedsRow to #i
           move #GarnAmt to #Cur
           do Update-ETDarray

        else

           do Check-For-Garn-YTD-Balances

           if &GR.Deduct_Garn_Amt <> 0 or $CGBE.Ded_Garn_YTD = 'Y'
              let #Cur = &GR.Deduct_Garn_Amt
              let $Name = $DeductionAbbrv || $GarnName || ' (Amount)'
              let $Code = 'GG' || $GarnID || &N.Ded_Class ||'AM'
              move #PostTaxDedsRow to #i
              do Update-ETDarray
           end-if

           if &GR.Deduct_Cmpny_Fee <> 0 or $CGBE.Ded_CFee_YTD = 'Y'
              let #Cur = &GR.Deduct_Cmpny_Fee
              let $Name = $DeductionAbbrv || $GarnName || ' (Co. Fee)'
              let $Code = 'GG' || $GarnID || &N.Ded_Class ||'CF'
              move #PostTaxDedsRow to #i
              do Update-ETDarray
           end-if

           if &GR.Deduct_payee_fee <> 0 or $CGBE.Ded_pfee_YTD = 'Y'
              let #Cur = &GR.Deduct_payee_fee
              let $Name = $DeductionAbbrv || $GarnName || ' (Payee Fee)'
              let $Code = 'GG' || $GarnID || &N.Ded_Class ||'PF'
              move #PostTaxDedsRow to #i
              do Update-ETDarray
           end-if

        end-if
     end-if

FROM PS_PAY_GARNISH GR
WHERE GR.COMPANY = &A.COMPANY
  AND GR.PAYGROUP = &A.PAYGROUP
  AND GR.PAY_END_DT = &A.PAY_END_DT
  AND GR.OFF_CYCLE = &B.OFF_CYCLE
  AND GR.PAGE_NUM = &B.PAGE_NUM
  AND GR.LINE_NUM = &B.LINE_NUM
  AND GR.SEPCHK = &B.SEPCHK
ORDER BY GR.GARNID
end-SELECT
end-procedure


!***********************************************************************
begin-procedure Get-Garn-Type
!***********************************************************************

begin-SELECT
GS.GARN_TYPE

  let $FieldValue = &GS.Garn_Type

FROM PS_GARN_SPEC GS
WHERE GS.EMPLID = &B.EMPLID
  AND GS.COMPANY = &A.COMPANY
  AND GS.GARNID = $Garnid
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Get-Deduction-Balances
!***********************************************************************

  let #Cur = 0

begin-SELECT
NB.PLAN_TYPE,NB.DEDCD,NB.DED_CLASS,NB.DED_YTD

  let $PlanType = &NB.Plan_Type
  let $DedCd = &NB.DEDCD
  do Get-Deduction-Name
  if &DT.Spcl_Process = 'G'
    do Get-Garn-Balances
  else

    let $Code = &NB.Plan_Type || &NB.DedCd || &NB.Ded_Class

    let $PlanType = &NB.Plan_Type
    let $DedCd    = &NB.DedCd
    let $Name = $DeductionName

    evaluate &NB.Ded_Class
      when = 'B'           !Before-tax deduction
        move #PreTaxDedsRow  to #i
      when = 'A'           !After-tax deduction
        move #PostTaxDedsRow to #i
      when = 'N'           !Non-taxable benefit
      when = 'P'
        move #BenefitsRow    to #i
      when = 'T'           !Taxable benefit
        move #BenefitsRow    to #i
        concat '*' with $Name
      when-other
        move #PostTaxDedsRow to #i
    end-evaluate

    move &NB.Ded_YTD to #YTD
    do Update-ETDarray
  end-if

FROM  PS_DEDUCTION_BAL NB
WHERE NB.EMPLID        = &B.EmplID
  AND NB.COMPANY       = &A.Company
  AND NB.BALANCE_ID    = &A1.BALANCE_ID
  AND NB.BALANCE_YEAR  = &A1.BALANCE_YEAR
  AND NB.BALANCE_PERIOD       =
    (SELECT MAX(BALANCE_PERIOD)
       FROM PS_DEDUCTION_BAL
      WHERE EMPLID        = NB.EMPLID
        AND COMPANY       = NB.COMPANY
        AND BALANCE_ID    = NB.BALANCE_ID
        AND BALANCE_YEAR  = NB.BALANCE_YEAR
        AND BENEFIT_RCD_NBR = NB.BENEFIT_RCD_NBR
        AND PLAN_TYPE     = NB.PLAN_TYPE
        AND BENEFIT_PLAN  = NB.BENEFIT_PLAN
        AND DEDCD         = NB.DEDCD
        AND DED_CLASS     = NB.DED_CLASS
        AND BALANCE_PERIOD     <= &A1.BALANCE_PERIOD)
end-SELECT

end-procedure


!**********************************************************************
begin-procedure Get-Garn-Balances
!**********************************************************************

  let #Cur = 0

begin-SELECT
NG.GARNID, NG.DED_CLASS, NG.DED_YTD
NG.BALANCE_PERIOD, NG.DED_GARN_YTD, NG.DED_CFEE_YTD, NG.DED_PFEE_YTD

     let $GarnID = RTRIM(&NG.Garnid, ' ')
     do Get-Garn-Type
     let $FieldName = 'GARN_TYPE'
     do Read-Translate-Table
     let $GarnName = Rtrim($XlatShortName,' ')

     if &NG.Ded_YTD = &NG.Ded_Garn_YTD
        let #YTD  = &NG.Ded_YTD
        let $Name = $DeductionAbbrv || '-' || $GarnName
        let $Code = 'GG' || $GarnID || &NG.Ded_Class
        move #PostTaxDedsRow to #i
        do Update-ETDarray

     else
        let $Garn_Code_Tot  = 'GG' || $GarnID || &NG.Ded_Class
        let $Garn_Code_Amt  = 'GG' || $GarnID || &NG.Ded_Class ||'AM'
        let $Garn_Code_CFee = 'GG' || $GarnID || &NG.Ded_Class ||'CF'
        let $Garn_Code_Pfee = 'GG' || $GarnID || &NG.Ded_Class ||'PF'

        move #PostTaxDedsRow to #i
        do Check-ETDarray-Garn-Code

        If $Garn_Amt  = 'Y' or $Garn_Tot  = 'Y' or $Garn_CFee = 'Y' or $Garn_Pfee = 'Y'

           If $Garn_Tot  = 'Y'
              let #YTD  = &NG.Ded_YTD
              let $Name = $DeductionAbbrv || '-' || $GarnName || ' (Total)'
              let $Code = 'GG' || $GarnID || &NG.Ded_Class
              move #PostTaxDedsRow to #i
              do Update-ETDarray
           else
              if &NG.Ded_Garn_YTD <> 0
                 let #YTD  = &NG.Ded_Garn_YTD
                 let $Name = $DeductionAbbrv || $GarnName || ' (Amount)'
                 let $Code = 'GG' || $GarnID || &NG.Ded_Class ||'AM'
                 move #PostTaxDedsRow to #i
                 do Update-ETDarray
              end-if
              if &NG.Ded_CFee_YTD <> 0
                 let #YTD  = &NG.Ded_CFee_YTD
                 let $Name = $DeductionAbbrv || $GarnName || ' (Co. Fee)'
                 let $Code = 'GG' || $GarnID || &NG.Ded_Class ||'CF'
                 move #PostTaxDedsRow to #i
                 do Update-ETDarray
              end-if
              if &NG.Ded_PFee_YTD <> 0
                 let #YTD  = &NG.Ded_Pfee_YTD
                 let $Name = $DeductionAbbrv || $GarnName || ' (Payee Fee)'
                 let $Code = 'GG' || $GarnID || &NG.Ded_Class ||'PF'
                 move #PostTaxDedsRow to #i
                 do Update-ETDarray
               end-if
           end-if

        else

           move #PostTaxDedsRow to #i
           do Get-ETDarray-Entry-Count

           if #ecnt > 8
              let #YTD  = &NG.Ded_YTD
              let $Name = $DeductionAbbrv || '-' || $GarnName || ' (Total)'
              let $Code = 'GG' || $GarnID || &NG.Ded_Class
              move #PostTaxDedsRow to #i
              do Update-ETDarray
           else
              if &NG.Ded_Garn_YTD <> 0
                 let #YTD  = &NG.Ded_Garn_YTD
                 let $Name = $DeductionAbbrv || $GarnName || ' (Amount)'
                 let $Code = 'GG' || $GarnID || &NG.Ded_Class ||'AM'
                 move #PostTaxDedsRow to #i
                 do Update-ETDarray
              end-if
              if &NG.Ded_CFee_YTD <> 0
                 let #YTD  = &NG.Ded_CFee_YTD
                 let $Name = $DeductionAbbrv || $GarnName || ' (Co. Fee)'
                 let $Code = 'GG' || $GarnID || &NG.Ded_Class ||'CF'
                 move #PostTaxDedsRow to #i
                 do Update-ETDarray
              end-if
              if &NG.Ded_PFee_YTD <> 0
                 let #YTD  = &NG.Ded_Pfee_YTD
                 let $Name = $DeductionAbbrv || $GarnName || ' (Payee Fee)'
                 let $Code = 'GG' || $GarnID || &NG.Ded_Class ||'PF'
                 move #PostTaxDedsRow to #i
                 do Update-ETDarray
               end-if
           end-if

        end-if

     end-if

FROM  PS_GARN_BALANCE NG
WHERE NG.EMPLID = &B.EMPLID
  AND NG.COMPANY = &A.COMPANY
  AND NG.BALANCE_ID = &A1.BALANCE_ID
  AND NG.BALANCE_YEAR = &A1.BALANCE_YEAR
  AND NG.BALANCE_PERIOD =
      (SELECT MAX(BALANCE_PERIOD)
         FROM PS_GARN_BALANCE
        WHERE EMPLID = NG.EMPLID
          AND COMPANY = NG.COMPANY
          AND BALANCE_ID = NG.BALANCE_ID
          AND BALANCE_YEAR = NG.BALANCE_YEAR
          AND PLAN_TYPE = NG.PLAN_TYPE
          AND BENEFIT_PLAN = NG.BENEFIT_PLAN
          AND DEDCD = NG.DEDCD
          AND DED_CLASS = NG.DED_CLASS
          AND GARNID = NG.GARNID
          AND BALANCE_PERIOD <= &A1.BALANCE_PERIOD)
 ORDER BY NG.GARNID
end-SELECT

end-procedure

!**********************************************************************
begin-procedure Check-For-Garn-YTD-Balances
!**********************************************************************

     let $CGBE.Ded_Garn_YTD = 'N'
     let $CGBE.Ded_CFee_YTD = 'N'
     let $CGBE.Ded_pfee_YTD = 'N'

begin-SELECT
CGBE.DED_GARN_YTD, CGBE.DED_CFEE_YTD, CGBE.DED_PFEE_YTD

     if &CGBE.Ded_Garn_YTD <> 0
        let $CGBE.Ded_Garn_YTD = 'Y'
     end-if
     if &CGBE.Ded_CFee_YTD <> 0
        let $CGBE.Ded_CFee_YTD = 'Y'
     end-if
     if &CGBE.Ded_pfee_YTD <> 0
        let $CGBE.Ded_pfee_YTD = 'Y'
     end-if

FROM  PS_GARN_BALANCE CGBE
WHERE CGBE.EMPLID = &B.EMPLID
  AND CGBE.COMPANY = &A.COMPANY
  AND CGBE.BALANCE_ID = &A1.BALANCE_ID
  AND CGBE.BALANCE_YEAR = &A1.BALANCE_YEAR
  AND CGBE.BALANCE_PERIOD =
      (SELECT MAX(BALANCE_PERIOD)
         FROM PS_GARN_BALANCE
        WHERE EMPLID = CGBE.EMPLID
          AND COMPANY = CGBE.COMPANY
          AND BALANCE_ID = CGBE.BALANCE_ID
          AND BALANCE_YEAR = CGBE.BALANCE_YEAR
          AND PLAN_TYPE = CGBE.PLAN_TYPE
          AND BENEFIT_PLAN = CGBE.BENEFIT_PLAN
          AND DEDCD = CGBE.DEDCD
          AND DED_CLASS = CGBE.DED_CLASS
          AND GARNID = CGBE.GARNID
          AND BALANCE_PERIOD <= &A1.BALANCE_PERIOD)
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Get-Net-Pay-Distribution
!***********************************************************************

begin-SELECT
PD.PAYCHECK_NBR,PD.ACCOUNT_TYPE,PD.DEPOSIT_AMOUNT,PD.ACCOUNT_NUM

  let $FieldName  = 'ACCOUNT_TYPE'
  let $FieldValue = &PD.Account_Type
  do Read-Translate-Table

  if &PD.Account_Type = '$'             !check
    add &PD.Deposit_Amount to #CheckNetPay
    move $XLatShortName    to $chk_issued
  else
    move &PD.PAYCHECK_NBR  to #Advice#
    add &PD.Deposit_Amount to #DepositNetPay
    move &PD.ACCOUNT_NUM   to $deposit_acct_nbr
    if &PD.Account_Type = 'C'           !checking
        move $XLatShortName    to $adv_checkings
        add &PD.Deposit_Amount to #Depositcheckings
        add 1 to #chkg_ctr
        if #chkg_ctr = 1
           move &PD.ACCOUNT_NUM     to $deposit_acct_nbr_chckngs
        else
           move ''                  to $deposit_acct_nbr_chckngs
        end-if
    else
       if &PD.Account_Type = 'S'        !savings
           move $XLatShortName    to $adv_savings
           add &PD.Deposit_Amount to #Depositsavings
           add 1 to #svng_ctr
           if #svng_ctr = 1
              move &PD.ACCOUNT_NUM to $deposit_acct_nbr_savings
           else
              move ''              to $deposit_acct_nbr_savings
           end-if
       end-if
    end-if
  end-if

FROM  PS_PAY_DISTRIBUTN PD
WHERE PD.COMPANY    = &A.Company
  AND PD.PAYGROUP   = &A.PayGroup
  AND PD.PAY_END_DT = &A.Pay_End_Dt
  AND PD.OFF_CYCLE  = &B.Off_Cycle
  AND PD.PAGE_NUM      = &B.PAGE_NUM
  AND PD.LINE_NUM      = &B.LINE_NUM
  AND PD.SEPCHK     = &B.SepChk
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Vacation-Balances
!***********************************************************************

  move 0  to  #VacStartBal
  move 0  to  #VacEarned
  move 0  to  #VacBought
  move 0  to  #VacTaken
  move 0  to  #VacSold
  move 0  to  #VacAdjust
  move 0  to  #VacEndBal

  move 0  to  #SickStartBal
  move 0  to  #SickEarned
  move 0  to  #SickBought
  move 0  to  #SickTaken
  move 0  to  #SickSold
  move 0  to  #SickAdjust
  move 0  to  #SickEndBal

  move 0  to  #CompStartBal                         !    6/10/2009  ABeecham   UA Modifications  UA_PY_0001
  move 0  to  #CompEarned                           !    6/10/2009  Abeecham   UA Modifications  UA_PY_0001
  move 0  to  #CompBought                           !    6/10/2009  Abeecham   UA Modifications  UA_PY_0001
  move 0  to  #CompTaken                            !    6/10/2009  Abeecham   UA Modifications  UA_PY_0001
  move 0  to  #CompSold                             !    6/10/2009  Abeecham   UA Modifications  UA_PY_0001
  move 0  to  #CompAdjust                           !    6/10/2009  Abeecham   UA Modifications  UA_PY_0001
  move 0  to  #CompEndBal                           !    6/10/2009  Abeecham   UA Modifications  UA_PY_0001
begin-SELECT
V.HRS_CARRYOVER,V.HRS_EARNED_YTD,V.HRS_TAKEN_YTD
V.HRS_ADJUST_YTD,V.HRS_BOUGHT_YTD,V.HRS_SOLD_YTD
V.HRS_TAKEN_UNPROC,V.HRS_ADJUST_UNPROC
V.HRS_BOUGHT_UNPROC,V.HRS_SOLD_UNPROC
V.ACCRUAL_PROC_DT,V.PLAN_TYPE

  if &V.PLAN_TYPE        = '50'
  let #SickStartBal = #SickStartBal + &V.Hrs_Carryover
  let #SickEarned   = #SickEarned + &V.Hrs_Earned_YTD
  let #SickBought   = #SickBought + &V.Hrs_Bought_YTD + &V.Hrs_Bought_Unproc
  let #SickTaken    = #SickTaken + &V.Hrs_Taken_YTD  + &V.Hrs_Taken_Unproc
  let #SickSold     = #SickSold + &V.Hrs_Sold_YTD   + &V.Hrs_Sold_Unproc
  let #SickAdjust   = #SickAdjust + &V.Hrs_Adjust_YTD + &V.Hrs_Adjust_Unproc
  let #SickEndBal   = #SickStartBal + #SickEarned + #SickBought
                 - #SickTaken - #SickSold + #SickAdjust
   else
     if &V.PLAN_TYPE        = '51'                                                   !    6/10/2009  Abeecham   UA Modifications  UA_PY_0001
        let #VacStartBal = #VacStartBal + &V.Hrs_Carryover
        let #VacEarned   = #VacEarned + &V.Hrs_Earned_YTD
        let #VacBought   = #VacBought + &V.Hrs_Bought_YTD + &V.Hrs_Bought_Unproc
        let #VacTaken    = #VacTaken + &V.Hrs_Taken_YTD  + &V.Hrs_Taken_Unproc
        let #VacSold     = #VacSold + &V.Hrs_Sold_YTD   + &V.Hrs_Sold_Unproc
        let #VacAdjust   = #VacAdjust + &V.Hrs_Adjust_YTD + &V.Hrs_Adjust_Unproc
        let #VacEndBal   = #VacStartBal + #VacEarned + #VacBought
                      - #VacTaken - #VacSold + #VacAdjust
     else                                                                            !    6/10/2009  ABEECHAM   UA Modification   UA_PY_0001
        let #CompStartBal = #CompStartBal + &V.Hrs_Carryover                         !    6/10/2009  ABEECHAM   UA Modification   UA_PY_0001
        let #CompEarned   = #CompEarned + &V.Hrs_Earned_YTD                          !    6/10/2009  ABEECHAM   UA Modification   UA_PY_0001
        let #CompBought   = #CompBought + &V.Hrs_Bought_YTD + &V.Hrs_Bought_Unproc   !    6/10/2009  ABEECHAM   UA Modification   UA_PY_0001
        let #CompTaken    = #CompTaken + &V.Hrs_Taken_YTD  + &V.Hrs_Taken_Unproc     !    6/10/2009  ABEECHAM   UA Modification   UA_PY_0001
        let #CompSold     = #CompSold + &V.Hrs_Sold_YTD   + &V.Hrs_Sold_Unproc       !    6/10/2009  ABEECHAM   UA Modification   UA_PY_0001
        let #CompAdjust   = #CompAdjust + &V.Hrs_Adjust_YTD + &V.Hrs_Adjust_Unproc   !    6/10/2009  ABEECHAM   UA Modification   UA_PY_0001
        let #CompEndBal   = #CompStartBal + #CompEarned + #CompBought                !    6/10/2009  ABEECHAM   UA Modification   UA_PY_0001
                      - #CompTaken - #CompSold + #CompAdjust                         !    6/10/2009  ABEECHAM   UA Modification   UA_PY_0001
     end-if                                                                          !    6/10/2009  ABEECHAM   UA Modification   UA_PY_0001
   end-if

FROM  PS_LEAVE_ACCRUAL V
WHERE V.EMPLID           = &B.Emplid
  AND V.COMPANY          = &A.Company
  AND (V.PLAN_TYPE        = '51'                 !Vacation
    OR V.PLAN_TYPE        = '5Z'                 !Comp Time                       !    6/10/2009  ABeecham   UA Modifications  UA_PY_0001
    OR V.PLAN_TYPE        = '50')                !Sick
  AND V.ACCRUAL_PROC_DT =
      (SELECT MAX(V1.ACCRUAL_PROC_DT)
         FROM PS_LEAVE_ACCRUAL V1
        WHERE V1.EMPLID = V.EMPLID
          AND V1.EMPL_RCD = V.EMPL_RCD
          AND V1.COMPANY = V.COMPANY
          AND V1.PLAN_TYPE = V.PLAN_TYPE
          AND (V1.ACCRUAL_PROC_DT <= &B.Check_Dt
                OR V1.ACCRUAL_PROC_DT IS NULL))
ORDER BY V.ACCRUAL_PROC_DT DESC
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Reset-Variables
!***********************************************************************

!reset employee tax data
  move ' ' to $FWTMarStatus
  move ' ' to $SWTMarStatus

!reset current and YTD amounts
  move 0 to #Cur
  move 0 to #YTD
  move 0 to #Maxrow
  
!reset ETDarray
  move 0 to #i
  while #i <= #lastRow
    move 0 to #j
    while #j <= #MaxCol
      put ' ' ' ' '' '' ' ' 0 0 'N' 0 into ETDarray(#i) Code(#j) Name(#j)  -
         EarnBegin(#j) EarnEnd(#j) CmpRtCd(#j) Cur(#j) YTD(#j) NYind (#j) NYdrate(#j)

      add 1 to #j
    end-while
    add 1 to #i
  end-while

!reset vacation totals
  move 0 to #VacStartBal
  move 0 to #VacEarned
  move 0 to #VacBought
  move 0 to #VacTaken
  move 0 to #VacSold
  move 0 to #VacAdjust
  move 0 to #VacEndBal

!reset non-crossfoot message switch
  move 'N' to $NeedXfootMsg

!reset current and YTD recalc totals
  move 0 to #HourCurTotal
  move 0 to #HourYTDTotal
  move 0 to #PreTaxDedCurTotal
  move 0 to #PreTaxDedYTDTotal
  move 0 to #PostTaxDedCurTotal
  move 0 to #PostTaxDedYTDTotal
  move 0 to #FedTaxGrossCur
  move 0 to #FedTaxGrossYTD

!reset net pay distribution totals
  move 0 to #CheckNetPay
  move 0 to #DepositNetPay
  move 0 to #Depositcheckings
  move 0 to #Depositsavings

  do Delete-PY-Earns-Wrk

end-procedure


!***********************************************************************
begin-procedure Update-ETDarray-Current-Earnings
!***********************************************************************

  if #Hours <> 0 or #Earns <> 0

    move #RatesRow to #i
    move 0 to #j
    while #j <= #lastCol
      get $jCode $jEarnBegin $jEarnEnd $jCmpRtCd #jRate $NY_ind #NY_drate  -
        from ETDarray(#i) Code(#j) EarnBegin(#j) EarnEnd(#j) CmpRtCd(#j) Cur(#j) NYind (#j) NYdrate(#j)
      if rtrim($jCode,' ') = ''                 !if array entry is null
        break                                   !exit the "while"
      else
        do Format-DateTime($EarnBegin, $EarnBegin_tmp, {DEFCMP}, '', '')
        do Format-DateTime($jEarnBegin, $jEarnBegin_tmp, {DEFCMP}, '', '')
        do Format-DateTime($EarnEnd, $EarnEnd_tmp, {DEFCMP}, '', '')
        do Format-DateTime($jEarnEnd, $jEarnEnd_tmp, {DEFCMP}, '', '')
        do Format-DateTime(&A.PAY_BEGIN_DT, $PayBeginDt_tmp, {DEFCMP}, '', '')
        if $Code = $jCode and $CmpRtCd = $jCmpRtCd and #Rate = #jRate    !if array entry match
                 and (($EarnBegin_tmp = $jEarnBegin_tmp
                        and $EarnEnd_tmp = $jEarnEnd_tmp)
                     or ($jEarnEnd_tmp <> ''
                        and $EarnEnd_tmp <> ''
                        and $EarnEnd_tmp < $PayBeginDt_tmp))

          if $jEarnEnd_tmp <> ''
                        and $EarnEnd_tmp <> ''
                        and $EarnEnd_tmp < $PayBeginDt_tmp
            if $EarnBegin_tmp <> ''
              if $EarnBegin_tmp < $jEarnBegin_tmp
                let $EarnEnd = $jEarnEnd
              else
                let $EarnBegin = $jEarnBegin
              end-if
            end-if
            if $EarnEnd_tmp <> ''
               if $EarnEnd_tmp > $jEarnEnd_tmp
                let $EarnBegin = $jEarnBegin
               else
                let $EarnEnd = $jEarnEnd
               end-if
            end-if
          end-if
          break                                                          !exit the "while"
        else
          if #j = #lastCol
            move $lastCode to $Code
            move $lastName1 to $Name
            move $lastCmpRtCd to $CmpRtCd
            move #lastRate to #Rate
            move $lastEarnBegin to $EarnBegin
            move $lastEarnEnd to $EarnEnd
            move $lastNY_ind  to $NY_ind
            move #lastNY_drate to #NY_drate
            break                               !exit the "while"
          end-if
        end-if
      end-if
      add 1 to #j
    end-while

    while #i <= #EarnsRow
      evaluate #i
        when = #RatesRow
          move #Rate  to #Cur
        when = #HoursRow
          move #Hours to #Cur
        when = #EarnsRow
          move #Earns to #Cur
        when-other
          move 0      to #Cur
      end-evaluate

      put $Code $Name $EarnBegin $EarnEnd $CmpRtCd $NY_ind #NY_drate -
        into ETDarray(#i) Code(#j) Name(#j) EarnBegin(#j) EarnEnd(#j) CmpRtCd(#j) NYind (#j) NYdrate(#j)
      if #i = #RatesRow
        put #Cur     into ETDarray(#i) Cur(#j)
      else
        array-add #Cur to ETDarray(#i) Cur(#j)
      end-if
      add 1 to #i
    end-while

  end-if
end-procedure


!***********************************************************************
begin-procedure Update-ETDarray-NY
!***********************************************************************

  move #RatesRow to #i
  move 0 to #j

  while #j < #lastCol

    get $jCode #jCur from ETDarray(#i) Code(#j) Cur(#j)
    if rtrim($jCode,' ') = ''                   !if array entry is null
      break                                     !exit the "while"
    else
      if $Code = $jCode                         !if array entry match
         if #Rate = #jCur                       !and the rate matches
          let #NYRate = #Earns / #Hours
          put 'Y' #NYRate into ETDarray(#i) NYind(#j) NYdrate(#j)
         end-if
      end-if
    end-if
    add 1 to #j

  end-while



end-procedure

!***********************************************************************
begin-procedure Update-ETDarray
!***********************************************************************

  move 0 to #j
  while #j <= #lastCol

    get $jCode from ETDarray(#i) Code(#j)
    if rtrim($jCode,' ') = ''                   !if array entry is null
      put $Code $Name into ETDarray(#i) Code(#j) Name(#j)
      break                                     !exit the "while"
    else
      if $Code = $jCode                         !if array entry match
        break                                   !exit the "while"
      else
        if #j = #lastCol
          put $lastCode $lastName1 into ETDarray(#i) Code(#j) Name(#j)
          break                                 !exit the "while"
        end-if
      end-if
    end-if
    add 1 to #j

  end-while

  array-add #Cur #YTD to ETDarray(#i) Cur(#j) YTD(#j)

end-procedure


!***********************************************************************
begin-procedure Read-ETDarray
!***********************************************************************

  move 0 to #i
  while #i <= #lastRow
    get $Name $EarnBegin $EarnEnd $CmpRtCd #Cur #YTD from -
        ETDarray(#i) Name(#j) EarnBegin(#j) EarnEnd(#j) CmpRtCd(#j) Cur(#j) YTD(#j)
    evaluate #i
      when = #RatesRow
        move $Name to $EarnName
        move $CmpRtCd to $CompCode
        move #Cur  to #EarnRate
        move $EarnBegin to $Prt_EarnBegin
        move $EarnEnd   to $Prt_EarnEnd
      when = #HoursRow
        move #Cur  to #HourCur
        move #YTD  to #HourYTD
        add  #Cur  to #HourCurTotal
        add  #YTD  to #HourYTDTotal
      when = #EarnsRow
        move #Cur  to #EarnCur
        move #YTD  to #EarnYTD
      when = #PreTaxDedsRow
        move $Name to $PreTaxDedName
        move #Cur  to #PreTaxDedCur
        move #YTD  to #PreTaxDedYTD
        add  #Cur  to #PreTaxDedCurTotal
        add  #YTD  to #PreTaxDedYTDTotal
      when = #TaxesRow
        move $Name to $TaxName
        move #Cur  to #TaxCur
        move #YTD  to #TaxYTD
      when = #PostTaxDedsRow
        move $Name to $PostTaxDedName
        move #Cur  to #PostTaxDedCur
        move #YTD  to #PostTaxDedYTD
        add  #Cur  to #PostTaxDedCurTotal
        add  #YTD  to #PostTaxDedYTDTotal
      when = #BenefitsRow
        move $Name to $BenefitName
        move #Cur  to #BenefitCur
        move #YTD  to #BenefitYTD
    end-evaluate
    add 1 to #i
  end-while
end-procedure


!**********************************************************************
begin-procedure Print-Statement
!**********************************************************************

!print the pay period information

  let #row = 1

  columns 58

  print $PsFontTimes7 ()  code-printer={PRINTER_CHQADV}                      ! 09/2009 furashg UA Modifications UA_PY_0001

  graphic (#row,1,69) box 3 10

  columns 3 12 59 72 102 112                                                 ! 7/7/09  furashg UA Modifications UA_PY_0001

  print-image ua_vert_logo (#row,1)                        ! 7/7/09  furashg UA Modifications UA_PY_0001

  do Alter-Printer-ChqAdv                        ! 09/2009 furashg UA Modifications UA_PY_0001
  next-column                                     ! 7/7/09  furashg UA Modifications UA_PY_0001
  print $CompanyName            (#row,1) bold

  do Alter-Printer-Statement

  !   let $payroll_line_1 = {PAYROLL_ADDR_1} || ' - ' || {PAYROLL_ADDR_2}                       ! 09/2009 furashg UA Modifications UA_PY_0001
  !   print $payroll_line_1          (+1,1)                                                     ! 09/2009 furashg UA Modifications UA_PY_0001
  !   print {PAYROLL_ADDR_3}        (+1,1)                                                     ! 09/2009 furashg UA Modifications UA_PY_0001
  !   print {PAYROLL_ADDR_4}        (+1,1)                                                     ! 09/2009 furashg UA Modifications UA_PY_0001
  print $CompanyAddrLine1          (+1,1)                                                     ! 09/2009 furashg UA Modifications UA_PY_0001
  print $CompanyAddrLine2       (+1,1)                                                     ! 09/2009 furashg UA Modifications UA_PY_0001
  print $CompanyAddrLine3        (+1,1)                                                     ! 09/2009 furashg UA Modifications UA_PY_0001

  next-column
  print 'Pay Group:'            (#row,1)
  print 'Pay Begin Date:'       (+1,1)
  print 'Pay End Date:'         (+1,1)

  next-column
  let $out = $PayGroup || '-' || $PayGroupName
  print $out                    (#row,1)

  do Format-DateTime(&A.Pay_Begin_Dt, $out, {DEFDATE}, '', '')
  print $out                    (+1,1)

  do Format-DateTime(&A.Pay_End_Dt, $out, {DEFDATE}, '', '')
  print $out                    (+1,1)
!
  let $PayShtSrc = ''
  evaluate &B.Pay_Sheet_Src
    when = 'O'
      print '- On-line Check -' (0,13)
      let $PayShtSrc = '** On-line Check **'
      break
    when = 'K'
      print '- Final Check -'   (0,13)
      let $PayShtSrc = '** Final Check **'
      break
    when = 'L'
      print '- On-Line Final -' (0,13)
      let $PayShtSrc = '** On-Line Final **'
      break
  end-evaluate

  next-column
  print 'Business Unit:'        (#row,1)
  print 'Check #:'              (+1,1)
  print 'Check Date:'           (+1,1)

  next-column
  print $Bus_unit                  (#row,1)

  do Format-Number(&B.PAYCHECK_NBR, $out, '099999999999999')
  print $out                       (+1,1) bold

  do Format-DateTime(&B.Check_Dt, $out, {DEFDATE}, '', '')
  print $out                       (+1,1)

!print the employee information

  let #row = 5

  columns 1 43 85

  !graphic (#row,1,42) box 5 10 ! 7/7/09  furashg UA Modifications UA_PY_0001
  graphic (#row,1,42) box 7 10 ! 7/7/09  furashg UA Modifications UA_PY_0001
  next-column
  !graphic (#row,1,42) box 5 10 ! 7/7/09  furashg UA Modifications UA_PY_0001
  graphic (#row,1,42) box 7 10 ! 7/7/09  furashg UA Modifications UA_PY_0001
  next-column
  graphic (#row,1,42) box 1 10
  !graphic (+1,1,42)   box 4 10 ! 7/7/09  furashg UA Modifications UA_PY_0001
  graphic (+1,1,42)   box 6 10 ! 7/7/09  furashg UA Modifications UA_PY_0001


  columns 2 44 54 86 98 108

  ! == BEGIN  : 7/2009 FurashG UA Modifications UA_PY_0022 ==============
  print $HomeName               (#row,1) bold
  IF $mt_setid = 'UAZPY' AND $mt_location <> 'HOME'
    graphic (#row,24,14) box 3 10                   ! 7/7/09  furashg UA Modifications UA_PY_0001
  END-IF                                             ! 7/7/09  furashg UA Modifications UA_PY_0001
  print $HomeAddrLine1          (+1,1)
  IF $mt_setid = 'UAZPY'                            ! 7/7/09  furashg UA Modifications UA_PY_0001
    LET $PrintLine = ' ** ' || $mt_location || ' **'
    print $PrintLine (, 25) bold                    ! 7/7/09  furashg UA Modifications UA_PY_0001
  END-IF                                             ! 7/7/09  furashg UA Modifications UA_PY_0001
  print $HomeAddrLine2          (+1,1)
  print $HomeAddrLine3          (+1,1)
  ! == BEGIN  : 7/2009 FurashG UA Modifications UA_PY_0022 ==============

  next-column
  print 'Employee ID:'          (#row,1)
  print 'Department:'           (+1,1)
  print 'Location:'             (+1,1)
  print 'Job Title:'            (+1,1)
  print 'Pay Rate:'             (+1,1)

  next-column
  print &B.EmplID               (#row,1)
  let $out = $DeptID || '-' || $DeptName
  print $out                    (+1,1)
  print $LocationName           (+1,1)
  print $JobTitle               (+1,1)

  if &FQ.FREQUENCY_TYPE     = 'H'
     let $Comp_freq_format_mask =  '$$$,$$$,$$$,$$9.999999'
  else
     let $Comp_freq_format_mask =  '$$$,$$$,$$$,$$9.99'
  end-if

  let $out =
    ltrim(edit(&J.Comprate,$Comp_freq_format_mask),' ') || ' ' || $CompFrequency
  print $out                    (+1,1)

  next-column
  print 'TAX DATA:'             (#row,1)
  print 'Marital Status:'       (+1,1)
  print 'Allowances:'           (+1,1)
  !PRINT 'Addl. Pct.:'            (+1,1)
  print 'Addl. Amt.:'           (+1,1)
  print 'AZ Wthold. %:'          (+1,1) ! 7/7/09  furashg UA Modifications UA_PY_0001
  PRINT 'FICA %:'                (+1,1) ! 7/7/09  furashg UA Modifications UA_PY_0001

  next-column
  print 'Federal'               (#row,1)
  if &FT.SPECIAL_FWT_STATUS = 'G' and
     &FT.FWT_Addl_Pct = 0 and
     &FT.FWT_Addl_Amt = 0

      print $FWTStatus           (+1,1)
      print ' '                  (+1,1)
  else
      print $FWTMarStatus           (+1,1)
      let   $out = ltrim(edit(&FT.FWT_Allowances,'999'),' ')
      print $out                    (+1,1)
  end-if

  !let   $out = ltrim(edit(&FT.FWT_Addl_Pct,'b9.999'),' ')
  !print $out                    (+1,1)

  let   $out = ltrim(edit(&FT.FWT_Addl_Amt,'b9,999.99'),' ')
  print $out                    (+1,1)

  LET    $out = $fica_total_pct          ! 7/7/09  furashg UA Modifications UA_PY_0001
  PRINT  $out                    (+2,1)  ! 7/7/09  furashg UA Modifications UA_PY_0001

  next-column

  let $ResidentState = rtrim($ST_State, ' ') || ' State'
  print $ResidentState          (#row,1)

  if $ST.SPECIAL_SWT_STATUS = 'G' and
     #ST_SWT_Addl_Pct = 0 and
     #ST_SWT_Addl_Amt = 0

      print $SWTStatus           (+1,1)
      print ' '                  (+1,1)
  else
      print $SWTMarStatus           (+1,1)
      let   $out = ltrim(edit(#ST_SWT_Allowances,'999'),' ')
      print $out                    (+1,1)

      if #ST_SWT_Addl_Allownces > 0
        let   $out = '+' || ltrim(edit(#ST_SWT_Addl_Allownces,'999'),' ')
        print $out                  ()
      end-if
  end-if

  !let   $out = ltrim(edit(#ST_SWT_Addl_Pct,'b9.999'),' ')
  !print $out                    (+1,1)

  let   $out = ltrim(edit(#ST_SWT_Addl_Amt,'b9,999.99'),' ')
  print $out                    (+1,1)

  let   $out = ltrim(edit(#ST_PERCENT_OF_FWT,'90.99'),' ') ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #ST_PERCENT_OF_FWT      (+1,1) ! 7/7/09  furashg UA Modifications UA_PY_0001

!print the ETD detail information

  !let #row1 = 11                        ! 7/7/09  furashg UA Modifications UA_PY_0001
  let #row1 = 12                        ! 7/7/09  furashg UA Modifications UA_PY_0001
  let #row2 = 29                        ! 7/7/09  furashg UA Modifications UA_PY_0001

  columns 1 85 1 43 85

  graphic (#row1,1,84) box  1 10 12
  graphic (#row1,,84)  box  1 10
  graphic (+1,,84)     box  2 10
  graphic (+2,,84)     box 13 10
  graphic (+13,,84)    box  1 10
  next-column
  graphic (#row1,1,42) box  1 10 12
  graphic (#row1,,42)  box  1 10
  graphic (+1,,42)     box  2 10
  graphic (+2,,42)     box 13 10
  graphic (+13,,42)    box  1 10
  next-column
  graphic (#row2,1,42) box  1 10 12
  graphic (#row2,,42)  box  1 10
  graphic (+1,,42)     box  1 10
  graphic (+1,,42)     box 13 10
  graphic (+13,,42)    box  1 10
  next-column
  graphic (#row2,1,42) box  1 10 12
  graphic (#row2,,42)  box  1 10
  graphic (+1,,42)     box  1 10
  graphic (+1,,42)     box 13 10
  graphic (+13,,42)    box  1 10
  next-column
  graphic (#row2,1,42) box  1 10 12
  graphic (#row2,,42)  box  1 10
  graphic (+1,,42)     box  1 10
  graphic (+1,,42)     box 13 10
  graphic (+13,,42)    box  1 10

  use-column 0
  print 'HOURS AND EARNINGS'    (#row1,28) bold
  print 'TAXES'                 (,98)      bold

  if $Prior_Earns_Found = 'Y'
      if #_prcs_outdest_format = {PS_ODF_LP}
        print '-'                     (+1,12,3) fill
        print 'Prior Period'          (,16)
        print '-'                     (,29,3) fill
        print '-'                     (,34,16) fill
      else
        print '-'                     (+1,12,7) fill
        print 'Prior Period'          (,17)
        print '-'                     (,26,6) fill
        print '-'                     (,34,16) fill
      end-if
  else
      print '-'                     (+1,34,16) fill
  end-if

  print 'Current'               (,45)
  print '-'                     (,52,16)   fill
  print '-'                     (,64,12)   fill
  print 'YTD'                   (,71)
  print '-'                     (,75,10)   fill

  if $Prior_Earns_Found = 'Y'
    if #_prcs_outdest_format = {PS_ODF_LP}
      print 'Descript'              (+1,2)
    else
      print 'Description'           (+1,2)
    end-if
  else
    print 'Description'           (+1,2)
  end-if

  if $Prior_Earns_Found = 'Y'
    print 'Begin Date'            (,12)
    print 'End Date'              (,23)
  end-if

! print 'Code'                  (,25)             ++
  !print 'Rate'                  (,37)            ! 10/28/2009 furashg Remove rate code from statement
  print 'Hours'                 (,45)
  print 'Earnings'              (,55)
  print 'Hours'                 (,66)
  print ' Earnings'             (,75)

  if #_prcs_outdest_format = {PS_ODF_LP}
   print 'Description'           (,87)
  else
   print 'Description'           (,86)
  end-if

  print ' Current'              (,107)
  print ' YTD'                  (,122)

  print 'BEFORE-TAX DEDUCTIONS' (#row2,11) bold
  print 'AFTER-TAX DEDUCTIONS'  (,54)      bold
  print 'EMPLOYER PAID BENEFITS'(,95)      bold
  print 'Description'           (+1,2)
  print ' Current'              (,26)
  print ' YTD'                  (,38)
  print 'Description'           (,44)
  print ' Current'              (,68)
  print ' YTD'                  (,80)
  print 'Description'           (,86)
  print ' Current'              (,110)
  print ' YTD'                  (,122)

  let #row1 = #row1 + 3
  let #row2 = #row2 + 2

  if #_prcs_outdest_format = {PS_ODF_LP}
    columns 2 12 23 33 44 51 64 73  87 106 118  2 24 33  44 66 75  86 108 117
  else
    columns 2 12 23 33 44 51 64 72  86 105 117  2 24 33  44 66 75  86 108 117
  end-if

  let #mode = {MODE_PRINT}                                  ! 10/15/2009 furashg UA_PY_0001 earnings mods
  do output-earnings                                         ! 10/15/2009 furashg UA_PY_0001 earnings mods

  move 0 to #j
  while #j <= {n}
    if #j = {n}                 !totals lines
      move 'Total:'             to $EarnName
      move 0                    to #EarnRate
      move #HourCurTotal        to #HourCur
      move #HourYTDTotal        to #HourYTD
      move &B.Total_Gross       to #EarnCur
      move &Y.Total_Gross_YTD   to #EarnYTD
      move 'Total:'             to $PreTaxDedName
      move #PreTaxDedCurTotal   to #PreTaxDedCur
      move #PreTaxDedYTDTotal   to #PreTaxDedYTD
      move 'Total:'             to $TaxName
      move &B.Total_Taxes       to #TaxCur
      move &Y.Total_Taxes_YTD   to #TaxYTD
      move 'Total:'             to $PostTaxDedName
      move #PostTaxDedCurTotal  to #PostTaxDedCur
      move #PostTaxDedYTDTotal  to #PostTaxDedYTD
      move '* Taxable'          to $BenefitName
      move 0                    to #BenefitCur
      move 0                    to #BenefitYTD
      move ''                   to $Prt_EarnBegin
      move ''                   to $Prt_EarnEnd
    else
      do Read-ETDarray
    end-if


    use-column 9                                                          ! 10/15/2009 furashg UA_PY_0001 earnings mods
    print $TaxName              (#row1,)                                  ! 10/15/2009 furashg UA_PY_0001 earnings mods

    next-column
    if rtrim($TaxName,' ') <> ''
      print #TaxCur             () edit 9,999,990.99mi
      next-column
      print #TaxYTD             () edit 99,999,990.99mi
    else
      next-column
    end-if

    next-column
    print $PreTaxDedName        (#row2,1)
    next-column
    if rtrim($PreTaxDedName,' ') <> ''
      print #PreTaxDedCur       () edit 9,999,990.99mi
      next-column
      print #PreTaxDedYTD       () edit 99,999,990.99mi
    else
      next-column
    end-if

    next-column
    print $PostTaxDedName       ()
    next-column
    if rtrim($PostTaxDedName,' ') <> ''
      print #PostTaxDedCur      () edit 9,999,990.99mi
      next-column
      print #PostTaxDedYTD      () edit 99,999,990.99mi
    else
      next-column
    end-if

    next-column
    print $BenefitName          ()
    next-column
    if rtrim($BenefitName,' ') <> ''
      if #j <= #lastCol         !not totals line
        print #BenefitCur       () edit 9,999,990.99mi
        next-column
        print #BenefitYTD       () edit 99,999,990.99mi
      end-if
    else
      next-column
    end-if

    add 1 to #row1
    add 1 to #row2
    next-column
    add 1 to #j

  end-while

 let #lncnt = {n}

!print the current and YTD summary totals

  let #row = 45  ! 7/7/09  furashg UA Modifications UA_PY_0001

  columns 1

  graphic (#row,1,126) box 1 10 15
  graphic (#row,,126)  box 1 10
  graphic (+1,,126)    box 2 10

  columns 2 24 48 72 94 116

  print ''                      (#row,1)
  print 'Current:'              (+1,1)
  print 'YTD:'                  (+1,1)

  next-column
  print 'TOTAL GROSS'           (#row,-2) bold
  print &B.Total_Gross          (+1,1) edit 999,999,990.99mi
  print &Y.Total_Gross_YTD      (+1,1) edit 999,999,990.99mi

  next-column
  print 'FED TAXABLE GROSS'     (#row,-8) bold
  print #FedTaxGrossCur         (+1,1) edit 999,999,990.99mi
  print #FedTaxGrossYTD         (+1,1) edit 999,999,990.99mi

  next-column
  print ' TOTAL TAXES'          (#row,-3) bold
  print &B.Total_Taxes          (+1,1) edit 99,999,990.99mi
  print &Y.Total_Taxes_YTD      (+1,1) edit 99,999,990.99mi

  next-column
  print 'TOTAL DEDUCTIONS'      (#row,-8) bold
  print &B.Total_Deductions     (+1,1) edit 99,999,990.99mi
  print &Y.Total_Dedns_YTD      (+1,1) edit 99,999,990.99mi

  next-column
  print ' NET PAY'              (#row,+2) bold
  print &B.Net_Pay              (+1,1) edit 999,999,990.99mi
  print &Y.Net_Pay_YTD          (+1,1) edit 999,999,990.99mi

!print the vacation balance totals

  let #row = 48  ! 7/7/09  furashg UA Modifications UA_PY_0001

  columns 1

  graphic (#row,1,53) box  1 10 12 ! 7/7/09  furashg UA Modifications UA_PY_0001
  graphic (#row,,53)  box  1 10 ! 7/7/09  furashg UA Modifications UA_PY_0001
  graphic (+1,,53)    box  6 10 ! 7/7/09  furashg UA Modifications UA_PY_0001
  graphic (+6,,53)    box  1 10 ! 7/7/09  furashg UA Modifications UA_PY_0001

  columns 2 23 34 47 ! 7/7/09  furashg UA Modifications UA_PY_0001

  !print 'PTO HOURS'             (#row,1) bold
  print 'YEAR-TO-DATE'          (#row,1) bold
  print 'Start Balance:'        (+1,1)
  print '+ Earned:'             (+1,1)
  print '+ Bought:'             (+1,1)
  print ' -  Taken:'            (+1,1)
  print ' -  Sold:'             (+1,1)
  print '+ Adjustments:'        (+1,1)
  print 'End Balance:'          (+1,1)

  next-column

  print 'VACATION'              (#row,-4) bold                            ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #VacStartBal            (+1,1) edit 9,990.99mi                     ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #VacEarned              (+1,1) edit b,990.99mi                     ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #VacBought              (+1,1) edit b,990.99mi                     ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #VacTaken               (+1,1) edit b,990.99mi                     ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #VacSold                (+1,1) edit b,990.99mi                     ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #VacAdjust              (+1,1) edit b,990.99mi                     ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #VacEndBal              (+1,1) edit 9,990.99mi                     ! 7/7/09  furashg UA Modifications UA_PY_0001

  next-column
  print 'SICK'                  (#row,+1) bold           ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #SickStartBal           (+1,1) edit 9,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #SickEarned             (+1,1) edit b,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #SickBought             (+1,1) edit b,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #SickTaken              (+1,1) edit b,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #SickSold               (+1,1) edit b,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #SickAdjust             (+1,1) edit b,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #SickEndBal             (+1,1) edit 9,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001

  next-column
  print 'COMP'                  (#row,1) bold         ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #CompStartBal           (+1,1) edit 9,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #CompEarned             (+1,1) edit b,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #CompBought             (+1,1) edit b,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #CompTaken              (+1,1) edit b,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #CompSold               (+1,1) edit b,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #CompAdjust             (+1,1) edit b,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001
  print #CompEndBal             (+1,1) edit 9,990.99mi ! 7/7/09  furashg UA Modifications UA_PY_0001

!print non-crossfoot message

!  if $NeedXfootMsg = 'Y'                                                             ! 10/2009 gfurash UA_PY_0001 modifications
!    let #row = 47                                                                   ! 10/2009 gfurash UA_PY_0001 modifications
!    columns 30                                                                      ! 10/2009 gfurash UA_PY_0001 modifications
!                                                                                    ! 10/2009 gfurash UA_PY_0001 modifications
!    print 'NOTE: Rate * Hours = Earnings unless an hours or earnings'      (#row,1) ! 10/2009 gfurash UA_PY_0001 modifications
!    print 'adjustment is included or Rate is from an FLSA calculation.'    (+1,1)   ! 10/2009 gfurash UA_PY_0001 modifications
!                                                                                    ! 10/2009 gfurash UA_PY_0001 modifications
!  end-if                                                                            ! 10/2009 gfurash UA_PY_0001 modifications

!print the net pay distribution

  !let #row = 47 ! 7/7/09  furashg UA Modifications UA_PY_0001
  let #row = 48 ! 7/7/09  furashg UA Modifications UA_PY_0001

  columns 92

  graphic (#row,1,35) box  1 10 12
  graphic (#row,,35)  box  1 10
  graphic (+1,,35)    box  2 10
  graphic (+2,,35)    box  1 10

  columns 93 116

  print 'NET PAY DISTRIBUTION'  (#row,1) bold

  if #DepositNetPay <> 0
    do Format-Number(#Advice#, $out, '099999999999999')
    let $out = 'Advice #' || $out
    print $out                  (+1,1)
    next-column
    print #DepositNetPay        () edit b99,999,999.99mi
    next-column
  end-if

  if #CheckNetPay <> 0
    do Format-Number(&B.PAYCHECK_NBR, $out, '099999999999999')
    let $out = 'Check #' || $out
    print $out                  (+1,1)
    next-column
    print #CheckNetPay          () edit b99,999,999.99mi
    next-column

  end-if

  !position                      (50,1)    ! 7/7/09  furashg UA Modifications UA_PY_0001
  position                      (52,1)    ! 7/7/09  furashg UA Modifications UA_PY_0001
  print 'Total:'                ()
  next-column
  print &B.Net_Pay              () edit 999,999,990.99mi

!print the check message

  let #row = 56                   ! 7/7/09  furashg UA Modifications UA_PY_0001

  columns 2

  print 'MESSAGE: '             (#row,1) bold
  print $CheckMessage           ()

end-procedure


!***********************************************************************
begin-procedure Print-Check
!***********************************************************************

  do Alter-Printer-ChqAdv

  do Format-Check-Name-Address

!print the company and bank information and the check number

  let #row = 63

  columns 2 9 59 71 110 ! 7/7/09  furashg UA Modifications UA_PY_0001

   print-image ua_vert_logo (#row,1)                       ! 7/7/09  furashg UA Modifications UA_PY_0001

  next-column                                     ! 7/7/09  furashg UA Modifications UA_PY_0001

  print $CompanyName            (#row,1) bold
  ! ** BEGIN MODIFICATION 20130319 FURASHG HCM-3247 **
  !let $line = {PAYROLL_ADDR_1} || ' / ' || {PAYROLL_ADDR_2} ! 09/2009 furashg ua modifications ua_py_0001
  !print $line                    (+1,1)            ! 09/2009 furashg ua modifications ua_py_0001
  !print {PAYROLL_ADDR_3}        (+1,1)            ! 09/2009 furashg ua modifications ua_py_0001
  !print {PAYROLL_ADDR_4}        (+1,1)            ! 09/2009 furashg ua modifications ua_py_0001
  print $CompanyAddrLine1        (+1,1) 
  print $CompanyAddrLine2        (+1,1) 
  print $CompanyAddrLine3        (+1,1)
  ! ** BEGIN MODIFICATION 20130319 FURASHG HCM-3247 **

  next-column

  do Alter-Printer-Statement

  print $BankID                 (#row,1)

  next-column
  if &b.form_id <> 'CHECK'                                      ! 10/14/2009 furashg UA_PY_0001 Warrant Check Mods
    print $BankName               (#row,1) bold
    print $BankAddrLine1          (+1,1)
    print $BankAddrLine2          (+1,1)
    print $BankAddrLine3          (+1,1)
  end-if                                                        ! 10/14/2009 furashg UA_PY_0001 Warrant Check Mods

  do Alter-Printer-ChqAdv

  next-column
  if &b.form_id = 'ODCHK'                                        ! 10/14/2009 furashg UA_PY_0001 Warrant Check Mods
    print 'Check No.'             (#row,1) bold
  else                                                          ! 10/14/2009 furashg UA_PY_0001 Warrant Check Mods
    print 'Warrant No.'              (#row,1) bold              ! 10/14/2009 furashg UA_PY_0001 Warrant Check Mods
  end-if                                                        ! 10/14/2009 furashg UA_PY_0001 Warrant Check Mods
  do Format-Number(&B.PAYCHECK_NBR, $out, '999999999999999')
  let $out = ltrim($out,' ')
! BEGIN MODIFICATION 02/02/2010 GFURASH HCM-449 R03525 - Signature change (modify pay003.sqr)
  print $PsFontTimes11           () code-printer={PRINTER_CHQADV}
  print $out                    (+1,1)   bold
  print $PsFontTimes7           () code-printer={PRINTER_CHQADV}
! END MODIFICATION 02/02/2010 GFURASH HCM-449 R03525 - Signature change (modify pay003.sqr)

!print Check Cashing Location on check

  let #row = 65
  columns 2

  print $LocationChkCashLoc     (#row,1)

!print the check date and numeric amount

  let #row = 68

  columns 64 71 96 110

  print 'Date:'                 (#row,1) bold

  next-column
  do Format-DateTime(&B.Check_Dt, $out, {DEFDATE}, '', '')
  print $out                    (#row,1) bold

  next-column
  print 'Pay Amount:'           (#row,1) bold

  next-column
  do Format-Number(#CheckNetPay, $out, '$,$$$,$$$,$$9.99mi')
  let $out = rpad(ltrim($out,' '),15,'*')
  print $out                    (#row,1) bold

!print the amount in words and the payee information

  let #row = 71

  columns 2 14

  print 'Pay'                   (#row,1) bold

  next-column
  graphic                       (#row,1,112) horz-line 7
  move #CheckNetPay to #NetPay
  do Net-Pay-In-Words           !convert numbers to words
  let $NetInWords = '****' || upper($NetInWords) || '****'
  print $NetInWords             ()

  next-column
  print 'To The'                (+2,1) bold
  print 'Order Of'              (+1,1) bold

  next-column
  print $checkname              (-1, 1) bold
  do print-if-nonblank ($checkaddrline1)
  do print-if-nonblank ($checkaddrline2)
  do print-if-nonblank ($checkaddrline3)
  do print-if-nonblank ($checkaddrline4)

  ! -- start modifications 10/2009 furashg UA_PY_0001 warrant modifications --
  if &b.form_id = 'CHECK'
    columns 2
    do Format-DateTime(&void_dt, $out, {DEFDATE}, '', '')
    let $out = 'Void after ' || $out
    print $out (+2, 1)
    print $PsFontTimes5 () code-printer={PRINTER_CHQADV}
    print 'PAYABLE THROUGH THE STATE SERVICING BANK TO THE STATE TREASURER OF ARIZONA' (+2, 1)
    do Alter-Printer-ChqAdv
  end-if

!print the check signature

  let #row = 78

  columns 84
  if &B.FORM_ID = 'ODCHK'
!*** HCM-1202 08/16/2010 FURASHG START ***
    print $Psfontsigoffchk () code-printer={PRINTER_CHQADV}
    if &B.NET_PAY < 50000
! ** begin modification 10/25/2010 gfurash HCM-1315 ****************************
      print $PsSigOffChk            (78,-2)
!      print $PsSigOffChk            (73,-2)
! ** end modification 10/25/2010 gfurash HCM-1315 ******************************
!      print $PsSigChk                (78,1)
!*** HCM-1202 END ***
      graphic                       (-1,1,42) horz-line 7
    ! on-demand checks over 50K require a 2nd physical signature
    else
      print $Psfontsigoffchk () code-printer={PRINTER_CHQADV}
      print $PsSigChk                (75,1)
      graphic                       (-1,1,42) horz-line 7

      graphic                      (+3,1,42) horz-line 7
      print $PsFontTimes7 () code-printer={PRINTER_CHQADV}
      print 'counter-signature for amounts over $50,000' (+2,1)
    end-if
  else
    let #row = 75
    columns 80
    print-image az_seal (#row,1)
    let #row = 77
    columns  84
    print $PsFontSigStdChk () code-printer={PRINTER_CHQADV}
    print $PsSigChk                (-1,1)
    graphic                       (+1,1,42) horz-line 7
  end-if

  do Alter-Printer-ChqAdv

!print the bank microcode

  let #AccountNum = $AccountNum
  do Format-Number(#AccountNum, $AccountNum, '0000000000')
  if &B.PAYCHECK_NBR > 99999999999
    show 'ERROR: length of paycheck number ' &B.PAYCHECK_NBR ' exceeds space available on check'
    stop quiet
  end-if

  if &b.form_id = 'CHECK'
    if &b.paycheck_nbr > 259999999
      show 'PAY003 not configured for check numbers > 259999999'
      stop quiet
    else
      let #check_num_tmp = &b.paycheck_nbr - 250000000
      do Format-Number(#check_num_tmp, $CheckNum, '0000000')
    end-if
  else
    do Format-Number(&B.PAYCHECK_NBR, $CheckNum, '0000000000')
  end-if

  let #TransitNum = $TransitNum
  do Format-Number(#TransitNum, $TransitNum, '000000000')

  print $PsFontMicr () code-printer={PRINTER_CHQADV}
  if &b.form_id = 'CHECK'
    let #col = 21 - length('C' || ltrim($CheckNum, ' ') || 'C')
    columns #col
  else
    columns 6
  end-if
  let $out =  'C' ||   ltrim($CheckNum,' ')   || 'C' || ' ' || 'A' ||   $TransitNum || 'A' || ' ' || $AccountNum || 'C'
  print $out (84,1)
  ! -- end   modifications 10/2009 furashg UA_PY_0001 warrant modifications --

  new-page
end-procedure

!***********************************************************************
begin-procedure Format-Check-Name-Address
!***********************************************************************

!  ** BEGIN MODIFICATION 10/25/2010 gfurash HCM-1315 ****************************
!  if rtrim(&B.PayCheck_Name,' ') <> ''
    LET $name = $check_name
!    LET $name = &B.PayCheck_Name
    do Rotate-Name
    let $CheckName = upper($Name)
!  end-if
!  ** END MODIFICATION 10/25/2010 gfurash HCM-1315 ******************************

  let $CheckAddrLine3 = ' '
  let $CheckAddrLine4 = ' '
  let $CheckLocation =  ' '

  evaluate &B.PayCheck_Addr_Optn
    when = 'C'  !Mail to Check Address
    when = 'H'  !Mail to Home Address
    when = 'M'  !Mail to Mail Address

      move &B.Postal                   to $Zip
      move &B.Postal                   to $ZipExtsn ~~~~~~xxxx

      if instr($Zip,'-',6) = 0 and $ZipExtsn <> '    '
        let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
      end-if

      move $Zip                        to $ZipExtsn ~~~~~xxxxx

      let $CheckCityState =
        rtrim(&B.City,' ') || edit(&B.State,',bxxbb') || $Zip

      let $CheckAddrLine1   = &B.Address1
      if rtrim(&B.Address2,' ') = ''
        let $CheckAddrLine2 = $CheckCityState
      else
        let $CheckAddrLine2 = &B.Address2
      end-if
      if rtrim(&B.Address3,' ') = ''
        let $CheckAddrLine3 = $CheckCityState
      else
        let $CheckAddrLine3 = &B.Address3
        let $CheckAddrLine4 = $CheckCityState
      end-if
      if rtrim(&B.Address2,' ') = '' and rtrim(&B.Address3,' ') = ''
        let $CheckAddrLine3 = ' '
      end-if
      if rtrim(&B.Address2,' ') = '' and rtrim(&B.Address3,' ') > ''
         let $CheckAddrLine2= &B.Address3
         let $CheckAddrLine3= $CheckCityState
         let $CheckAddrLine4= ' '
      end-if
      let $CheckLocation = 'Location: ' || $LocationName

  end-evaluate

end-procedure

!***********************************************************************
begin-procedure SSP-Check
!***********************************************************************

  do Format-Check-Name-Address

  let $xmltag = 'CHECK_INFO'
  do Process-SSP-XML-Tag-Beg

  let $xmltag     = 'chk_co_name'
  let $xmlcontent = rtrim($CompanyName,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'chk_co_adl1'
  let $xmlcontent = rtrim($CompanyAddrLine1,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'chk_co_adl2'
  let $xmlcontent = rtrim($CompanyAddrLine2,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'chk_co_adl3'
  let $xmlcontent = rtrim($CompanyAddrLine3,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'bnk_id'
  let $xmlcontent = rtrim($BankID,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'bnk_nm'
  let $xmlcontent = rtrim($BankName,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'bnk_adl1'
  let $xmlcontent = rtrim($BankAddrLine1,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'bnk_adl2'
  let $xmlcontent = rtrim($BankAddrLine2,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'bnk_adl3'
  let $xmlcontent = rtrim($BankAddrLine3,' ')
  do  Process-SSP-XML-Tag-Content

  do Format-Number(&B.PAYCHECK_NBR, $out, '999999999999999')
  let $out = ltrim($out,' ')
  let $xmltag     = 'bnk_chkno'
  let $xmlcontent = rtrim($out,' ')
  do  Process-SSP-XML-Tag-Content

  !print Check Cashing Location on check

  let $xmltag     = 'bnk_locchkcsh'
  let $xmlcontent = rtrim($LocationChkCashLoc,' ')
  do  Process-SSP-XML-Tag-Content

  !print the check date and numeric amount

  do Format-DateTime(&B.Check_Dt, $out, {DEFDATE}, '', '')
  let $xmltag     = 'bnk_chkdt'
  let $xmlcontent = rtrim($out,' ')
  do  Process-SSP-XML-Tag-Content

  do Format-Number(#CheckNetPay, $out, '$,$$$,$$$,$$9.99mi')
  let $out = rpad(ltrim($out,' '),15,'*')
  let $xmltag     = 'bnk_payamt'
  let $xmlcontent = rtrim($out,' ')
  do  Process-SSP-XML-Tag-Content

  !print the amount in words and the payee information

  move #CheckNetPay to #NetPay
  do Net-Pay-In-Words           !convert numbers to words
  let $NetInWords = '****' || upper($NetInWords) || '****'
  let $xmltag     = 'bnk_amtinwords'
  let $xmlcontent = rtrim($NetInWords,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'chk_pye_name'
  let $xmlcontent = rtrim($CheckName,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'chk_pye_adl1'
  let $xmlcontent = rtrim($CheckAddrLine1,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'chk_pye_adl2'
  let $xmlcontent = rtrim($CheckAddrLine2,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'chk_pye_adl3'
  let $xmlcontent = rtrim($CheckAddrLine3,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'chk_pye_adl4'
  let $xmlcontent = rtrim($CheckAddrLine4,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag     = 'chk_pye_locn'
  let $xmlcontent = rtrim($CheckLocation,' ')
  do  Process-SSP-XML-Tag-Content

  !print the bank microcode

  ! left pad the bank account numbers with '0'
  let #AccountNum = $AccountNum                                    ! 7/7/09  furashg UA Modifications UA_PY_0001
  do Format-Number(#AccountNum, $AccountNum, '0000000000')        ! 7/7/09  furashg UA Modifications UA_PY_0001

  do Format-Number(&B.PAYCHECK_NBR, $CheckNum, '099999999999999')
  let $MicrLine =
    'C' || $CheckNum   || 'C' || ' ' ||
    'A' || $TransitNum || 'A' || ' ' ||
           $AccountNum || 'C'
  let $xmltag     = 'chk_mirc_line'
  let $xmlcontent = rtrim($MicrLine,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'CHECK_INFO'
  do Process-SSP-XML-Tag-End

end-procedure

! *** BEGIN MODIFICATION 10/15/2009 FURASHG UA_PY_0001 EARNINGS MOD ***
begin-procedure Create-Earnings-XML-Data-US

  move 0 to #xmllinecnt

  let $xmltag = 'EARNINGS'
  do Process-SSP-XML-Tag-Beg

  if $Prior_Earns_Found = 'Y'
     let $xmltag = 'pe_PrPd'
     let $xmlcontent = '-------- Prior Period --------'
     do  Process-SSP-XML-Tag-Content
     let $xmltag = 'pe_bhdg'
     let $xmlcontent = 'Begin Date'
     do  Process-SSP-XML-Tag-Content
     let $xmltag = 'pe_ehdg'
     let $xmlcontent = 'End Date'
     do  Process-SSP-XML-Tag-Content
  else
     let $xmltag = 'pe_PrPd'
     let $xmlcontent = '$$'
     do  Process-SSP-XML-Tag-Content
  end-if

  move 0 to #CurHrTotal
  move 0 to #YTDHrTotal
  move ' ' to $Extraspc

  move 0 to #idx
  while #idx <= #lncnt

   if #idx <> #lncnt                 !not totals lines

     move 0 to #idx2
     while #idx2 <= #lastRow

       get $Name $EarnBegin $EarnEnd $CmpRtCd #Cur #YTD  -
           from ETDarray(#idx2) Name(#idx) EarnBegin(#idx) EarnEnd(#idx) CmpRtCd(#idx) Cur(#idx) YTD(#idx)

       evaluate #idx2
         when = #RatesRow
            move $Name to $EarnName
            move $EarnBegin to $Prt_EarnBegin
            move $EarnEnd   to $Prt_EarnEnd
            move $CmpRtCd to $CompCode
            move #Cur  to #EarnRate
         when = #HoursRow
            move #Cur  to #HourCur
            move #YTD  to #HourYTD
            add  #Cur  to #CurHrTotal
            add  #YTD  to #YTDHrTotal
         when = #EarnsRow
            move #Cur  to #EarnCur
            move #YTD  to #EarnYTD
       end-evaluate

       add 1 to #idx2
     end-while

     if rtrim($EarnName,' ') <> ''

       add 1 to #xmllinecnt
       do Format-Number(#xmllinecnt, $xln, '09')

       let $xmltag = 'hrs_earns'
       do Process-SSP-XML-Tag-Beg

       if $Prior_Earns_Found = 'Y'
          let $xmltag = 'he_descr'
          let $EarnName = RPAD($EarnName, 10, ' ')
          let $xmlcontent = EDIT($EarnName, 'XXXXXXXXXX')
          do  Process-SSP-XML-Tag-Content

          do Format-DateTime($Prt_EarnBegin, $out, {DEFDATE}, '', '')
          let $xmltag = 'pe_bdt'
          let $xmlcontent = rtrim($out,' ')
          do  Process-SSP-XML-Tag-Content

          do Format-DateTime($Prt_EarnEnd, $out, {DEFDATE}, '', '')
          let $xmltag = 'pe_edt'
          let $xmlcontent = rtrim($out,' ')
          do  Process-SSP-XML-Tag-Content
       else
          let $xmltag = 'he_descr'
          let $EarnName = RPAD($EarnName, 30, ' ')
          let $xmlcontent = EDIT($EarnName, 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
          do  Process-SSP-XML-Tag-Content
        end-if

       let $xmltag = 'cur_rt'
       let $xmlcontent = ''
       if #HourCur <> 0
                and #EarnRate <> 0
          do format-number(#EarnRate, $amtout, '999.999999')
          let $xmlcontent = ltrim($amtout,' ')
       end-if
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'cur_hrs'
       let $xmlcontent = ''
       if #HourCur <> 0
          do format-number(#HourCur, $amtout, '9,999.99')
          let $xmlcontent = ltrim($amtout,' ')
       end-if
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'cur_ern'
       do format-number(#EarnCur, $amtout, '9,999,999.99')
       let $xmlcontent = ltrim($amtout,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'ytd_hrs'
       let $xmlcontent = ''
       if #HourYTD <> 0
          do format-number(#HourYTD, $amtout, '99,999.99')
          let $xmlcontent = ltrim($amtout,' ')
       end-if
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'ytd_ern'
       do format-number(#EarnYTD, $amtout, '999,999,999.99')
       let $xmlcontent = ltrim($amtout,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'hrs_earns'
       do Process-SSP-XML-Tag-End

     end-if
   end-if
   add 1 to #idx
  end-while

  let $xmltag = 'EARNINGS'
  do Process-SSP-XML-Tag-End

  move #CurHrTotal          to #HourCur
  move #YTDHrTotal          to #HourYTD
  move &B.Total_Gross       to #EarnCur
  move &Y.Total_Gross_YTD   to #EarnYTD

  let $xmltag = 'EARNINGS_TOTAL'
  do Process-SSP-XML-Tag-Beg

  let $xmltag = 'ttl_cur_hrs'
  do format-number(#HourCur, $amtout, '9,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ttl_cur_ern'
  do format-number(#EarnCur, $amtout, '9,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ttl_ytd_hrs'
  do format-number(#HourYTD, $amtout, '99,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'ttl_ytd_ern'
  do format-number(#EarnYTD, $amtout, '999,999,999.99')
  let $xmlcontent = ltrim($amtout,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'EARNINGS_TOTAL'
  do Process-SSP-XML-Tag-End

end-procedure
! -- end modification 10/15/2009 furashg UA_PY_0001 earnings mod ------------------

!HCM-6036 LLSWANSO  Added procedure 
!***********************************************************************
begin-procedure Add-NY-OT-Rate-Earnings-Row
!***********************************************************************

       add 1 to #xmllinecnt
       do Format-Number(#xmllinecnt, $xln, '09')

       let $xmltag = 'hrs_earns'
       do Process-SSP-XML-Tag-Beg

       if $Prior_Earns_Found = 'Y'
          let $xmltag = 'he_descr'
          if rtrim($NY_ot_state,' ') = 'NY'
             let $EarnName = '[NY WTPA]'
          else
             if rtrim($NY_ot_state,' ') = 'CA'
                let $EarnName = '[CA LC226]'
             else
                let $EarnName = '[HI WTPA]'            ! LLSWANSO HCM-6460 Tax Update 13-F
             end-if
          end-if
          let $xmlcontent = EDIT($EarnName, 'XXXXXXXXXX')
          do  Process-SSP-XML-Tag-Content

          do Format-DateTime($Prt_EarnBegin, $out, {DEFDATE}, '', '')
          let $xmltag = 'pe_bdt'
          let $xmlcontent = rtrim($out,' ')
          do  Process-SSP-XML-Tag-Content

          do Format-DateTime($Prt_EarnEnd, $out, {DEFDATE}, '', '')
          let $xmltag = 'pe_edt'
          let $xmlcontent = rtrim($out,' ')
          do  Process-SSP-XML-Tag-Content
       else
          let $xmltag = 'he_descr'
          if rtrim($NY_ot_state,' ') = 'NY'
             let $EarnName = '[NY WTPA O/T derived rate]'
          else
             if rtrim($NY_ot_state,' ') = 'CA'
                let $EarnName = '[CA LC226 O/T derived rate]'
             else
                let $EarnName = '[HI WTPA O/T derived rate]'         ! LLSWANSO HCM-6460 Tax Update 13-F
             end-if
          end-if
          let $xmlcontent = EDIT($EarnName, 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
          do  Process-SSP-XML-Tag-Content
        end-if

       let $xmltag = 'cur_rt'
       let $xmlcontent = ''
       if #NYdrate_prt <> 0
          do format-number(#NYdrate_prt, $amtout, '999.999999')
          let $xmlcontent = ltrim($amtout,' ')
       end-if
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'hrs_earns'
       do Process-SSP-XML-Tag-End

end-procedure
! HCM-6036 LLSWANSO  Updated procedure with missing line

!***********************************************************************
begin-procedure Delete-PY-Earns-Wrk
!***********************************************************************

begin-SQL on-error=Ignore
DELETE FROM PS_PY_EARNS_WRK
WHERE PROCESS_INSTANCE = #prcs_process_instance
end-SQL
end-procedure


!***********************************************************************
begin-procedure Arrange-Earnings          ! BEGIN HCM-6036 LLSWANSO updated procedure
!***********************************************************************

    move 0 to #j
    while #j <= #lastCol
      get $jCode $jName $jEarnBegin $jEarnEnd $jCmpRtCd #jRate $jNYind #jNYdrate -
          from ETDarray(0) Code(#j) Name(#j) EarnBegin(#j) EarnEnd(#j) CmpRtCd(#j) Cur(#j) NYind(#j) NYdrate(#j)
      if rtrim($jCode,' ') = ''                 !if array entry is null
        break                                   !exit the "while"
      else

        if rtrim($jName,' ') = ''
           let $ErnCd = $jCode
           do Get-Earnings-Name
           let $jName = $EarningsAbbrv
        end-if

        get #jEarns_Hrs
                from ETDarray(1) Cur(#j)
        get #jEarns_Amt
                from ETDarray(2) Cur(#j)
        get #jHrs_YTD   from ETDarray(1) YTD(#j)
        get #jGrs_YTD   from ETDarray(2) YTD(#j)
        evaluate $jCode
          when = &PG.ErnCd_Reg_Hrs
            move '1'  to $jEarns_Type    !Regular Hourly
            break
          when = &PG.ErnCd_Reg_Earns
            move '2'  to $jEarns_Type    !Regular Salary
            break
          when = &PG.ErnCd_OT_Hrs
            move '3'  to $jEarns_Type    !Overtime
            break
          when-other
            move '4'  to $jEarns_Type
            break
        end-evaluate
        if #jEarns_Hrs = 0
                and #jEarns_Amt = 0
          move '5'  to $jEarns_Type        !Earnigns with YTD balance only
        end-if
        do Process-Earns-Wrk
      end-if
      add 1 to #j
    end-while

!reset ETDarray
  move 0 to #i
  while #i <= #lastRow
    move 0 to #j
    while #j <= #MaxCol
      put ' ' ' ' '' '' ' ' 0 0 'N' 0 into ETDarray(#i) Code(#j) Name(#j)  -
      EarnBegin(#j) EarnEnd(#j) CmpRtCd(#j) Cur(#j) YTD(#j) NYind (#j) NYdrate(#j)

      add 1 to #j
    end-while
    add 1 to #i
  end-while


  do Arrange-ETDarray-Curr-Earns

end-procedure
! END HCM-6036 LLSWANSO updated procedure

!***********************************************************************
begin-procedure Process-Earns-Wrk
!***********************************************************************

  let $Earns_Wrk_Found = 'N'

  if IsNull(rtrim($jEarnBegin,' '))
    let $jEarnBegin = &A.PAY_BEGIN_DT
  end-if

  if IsNull(rtrim($jEarnEnd, ' '))
    let $jEarnEnd = &A.PAY_END_DT
  end-if

  if IsNull(rtrim($jCmpRtCd, ' '))
    let $jCmpRtCd = ' '
  end-if

begin-SELECT DISTINCT
EWK.PROCESS_INSTANCE

  let $Earns_Wrk_Found = 'Y'

FROM PS_PY_EARNS_WRK EWK
WHERE EWK.PROCESS_INSTANCE = #prcs_process_instance
AND EWK.EARNS_TYPE = $jEarns_Type
AND EWK.ERNCD = $jCode
AND EWK.EARNS_BEGIN_DT = $jEarnBegin
AND EWK.EARNS_END_DT = $jEarnEnd
AND EWK.COMP_RATECD = $jCmpRtCd
AND EWK.HOURLY_RT = #jRate
end-SELECT

  if $Earns_Wrk_Found = 'N'
    do Insert-Earns-Wrk
  else
    do Update-Earns-Wrk
  end-if

end-procedure


!***********************************************************************
begin-procedure Insert-Earns-Wrk
!***********************************************************************
! BEGIN MODIFICATION 05/28/13 FURASHG HCM-5689

begin-SQL
INSERT INTO PS_PY_EARNS_WRK
(PROCESS_INSTANCE,
EARNS_TYPE,
ERNCD,
EARNS_BEGIN_DT,
EARNS_END_DT,
COMP_RATECD,
HOURLY_RT,
DESCR,
EARNS_HRS,
EARNS_AMT,
HRS_YTD,
GRS_YTD,
PY_NY_IND,                           
PY_NY_DERIVED_RATE )  !added the parenthesis  EMERGENCY HCM-6121
VALUES(#prcs_process_instance ,
$jEarns_Type,
$jCode,
$jEarnBegin,
$jEarnEnd,
$jCmpRtCd,
#jRate,
' ',           !HCM-6036 LLSWANSO forced space Tax Update 13-D retrofit
#jEarns_Hrs,
#jEarns_Amt,
#jHrs_YTD,
#jGrs_YTD,
'N',          !forced NY indicator   EMERGENCY     HCM-6121        
0)                 ! force NY rate      EMERGENCY   HCM-6121        
end-SQL
! END MODIFICATION 05/28/13 FURASHG HCM-5689
end-procedure



!***********************************************************************
begin-procedure Update-Earns-Wrk
!***********************************************************************
begin-SQL
UPDATE PS_PY_EARNS_WRK
SET EARNS_HRS = EARNS_HRS + #jEarns_Hrs,
    EARNS_AMT = EARNS_AMT + #jEarns_Amt,
    HRS_YTD = HRS_YTD + #jHrs_YTD,
    GRS_YTD = GRS_YTD + #jGrs_YTD
WHERE PROCESS_INSTANCE = #prcs_process_instance
AND EARNS_TYPE = $jEarns_Type
AND ERNCD = $jCode
AND EARNS_BEGIN_DT = $jEarnBegin
AND EARNS_END_DT = $jEarnEnd
AND COMP_RATECD = $jCmpRtCd
AND HOURLY_RT = #jRate
end-SQL
end-procedure


!***********************************************************************
begin-procedure Arrange-ETDarray-Curr-Earns   !HCM-6036 LLSWANSO  Updated procedure with missing line
!***********************************************************************

  move 0  to #j
  move 0  to #Prior_Earns_Count
  move 0  to #Cur_Earns_Count
  if $Create_Overflow = 'Y' and $RC_PAYINIT.Text15 = $Create_XML_DATA
       let #n = {no}
    else
       let #n = {n}
  end-if

begin-SELECT
PEW.EARNS_END_DT

  add 1 to #j

  if #j > (#n - 2)
    do Format-DateTime(&PEW.EARNS_END_DT, $temp1, {DEFCMP}, '', '')
    if $temp1 >= $Pay_Begin_Dt
        add 1 to #Cur_Earns_Count
    else
        add 1 to #Prior_Earns_Count
    end-if
  end-if

FROM PS_PY_EARNS_WRK PEW
WHERE PEW.PROCESS_INSTANCE = #prcs_process_instance
ORDER BY PEW.EARNS_END_DT DESC
end-SELECT

  move 0  to #j

  let $lastEarnBegin = ''
  let $lastEarnEnd = ''

  let #OthEarn_Cur = #n - 1
  let #OthEarn_Prior = #n - 1
  if #Cur_Earns_Count > 0
        and #Prior_Earns_Count > 0
    let #OthEarn_Cur = #n - 2
    let #OthEarn_Prior = #n - 1
  end-if

begin-SELECT
EW.EARNS_TYPE
EW.ERNCD
EW.EARNS_BEGIN_DT
EW.EARNS_END_DT
EW.COMP_RATECD
EW.HOURLY_RT
EW.DESCR
EW.EARNS_HRS
EW.EARNS_AMT
EW.HRS_YTD
EW.GRS_YTD
EW.PY_NY_IND
EW.PY_NY_DERIVED_RATE

  move &EW.ERNCD       to $Code
  move &EW.DESCR       to $Name
  move &EW.COMP_RATECD to $CmpRtCd
  move &EW.HOURLY_RT   to #Rate
  move &EW.PY_NY_IND   to $NY_ind
  move &EW.PY_NY_DERIVED_RATE to #NY_drate

  if #j >= #OthEarn_Cur
        or #j >= #OthEarn_Prior
    move $lastCode       to $Code
    move $lastName1      to $Name
    move $lastCmpRtCd    to $CmpRtCd
    move #lastRate       to #Rate
    move $lastNY_ind     to $NY_ind
    move #lastNY_drate   to #NY_drate
  end-if

  do Format-DateTime(&EW.EARNS_END_DT, $temp1, {DEFCMP}, '', '')
  if $temp1 >= $Pay_Begin_Dt
     let $EarnBegin = ''
     let $EarnEnd = ''
  else
     let $EarnBegin = &EW.EARNS_BEGIN_DT
     let $EarnEnd = &EW.EARNS_END_DT
  end-if

  let $Update_Cur = 'N'
  let $Update_Prior = 'N'
  if #Cur_Earns_Count > 0
        or #Prior_Earns_Count > 0
    if #OthEarn_Cur = #OthEarn_Prior
      get $jCode from ETDarray(0) Code(#OthEarn_Cur)
      if rtrim($jCode, ' ') <> ''
          let $Update_Cur = 'Y'
      end-if
    else
      get $jCode_Cur $jEarnBegin_Cur -
          from ETDarray(0) Code(#OthEarn_Cur) EarnBegin(#OthEarn_Cur)
      get $jCode_Prior $jEarnBegin_Prior -
          from ETDarray(0) Code(#OthEarn_Prior) EarnBegin(#OthEarn_Prior)
      if rtrim($EarnBegin, ' ') = ''
        if rtrim($jCode_Cur, ' ') <> ''
          let $Update_Cur = 'Y'
        end-if
      else
        if rtrim($jCode_Prior, ' ') <> ''
            let $Update_Prior = 'Y'
        end-if
      end-if
    end-if
  end-if

  move 0 to #i
  while #i <= #EarnsRow
    evaluate #i
      when = 0
        if #j >= #OthEarn_Cur
          if #OthEarn_Cur = #OthEarn_Prior
            if $Update_Cur = 'N'
                        and $Update_Prior = 'N'
              put $Code $Name $EarnBegin $EarnEnd $CmpRtCd #Rate $NY_ind #NY_drate  -
                  into ETDarray(#i) Code(#OthEarn_Cur) Name(#OthEarn_Cur) -
                       EarnBegin(#OthEarn_Cur) EarnEnd(#OthEarn_Cur) -
                       CmpRtCd(#OthEarn_Cur) Cur(#OthEarn_Cur) NYind(#OthEarn_Cur) NYdrate(#OthEarn_Cur)
            end-if
          else
            if $Update_Cur = 'N'
                and rtrim($EarnBegin, ' ') = ''
              put $Code $Name $EarnBegin $EarnEnd $CmpRtCd #Rate $NY_ind #NY_drate  -
                  into ETDarray(#i) Code(#OthEarn_Cur) Name(#OthEarn_Cur) -
                       EarnBegin(#OthEarn_Cur) EarnEnd(#OthEarn_Cur) -
                       CmpRtCd(#OthEarn_Cur) Cur(#OthEarn_Cur) NYind(#OthEarn_Cur) NYdrate(#OthEarn_Cur)
            end-if
            if $Update_Prior = 'N'
                and rtrim($EarnBegin, ' ') <> ''
              put $Code $Name $EarnBegin $EarnEnd $CmpRtCd #Rate $NY_ind #NY_drate  -
                  into ETDarray(#i) Code(#OthEarn_Prior) Name(#OthEarn_Prior) -
                       EarnBegin(#OthEarn_Prior) EarnEnd(#OthEarn_Prior) -
                       CmpRtCd(#OthEarn_Prior) Cur(#OthEarn_Prior) NYind(#OthEarn_Prior) NYdrate(#OthEarn_Prior)
            end-if
          end-if
        else
         put $Code $Name $EarnBegin $EarnEnd $CmpRtCd #Rate $NY_ind #NY_drate -
              into ETDarray(#i) Code(#j) Name(#j) -
                   EarnBegin(#j) EarnEnd(#j) CmpRtCd(#j) Cur(#j) NYind(#j) NYdrate(#j)
        end-if

        if $Update_Prior = 'Y'
                and rtrim($EarnBegin, ' ') <> ''
          do Format-DateTime($lastEarnEnd, $temp2, {DEFCMP}, '', '')
          if $temp1 > $temp2
            put $EarnEnd into ETDarray(#i) EarnEnd(#OthEarn_Prior)
          end-if
          do Format-DateTime(&EW.EARNS_BEGIN_DT, $temp1, {DEFCMP}, '', '')
          do Format-DateTime($lastEarnBegin, $temp2, {DEFCMP}, '', '')
          if $temp1 < $temp2
            put $EarnBegin into ETDarray(#i) EarnBegin(#OthEarn_Prior)
          end-if
        end-if
      when = 1
        if #j >= #OthEarn_Cur
          if #OthEarn_Cur = #OthEarn_Prior
            if $Update_Cur = 'N'
                        and $Update_Prior = 'N'
              put &EW.EARNS_HRS &EW.HRS_YTD -
                  into ETDarray(#i) Cur(#OthEarn_Cur) YTD(#OthEarn_Cur)
            else
              array-add &EW.EARNS_HRS to ETDarray(#i) Cur(#OthEarn_Cur)
              array-add &EW.HRS_YTD   to ETDarray(#i) YTD(#OthEarn_Cur)
            end-if
          else
            if $Update_Cur = 'N'
                        and $Update_Prior = 'N'
              if rtrim($EarnBegin, ' ') = ''
                put &EW.EARNS_HRS &EW.HRS_YTD -
                    into ETDarray(#i) Cur(#OthEarn_Cur) YTD(#OthEarn_Cur)
              else
                put &EW.EARNS_HRS &EW.HRS_YTD -
                    into ETDarray(#i) Cur(#OthEarn_Prior) YTD(#OthEarn_Prior)
              end-if
            else
              if $Update_Cur = 'Y'
                array-add &EW.EARNS_HRS to ETDarray(#i) Cur(#OthEarn_Cur)
                array-add &EW.HRS_YTD   to ETDarray(#i) YTD(#OthEarn_Cur)
              else
                array-add &EW.EARNS_HRS to ETDarray(#i) Cur(#OthEarn_Prior)
                array-add &EW.HRS_YTD   to ETDarray(#i) YTD(#OthEarn_Prior)
              end-if
            end-if
          end-if
        else
            put &EW.EARNS_HRS &EW.HRS_YTD -
                into ETDarray(#i) Cur(#j) YTD(#j)
        end-if
      when = 2
        if #j >= #OthEarn_Cur
          if #OthEarn_Cur = #OthEarn_Prior
            if $Update_Cur = 'N'
                        and $Update_Prior = 'N'
              put &EW.EARNS_AMT &EW.GRS_YTD -
                  into ETDarray(#i) Cur(#OthEarn_Cur) YTD(#OthEarn_Cur)
            else
              array-add &EW.EARNS_AMT to ETDarray(#i) Cur(#OthEarn_Cur)
              array-add &EW.GRS_YTD   to ETDarray(#i) YTD(#OthEarn_Cur)
            end-if
          else
            if $Update_Cur = 'N'
                        and $Update_Prior = 'N'
              if rtrim($EarnBegin, ' ') = ''
                put &EW.EARNS_AMT &EW.GRS_YTD -
                    into ETDarray(#i) Cur(#OthEarn_Cur) YTD(#OthEarn_Cur)
              else
                put &EW.EARNS_AMT &EW.GRS_YTD -
                    into ETDarray(#i) Cur(#OthEarn_Prior) YTD(#OthEarn_Prior)
              end-if
            else
              if $Update_Cur = 'Y'
                array-add &EW.EARNS_AMT to ETDarray(#i) Cur(#OthEarn_Cur)
                array-add &EW.GRS_YTD   to ETDarray(#i) YTD(#OthEarn_Cur)
              else
                array-add &EW.EARNS_AMT to ETDarray(#i) Cur(#OthEarn_Prior)
                array-add &EW.GRS_YTD   to ETDarray(#i) YTD(#OthEarn_Prior)
              end-if
            end-if
          end-if
        else
          put &EW.EARNS_AMT &EW.GRS_YTD -
              into ETDarray(#i) Cur(#j) YTD(#j)
        end-if
    end-evaluate
    add 1 to #i
  end-while

  add 1 to #j

  let $lastEarnBegin = &EW.EARNS_BEGIN_DT
  let $lastEarnEnd = &EW.EARNS_END_DT

FROM PS_PY_EARNS_WRK EW
WHERE EW.PROCESS_INSTANCE = #prcs_process_instance
ORDER BY EW.EARNS_TYPE ASC, EW.ERNCD ASC, EW.EARNS_END_DT DESC, EW.EARNS_BEGIN_DT DESC,
         EW.HOURLY_RT ASC
end-SELECT
end-procedure

! HCM-6036 LLSWANSO  Updated procedure with missing lines


!***********************************************************************
begin-procedure Ignore
!***********************************************************************

  !Dummy procedure to avoid error if zero row selected for processing
end-procedure

!***********************************************************************
begin-procedure Read-PSPRCSRQST
!***********************************************************************

begin-SELECT
OUTDESTFORMAT &OutDestFormat
FROM  PSPRCSRQST
WHERE PRCSINSTANCE = #prcs_process_instance
end-SELECT
  move &OutDestFormat to $_OutDestFormat
  let #_prcs_outdest_format = to_number($_OutDestFormat)
end-procedure

! == BEGIN: 07/24/2009  furashg   UA Modifications  UA_PY_0001 =======

!***********************************************************************
! Procedure    :  Print-Mailing-Cover
!  Description  :  Print the addressing information for the reverse side
!                of the check. The mail-to address is generated by the
!                employee's Location SetID.
!***********************************************************************
begin-procedure Print-Mailing-Cover

  let #row = 2
  print $PsFontTimes9   () code-printer={PRINTER_CHQADV}

  columns 4
  print-image ua_horz_logo (#row, 1)

  columns 33
  print $CompanyName (#row, 1) bold
  ! ** BEGIN MODIFICATION HCM-3247 FURASHG 20130319 **
  ! this address is hardcoded as it it not associated with the FSO dept in PS
  !   let $line = {PAYROLL_ADDR_1} || ' / ' || {PAYROLL_ADDR_2}
  !   print  $line                    (+1,1)
  !   print  {PAYROLL_ADDR_3}                     (+1,1)
  !   print  {PAYROLL_ADDR_4}                     (+1,1)
  print $CompanyAddrLine1   (+1,1)
  print $CompanyAddrLine2   (+1,1)
  print $CompanyAddrLine3   (+1,1)
  print $CompanyAddrLine4   (+1,1)
  ! ** END MODIFICATION HCM-3247 FURASHG 20130319 **

  columns 68
  graphic (#row,1,34) box 4 10
  print '       IMPORTANT PAYROLL' (+1,1) BOLD
  print  '     INFORMATION ENCLOSED' (+1,1) BOLD

  columns 13
  let #row = 17
  print $HomeName               (#row,1) BOLD
  DO Print-If-Nonblank($MailAddrLine1)
  DO Print-If-Nonblank($MailAddrLine2)
  DO Print-If-Nonblank($MailAddrLine3)
  DO Print-If-Nonblank($MailAddrLine4)
  DO Print-If-Nonblank($MailAddrLine5)
  DO Print-If-Nonblank($MailAddrLine6)
  DO Print-If-Nonblank($MailAddrLine7)

  print $PsFontTimes7 () code-printer={PRINTER_CHQADV} ! 09/2009 furashg UA Modifications UA_PY_0001

  ! print mail drop and location (for payroll staff)
  let $text = $mail_drop || '-' || $building || '-' || &b.deptid
  print $text (30,1)

  NEW-PAGE

end-procedure

!***********************************************************************
! Procedure    :  Print-If-Nonblank
!  Description  :  Only print a mailing address if the line is nonblank
!***********************************************************************
BEGIN-PROCEDURE Print-If-Nonblank ($AddressLine)
  IF LENGTH(LTRIM($AddressLine, ' ')) > 1
    let $addr_line = UPPER($AddressLine)
    print $addr_line        (+1,1)
  END-IF
END-PROCEDURE

!***********************************************************************
begin-setup
!***********************************************************************
  ! define the location of the image file. Note that:
  ! 1. this must be an absolute (not relative) reference (even though PS
  !    documentation indicates otherwise
  ! 2. DECLARE-IMAGE must appear in begin setup
  ! 3. LET statement not allowed in BEGIN-SETUP, so cannot use a variable
  !    for the SOURCE parameter
  ! 4. functions/concatenation not allowed in SOURCE parameter
  ! Used Pixillion image converter and BMP_TO_HPGL.SQR to create the image
  ! file, then Paint to save it as a MONOCHROME bitmap
  ! Note that these icons will only appear on HP printers. If the output
  ! is redirected to a PDF or any other media, the image will not be
  ! rendered.
  ! This technique is used rather than the image fonts provided by
  ! Troy as they allow for more fine grained, expressive control within
  ! SQR.

  #IF {sqr-platform} = 'WINDOWS-NT'
    #DEFINE src-ua-horz-logo 'd:\psft\HR90\sqr\UserSQR\ua_horz_logo.hpgl'
    !#DEFINE src-ua-horz-logo 'z:\source\sqr\ua_horz_logo.hpgl' !gff
  #ELSE
    #DEFINE src-ua-horz-logo '/u01/app/psft/hr90/sqr/UserSQR/ua_horz_logo.hpgl'
  #ENDIF
  declare-image ua_horz_logo
     type           = HPGL-FILE
     source         = {src-ua-horz-logo}
     image-size     = (25,3)
  end-declare

  #IF {sqr-platform} = 'WINDOWS-NT'
    #DEFINE src-az-seal 'd:\psft\HR90\sqr\UserSQR\az_seal.hpgl'
    !#DEFINE src-az-seal 'z:\source\sqr\az_seal.hpgl' !gff
  #ELSE
    #DEFINE src-az-seal '/u01/app/psft/hr90/sqr/UserSQR/az_seal.hpgl'
  #ENDIF
  declare-image az_seal
     type           = HPGL-FILE
     source         = {src-az-seal}
     image-size     = (7,3)
  end-declare

  #IF {sqr-platform} = 'WINDOWS-NT'
    #DEFINE src-ua-vert-logo 'd:\psft\HR90\sqr\UserSQR\ua_vert_logo.hpgl'
    !#DEFINE src-ua-vert-logo 'z:\source\sqr\ua_vert_logo.hpgl' !gff
  #ELSE
    #DEFINE src-ua-vert-logo '/u01/app/psft/hr90/sqr/UserSQR/ua_vert_logo.hpgl'
  #ENDIF
  declare-image ua_vert_logo
     type           = HPGL-FILE
     source         = {src-ua-vert-logo}
     image-size     = (6,3)
  end-declare
end-setup

!***********************************************************************
! procedure    :  Verify Support
!  description  :  Verify that resources needed to run are available,
!                such as image files
!***********************************************************************
begin-procedure Verify-Support

  let #exists = exists({src-az-seal})
  if #exists <> 0
    show 'Error: image file ' {src-az-seal} ' cannot be opened or found'
    stop quiet
  end-if

  let #exists = exists({src-ua-vert-logo})
  if #exists <> 0
    show 'Error: image file ' {src-ua-vert-logo} ' cannot be opened or found'
    stop quiet
  end-if

  let #exists = exists({src-ua-horz-logo})
  if #exists <> 0
    show 'Error: image file ' {src-ua-horz-logo} ' cannot be opened or found'
    stop quiet
  end-if

end-procedure


!***********************************************************************
! Procedure    :  Get-MailTo-Address
!  Description  :  Get the employee's mail-to address used on the reverse
!                side of the paper paycheck. This will rarely be the
!                employee's home address, as most checks are delivered
!                to departments.
!***********************************************************************
BEGIN-PROCEDURE Get-MailTo-Address

  let $MailToAddressFound = 'N'
  let $MailAddrLine1 = ''
  let $MailAddrLine2 = ''
  let $MailAddrLine3 = ''
  let $MailAddrLine4 = ''
  let $MailAddrLine5 = ''
  let $MailAddrLine6 = ''
  let $MailAddrLine7 = ''

! get parameters on which addresses will be built
BEGIN-SELECT
a.paycheck_locn_optn    &mt_paycheck_locn_optn
a.setid        &mt_setid_o
a.location      &mt_location_o
c.setid_location     &mt_setid_d
c.location      &mt_location_d
a.paycheck_addr_optn    &mt_addr_optn

  ! use home department
  IF &mt_paycheck_locn_optn = 'D'
    LET $mt_setid = &mt_setid_d
    LET $mt_location = &mt_location_d
  ! use manually-set location from paycheck options page
  ELSE
    LET $mt_setid = &mt_setid_o
    LET $mt_location = &mt_location_o
  END-IF

FROM
  PS_DEPT_TBL    C
, PS_PRIMARY_JOBS  PJ
, PS_JOB    JOB
, PS_PAYROLL_DATA   A
WHERE
    A.EMPLID      =  &B.EMPLID
AND A.PAYCHECK_LOCN_OPTN  IN  ('D','O')
AND A.EMPLID      =  JOB.EMPLID
AND JOB.EFFDT      =  (
  SELECT MAX(EFFDT)
  FROM   PS_JOB
  WHERE
      EMPLID  =  JOB.EMPLID
  AND EMPL_RCD  =  JOB.EMPL_RCD
  AND EFFDT  <=  &a.pay_end_dt)
AND JOB.EFFSEQ      =  (
  SELECT MAX(EFFSEQ)
  FROM   PS_JOB
  WHERE
      EMPLID  =  JOB.EMPLID
  AND EMPL_RCD  =  JOB.EMPL_RCD
  AND EFFDT  =  JOB.EFFDT)
AND JOB.EMPLID    =  PJ.EMPLID
AND PJ.PRIMARY_JOB_APP  =  'BN'
AND JOB.EMPL_RCD  =  PJ.EMPL_RCD
AND PJ.EFFDT    =  (
  SELECT MAX(EFFDT)
  FROM   PS_PRIMARY_JOBS
  WHERE
      EMPLID    =  PJ.EMPLID
  AND PRIMARY_JOB_APP  =  PJ.PRIMARY_JOB_APP
  AND EMPL_RCD    =  PJ.EMPL_RCD
  AND EFFDT    <=  &a.pay_end_dt)
AND PJ.PRIMARY_JOB_IND    =  'Y'
AND JOB.SETID_DEPT    =  C.SETID
AND JOB.DEPTID      =  C.DEPTID
AND C.EFFDT      =  (
  SELECT MAX(EFFDT)
  FROM   PS_DEPT_TBL
  WHERE
      SETID  =  C.SETID
  AND DEPTID  =  C.DEPTID
  AND EFFDT  <=  SYSDATE)
END-SELECT

! if home address, get address set on the payroll options table
IF $mt_setid = 'UAZPY' AND  $mt_location = 'HOME'
BEGIN-SELECT
address1                    &h_address1
address2                    &h_address2
address3                    &h_address3
address4                    &h_address4
city                        &h_city
state                        &h_state
postal                      &h_postal

  LET $MailAddrLine1       = &h_address1
  LET $MailAddrLine2       = &h_address2
  LET $MailAddrLine3       = &h_address3
  LET $MailAddrLine4       = &h_address4
  LET $MailAddrLine5     = &h_city || ', ' || &h_state || ' ' || &h_postal
  LET $MailToAddressFound = 'Y'

FROM        ps_addresses a
WHERE        a.emplid        = &b.emplid
AND          a.effdt          = (
SELECT      MAX(a_ed.effdt)
FROM        ps_addresses a_ed
WHERE        a_ed.emplid     = a.emplid
AND         a_ed.address_type = a.address_type        !HCM427 & HCM452 llswanso add address type to the join
AND          a_ed.effdt      <= SYSDATE
) AND          ((&mt_addr_optn  = 'H'
AND         a.address_type  = 'HOME')
OR          (&mt_addr_optn  = 'C'
AND         a.address_type  = 'CHK'))
END-SELECT

! otherwise, get it from the location table (custom or department's)
ELSE

  ! create a buffer to temporarly act as if the employee's setid and location are for their
  ! home department rather than a pull code. This avoids disrupting other program
  ! logic that requires such employee's "real" setid/location from payroll options
  let $tmp_mt_setid = $mt_setid
  let $tmp_mt_location = $mt_location

  ! if this is pull but not for home address, then get the address of the employee's
  ! home department. Assumes deptid are unique across setid
begin-select
dh.SETID_LOCATION
dh.LOCATION

  let $tmp_mt_setid = &dh.setid_location
  let $tmp_mt_location = &dh.location

FROM ps_dept_tbl dh
WHERE dH.effdt =
(SELECT MAX(d_ed.effdt)
   FROM ps_dept_tbl d_ed
  WHERE d_ed.deptid = dH.deptid
  AND   d_ed.setid  = dh.setid   !HCM  llswanso  add set id to the join
AND d_ed.effdt     <= sysdate
)
AND DH.eff_status = 'A'
!--AND DH.DEPTID = &B.DEPTID
  and dh.deptid = $b_deptid                   ! 20130205 furashg HCM-3247
end-select

BEGIN-SELECT
d.descr            &l_dept_name
l.descr            &l_locn_name
l.floor            &l_floor
l.address1        &l_address1
l.address2        &l_address2
l.address3        &l_address3
l.address4        &l_address4
l.city            &l_city
l.state            &l_state
l.postal           &l_postal

  IF LENGTH(&l_dept_name) > 0
    LET $MailAddrLine1 = RTRIM(&l_dept_name, ' ') || '     ' || $tmp_mt_location
  END-IF
  IF $tmp_mt_setid <> 'UAZLZ'
    let $MailAddrLine2 = RTRIM(&l_locn_name || '    ' || &l_floor, ' ')
  END-IF
  let $MailAddrLine3 = &l_address1
  IF $tmp_mt_setid <> 'UAZLC' AND $tmp_mt_setid <> 'UAZLT'
    let $MailAddrLine4 = &l_address2
    let $MailAddrLine5 = &l_address3
  END-IF
  let $MailAddrLine6 = &l_address4
  IF $tmp_mt_setid = 'UAZLZ' OR $tmp_mt_setid = 'UAZPO'
    LET $MailAddrLine7 = &l_city || ', ' || &l_state || ' ' || &l_postal
  END-IF
  LET $MailToAddressFound = 'Y'

FROM              ps_location_tbl l
LEFT OUTER JOIN    PS_UA_CUR_DEPT_VW d
ON                d.location         = l.location
AND                d.setid_location  = l.setid
AND               d.eff_status       = 'A'
WHERE              l.setid            = $tmp_mt_setid
AND                l.location        = $tmp_mt_location
AND                l.effdt           = (
SELECT            MAX(l_ed.effdt)
FROM              ps_location_tbl l_ed
WHERE              l_ed.setid        = l.setid
AND                l_ed.location      = l.location
AND                l_ed.effdt        <= SYSDATE
)
END-SELECT
END-IF

  ! generate error if employee does not have an address configured
  IF $MailToAddressFound = 'N'
    LET #return-status = -1
    SHOW ' '
    SHOW 'Valid address not configured for employee ' &B.EMPLID
    SHOW 'Check the following configuration: '
    SHOW '   Home>Payroll for North America>Employee Pay Data USA>Update Payroll Options'
    SHOW '   Home>Set Up HRMS>Foundation Tables>Organization>Location'
    SHOW '   Home>Set Up HRMS>Foundation Tables>Organization>Departments'
    SHOW '******* PROGRAM TERMINATING UNSUCCESSFULLY *******'
    SHOW 'Return-Status = ' #RETURN-STATUS
    STOP quiet
  END-IF

END-PROCEDURE
!***********************************************************************
! Procedure      : output-earnings
!  Description    : obtain and format information for the "Hours and
!                 Earnings" section of the pay check
!
!                 get data
!                   get all ytd earnings that add to the current balance
!                   for each ytd current balance, get any matching earnings
!                     or other earnings for the current check
!                   sum earnings by earning code and rate
!                 depending on how submitted, either output to a printed
!                   check or an XML data set
!                 only prints up to 13 rows
!
!                 this functionality was originally performed by procedures
!                 get-pay-earns, get-pay-oth-earns, etc. built into
!                 pay003 and ddp003. They now share this common procedure.
!***********************************************************************
begin-procedure output-earnings

  let #on_row = {ROW_ERNHRS} + 2
  let #rows = 0
  let #xmllinecnt = 0

  ! clear totals for each check
  let #he_tot_hrs_ytd = 0
  let #he_tot_grs_ytd = 0
  let #he_tot_hours = 0
  let #he_tot_dollars = 0

  if #mode = {MODE_XML}
    let $xmltag = 'EARNINGS'
     do Process-SSP-XML-Tag-Beg
  end-if

! BEGIN MODIFICATION furashg 02/08/2010  UA Modication HCM-451 **
begin-select
E.ERNCD                  &he_erncd
E.DESCR                  &he_descr
NVL(G.HRS_CUR,0)         &he_hours
NVL(G.GRS_CUR,0)         &he_dollars
E.HRS_YTD                &he_hrs_ytd
E.GRS_YTD               &he_grs_ytd

  ! only print up to the maximum number of lines in this section
  let #rows = #rows + 1
  if #rows < {n}

    ! create sums for the totals row
    let #he_tot_hrs_ytd = #he_tot_hrs_ytd + &he_hrs_ytd
    let #he_tot_grs_ytd = #he_tot_grs_ytd + &he_grs_ytd
    let #he_tot_hours = #he_tot_hours + &he_hours
    let #he_tot_dollars = #he_tot_dollars + &he_dollars

    if #mode = {MODE_PRINT}

      print &he_descr               (#on_row, {COL_HE_DESCR})
    !  if &he_rate <> 0
    !    print &he_rate               (#on_row, {COL_HE_RATE}) edit b999.99mi
    !  end-if
      if &he_hours <> 0
        print &he_hours             (#on_row, {COL_HE_HOURS}) edit b999.99mi
      end-if
      if &he_dollars <> 0
        print &he_dollars           (#on_row, {COL_HE_DOLLARS}) edit 99,999,990.99mi
      end-if
      if &he_hrs_ytd <> 0
        print &he_hrs_ytd           (#on_row, {COL_HE_HRS_YTD}) edit b9,999.99mi
      end-if
      print &he_grs_ytd              (#on_row, {COL_HE_GRS_YTD}) edit 99,999,990.99mi
      let #on_row = #on_row + 1

    ! if an on-line advice is being generated, then store the earnings & hours in XML
    else
      let $xmltag = 'hrs_earns'
      do Process-SSP-XML-Tag-Beg

      let $xmltag = 'he_descr'
       let $EarnName = RPAD(&he_descr, 30, ' ')
       let $xmlcontent = EDIT($EarnName, 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
       do  Process-SSP-XML-Tag-Content

!       let $xmltag = 'cur_rt'
!       let $xmlcontent = ''
!       if &he_rate <> 0
!          do format-number(&he_rate, $amtout, '999.99')
!          let $xmlcontent = ltrim($amtout,' ')
!       end-if
!       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'cur_hrs'
       let $xmlcontent = ''
       if &he_hours <> 0
          do format-number(&he_hours, $amtout, '9,999.99')
          let $xmlcontent = ltrim($amtout,' ')
       end-if
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'cur_ern'
       let $xmlcontent = ''
       if &he_dollars <> 0
         do format-number(&he_dollars, $amtout, '9,999,999.99')
         let $xmlcontent = ltrim($amtout,' ')
       end-if
       do  Process-SSP-XML-Tag-Content

      !only print ytd totals for a given earning code once
       let $xmltag = 'ytd_hrs'
       let $xmlcontent = ''
       if &he_hrs_ytd <> 0
          do format-number(&he_hrs_ytd, $amtout, '99,999.99')
          let $xmlcontent = ltrim($amtout,' ')
       end-if
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'ytd_ern'
       do format-number(&he_grs_ytd, $amtout, '999,999,999.99')
       let $xmlcontent = ltrim($amtout,' ')
       do  Process-SSP-XML-Tag-Content

      let $xmltag = 'hrs_earns'
      do Process-SSP-XML-Tag-End

    end-if
  end-if

FROM              (
SELECT            a.emplid,
                  a.erncd,
                  b.descr,
                  SUM(NVL(a.HRS_YTD,0)) hrs_ytd,
                  SUM(NVL(a.GRS_YTD,0)) grs_ytd
FROM              PS_EARNINGS_BAL a
INNER JOIN        ps_earnings_tbl b
ON                b.erncd = a.erncd
WHERE             a.EMPLID = &b.emplid
AND               a.COMPANY = &a.company
AND               a.BALANCE_ID = &a1.balance_id
AND               a.BALANCE_YEAR = &a1.balance_year
AND               a.SPCL_BALANCE = 'N'
AND               a.BALANCE_PERIOD = (
SELECT            MAX(BALANCE_PERIOD)
FROM              PS_EARNINGS_BAL a_bp
WHERE             a_bp.EMPLID  = a.EMPLID
AND               a_bp.COMPANY = a.COMPANY
AND               a_bp.BALANCE_ID = a.BALANCE_ID
AND               a_bp.BALANCE_YEAR = a.BALANCE_YEAR
AND               a_bp.SPCL_BALANCE = a.SPCL_BALANCE
AND               a_bp.ERNCD = a.ERNCD)
AND               a.ErnCd NOT IN('UFE','UFP' ,'UNE' ,'UNP' ,'VUE' ,'VUP')
and               b.effdt = (
SELECT            MAX(F_ed.effdt)
FROM              ps_earnings_tbl F_ed
WHERE             F_ed.erncd = b.erncd
AND               F_ed.effdt <= sysdate)
AND               b.ADD_GROSS <> 'N'
GROUP BY          a.emplid,
                  a.erncd,
                  b.descr
ORDER BY          b.DESCR) E
LEFT OUTER JOIN   (
SELECT            paycheck_nbr,
                  emplid               ,
                  erncd                ,
                  SUM(dollars) GRS_CUR ,
                  SUM(hours) HRS_CUR
FROM (
SELECT            j.paycheck_nbr  ,
                  A.EMPLID              ,
                  a.erncd_reg_hrs ERNCD ,
                  CASE
                    WHEN a.reg_earns <> 0 THEN a.reg_earns
                    ELSE a.reg_hrly_earns
                  END dollars,
                  CASE
                    WHEN a.reg_hrs <> 0 THEN a.reg_hrs
                    ELSE a.reg_earn_hrs
                  END hours
FROM              PS_PAY_EARNINGS a
INNER JOIN        ps_pay_check j
ON                j.company     = a.company
AND           j.paygroup        = a.paygroup
AND j.pay_end_dt      = a.pay_end_Dt
AND j.off_cycle       = a.off_cycle
AND j.page_num        = a.page_num
AND j.line_num        = a.line_num
      WHERE (a.reg_earns <> 0
    OR a.reg_hrly_earns  <> 0)

  UNION ALL

     SELECT k.paycheck_nbr,
      H.EMPLID            ,
      l.erncd             ,
      CASE
        WHEN l.oth_earns <> 0
        THEN l.oth_earns
        ELSE l.oth_pay
      END dollars    ,
      l.oth_hrs hours
       FROM PS_pay_oth_earns l
    INNER JOIN PS_PAY_EARNINGS H
     ON  H.COMPANY        = L.COMPANY
     AND H.PAY_END_DT    = l.pay_end_dt
    AND H.OFF_CYCLE      = l.Off_Cycle
    AND H.PAGE_NUM       = l.PAGE_NUM
    AND H.LINE_NUM       = l.LINE_NUM
    AND H.SEPCHK         = l.SepChk
    AND H.ADDL_NBR       = l.ADDL_NBR
    INNER JOIN ps_pay_check k
         ON k.company    = l.company
    AND k.paygroup       = l.paygroup
    AND k.pay_end_dt     = l.pay_end_Dt
    AND k.off_cycle      = l.off_cycle
    AND k.page_num       = l.page_num
    AND k.line_num       = l.line_num
      WHERE l.ADD_GROSS <> 'N'
    )
WHERE             PAYCHECK_NBR = &B.PAYCHECK_NBR
GROUP BY          paycheck_nbr,
                  emplid,
                  erncd) G
ON                G.EMPLID = E.EMPLID
AND               G.ERNCD = E.ERNCD
WHERE              E.EMPLID = &b.emplid
end-select
! END MODIFICATION furashg 02/08/2010  UA Modification HCM-451 **

  ! print the total to the statement
  if #mode = {MODE_PRINT}

    let #on_row = {ROW_ERNHRS} + {N} + 2
    print 'Totals'                    (#on_row,{COL_HE_DESCR})
    print #he_tot_hours               (#on_row, {COL_HE_HOURS}) edit b999.99mi
    print #he_tot_dollars              (#on_row, {COL_HE_DOLLARS}) edit 99,999,990.99mi
    print #he_tot_hrs_ytd             (#on_row, {COL_HE_HRS_YTD}) edit b9,999.99mi
    print #he_tot_grs_ytd              (#on_row, {COL_HE_GRS_YTD}) edit 99,999,990.99mi

  ! if an on-line advice is being generated, then store the totals in XML
  else

    let $xmltag = 'EARNINGS'
    do Process-SSP-XML-Tag-End

    let $xmltag = 'EARNINGS_TOTAL'
    do Process-SSP-XML-Tag-Beg

    let $xmltag = 'ttl_cur_hrs'
    do format-number(#he_tot_hours, $amtout, '9,999.99')
    let $xmlcontent = ltrim($amtout,' ')
    do  Process-SSP-XML-Tag-Content

    let $xmltag = 'ttl_cur_ern'
    do format-number(#he_tot_dollars, $amtout, '9,999,999.99')
    let $xmlcontent = ltrim($amtout,' ')
    do  Process-SSP-XML-Tag-Content

    let $xmltag = 'ttl_ytd_hrs'
    do format-number(#he_tot_hrs_ytd, $amtout, '99,999.99')
    let $xmlcontent = ltrim($amtout,' ')
    do  Process-SSP-XML-Tag-Content

    let $xmltag = 'ttl_ytd_ern'
    do format-number(#he_tot_grs_ytd, $amtout, '999,999,999.99')
    let $xmlcontent = ltrim($amtout,' ')
    do  Process-SSP-XML-Tag-Content

    let $xmltag = 'EARNINGS_TOTAL'
    do Process-SSP-XML-Tag-End
  end-if

end-procedure

!***********************************************************************
! Procedure      : SSP-Statement
!  Description    :
!                  This code was excised from PAY003 and DDP003
!***********************************************************************
begin-procedure SSP-Statement

  do Format-Number(#xmlssp_batch_id, $out, '0999')
  let $out = 'Batch' || ltrim($out,' ')
  let $xmltag = 'BATCH_ID'
  let $xmlcontent = $out
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'BURST_VAL'
  let $xmlcontent = $xmlssp_burst
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'emp_id'
  Let $xmlcontent = rtrim(&B.EmplID,' ')
  do  Process-SSP-XML-Tag-Content

  let $emplangcd = 'ENG'
  let $xmltag = 'emp_langcd'
  Let $xmlcontent = rtrim($emplangcd,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'COMPANY_INFO'
  do Process-SSP-XML-Tag-Beg

  let $xmltag = 'company'
  let $xmlcontent = $CompanyName
  do  Process-SSP-XML-Tag-Content

  ! ** BEGIN  MODIFICATION 20130319 HCM-3247 FURASHG **
  !   if rtrim($CompanyAddrLine3,' ') <> ''
  !     let $CompanyAddrLine1_2 = rtrim($CompanyAddrLine1,' ') || ', ' || $CompanyAddrLine2
  ! 
  !     let $xmltag = 'co_addr_l1'
  !     let $xmlcontent = rtrim($CompanyAddrLine1_2,' ')
  !     do  Process-SSP-XML-Tag-Content
  ! 
  !     let $xmltag = 'co_addr_l2'
  !     let $xmlcontent = rtrim($CompanyAddrLine3,' ')
  !     do  Process-SSP-XML-Tag-Content
  !   else
  ! ** END MODIFICATION 20130319 HCM-3247 FURASHG **
    let $xmltag = 'co_addr_l1'
    let $xmlcontent = rtrim($CompanyAddrLine1,' ')
    do  Process-SSP-XML-Tag-Content

    let $xmltag = 'co_addr_l2'
    let $xmlcontent = rtrim($CompanyAddrLine2,' ')
    do  Process-SSP-XML-Tag-Content

    let $xmltag = 'co_addr_l3'
    let $xmlcontent = rtrim($CompanyAddrLine3,' ')
    do  Process-SSP-XML-Tag-Content

    if $Print-Phone = 'Y'                             ! 20130319 HCM-3247 FURASHG 
      let $xmltag = 'co_ph_nbr'                       ! 20130319 HCM-3247 FURASHG 
      let $xmlcontent = rtrim($CompanyMainPhone,' ')  ! 20130319 HCM-3247 FURASHG
      do  Process-SSP-XML-Tag-Content                 ! 20130319 HCM-3247 FURASHG 
    end-if
  !end-if

  let $xmltag = 'COMPANY_INFO'
  do Process-SSP-XML-Tag-End

  let $xmltag = 'PAYGROUP_INFO'
  do Process-SSP-XML-Tag-Beg

  let $out = $PayGroup || '-' || $PayGroupName
  let $xmltag = 'pay_gp'
  let $xmlcontent = rtrim($out,' ')
  do  Process-SSP-XML-Tag-Content

  do Format-DateTime(&A.Pay_Begin_Dt, $out, {DEFDATE}, '', '')
  let $xmltag = 'pay_beg_dt'
  let $xmlcontent = rtrim($out,' ')
  do  Process-SSP-XML-Tag-Content

  do Format-DateTime(&A.Pay_End_Dt, $out, {DEFDATE}, '', '')
  let $xmltag = 'pay_end_dt'
  let $xmlcontent = rtrim($out,' ')
  do  Process-SSP-XML-Tag-Content

  let $PayShtSrc = ''
  evaluate &B.form_id
    when = 'ADVICE'
      let $PayShtSrc = '** Advice **'
      break
    when = 'CHECK'
      let $PayShtSrc = '** Check **'
      break
    when = 'ODADV'
      let $payshtsrc = '** On-Line Advice **'
      break
    when = 'ODCHK'
      let $payshtsrc = '** On-Line Check **'
      break
  end-evaluate

  let $xmltag = 'pay_sht_src'
  let $xmlcontent = rtrim($PayShtSrc,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'bus_unit'
  let $xmlcontent = rtrim($Bus_unit,' ')
  do  Process-SSP-XML-Tag-Content

  do Format-Number(&B.PAYCHECK_NBR, $out, '099999999999999')
  let $xmltag = 'check_num'
  let $xmlcontent = rtrim($out,' ')
  do  Process-SSP-XML-Tag-Content

  do Format-DateTime(&B.Check_Dt, $out, {DEFDATE}, '', '')
  let $xmltag = 'check_dt'
  let $xmlcontent = rtrim($out,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'PAYGROUP_INFO'
  do Process-SSP-XML-Tag-End

  do GET-SSP-View-Date

  let $xmltag = 'EMPLOYEE_INFO'
  do Process-SSP-XML-Tag-Beg

  let $xmltag = 'emp_name'
  let $xmlcontent = rtrim($HomeName,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'emp_addr_l1'
  let $xmlcontent = rtrim($HomeAddrLine1,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'emp_addr_l2'
  let $xmlcontent = rtrim($HomeAddrLine2,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'emp_addr_l3'
  let $xmlcontent = rtrim($HomeAddrLine3,' ')
  do  Process-SSP-XML-Tag-Content

  let $out = $DeptID || '-' || $DeptName
  let $xmltag = 'emp_dept'
  let $xmlcontent = rtrim($out,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'locn_code'
  let $xmlcontent = rtrim($LocationName,' ')
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'job_title'
  let $xmlcontent = rtrim($JobTitle,' ')
  do  Process-SSP-XML-Tag-Content

  if &FQ.FREQUENCY_TYPE     = 'H'
     let $Comp_freq_format_mask =  '$$$,$$$,$$$,$$9.999999'
  else
     let $Comp_freq_format_mask =  '$$$,$$$,$$$,$$9.99'
  end-if

  let $out =
    ltrim(edit(&J.Comprate,$Comp_freq_format_mask),' ') || ' ' || $CompFrequency
  let $xmltag = 'pay_rt'
  let $xmlcontent = rtrim($out,' ')
  do  Process-SSP-XML-Tag-Content

  if &FT.SPECIAL_FWT_STATUS = 'G' and
     &FT.FWT_Addl_Pct = 0 and
     &FT.FWT_Addl_Amt = 0

      let $xmltag = 'fed_marital'
      let $xmlcontent = rtrim($FWTStatus,' ')
      do  Process-SSP-XML-Tag-Content

      let $xmltag = 'fed_allw'
      let $xmlcontent = ''
      do  Process-SSP-XML-Tag-Content
  else
      let $xmltag = 'fed_marital'
      let $xmlcontent = rtrim($FWTMarStatus,' ')
      do  Process-SSP-XML-Tag-Content

      let   $out = ltrim(edit(&FT.FWT_Allowances,'999'),' ')
      let $xmltag = 'fed_allw'
      let $xmlcontent = $out
      do  Process-SSP-XML-Tag-Content
  end-if

  let   $out = ltrim(edit(&FT.FWT_Addl_Pct,'b9.999'),' ')
  let $xmltag = 'fed_addl_pct'
  let $xmlcontent = $out
  do  Process-SSP-XML-Tag-Content

  let   $out = ltrim(edit(&FT.FWT_Addl_Amt,'b9,999.99'),' ')
  let $xmltag = 'fed_addl_amt'
  let $xmlcontent = $out
  do  Process-SSP-XML-Tag-Content

  let $ResidentState = rtrim($ST_State, ' ') || ' State'
  let $xmltag = 'emp_prov'
  let $xmlcontent = rtrim($ST_State,' ')
  do  Process-SSP-XML-Tag-Content

  if $ST.SPECIAL_SWT_STATUS = 'G' and
     #ST_SWT_Addl_Pct = 0 and
     #ST_SWT_Addl_Amt = 0

      let $xmltag = 'state_marital'
      let $xmlcontent = rtrim($SWTStatus,' ')
      do  Process-SSP-XML-Tag-Content

      let $xmltag = 'state_allw'
      let $xmlcontent = ' '
      do  Process-SSP-XML-Tag-Content
  else
      let $xmltag = 'state_marital'
      let $xmlcontent = rtrim($SWTMarStatus,' ')
      do  Process-SSP-XML-Tag-Content

      let $out = ltrim(edit(#ST_SWT_Allowances,'999'),' ')
      let $xmltag = 'state_allw'
      let $xmlcontent = $out
      do  Process-SSP-XML-Tag-Content

      if #ST_SWT_Addl_Allownces > 0
        let $out = '+' || ltrim(edit(#ST_SWT_Addl_Allownces,'999'),' ')
        let $xmltag = 'state_addl_allw'
        let $xmlcontent = $out
        do  Process-SSP-XML-Tag-Content
      end-if
  end-if

  let $out = ltrim(edit(#ST_PERCENT_OF_FWT,'b9.999'),' ')   !6/10/2009 abeecham UA Modification UA_PY_0001
  let $xmltag = 'state_percent_of_fwt'                      !6/10/2009 abeecham UA Modification UA_PY_0001
  let $xmlcontent = $out                                    !6/10/2009 abeecham UA Modification UA_PY_0001
  do  Process-SSP-XML-Tag-Content                           !6/10/2009 abeecham UA Modification UA_PY_0001

  LET $out = $fica_total_pct                                 !7/21/2009 furashg UA Modification UA_PY_0001
  LET $xmltag = 'fica_total_pct'                             !7/21/2009 furashg UA Modification UA_PY_0001
  LET $xmlcontent = $out                                    !7/21/2009 furashg UA Modification UA_PY_0001
  DO  Process-SSP-XML-Tag-Content                           !7/21/2009 furashg UA Modification UA_PY_0001

  let $out = ltrim(edit(#ST_SWT_Addl_Pct,'b9.999'),' ')
  let $xmltag = 'state_addl_pct'
  let $xmlcontent = $out
  do  Process-SSP-XML-Tag-Content

  let $out = ltrim(edit(#ST_SWT_Addl_Amt,'b9,999.99'),' ')
  let $xmltag = 'state_addl_amt'
  let $xmlcontent = $out
  do  Process-SSP-XML-Tag-Content

  let $xmltag = 'EMPLOYEE_INFO'
  do Process-SSP-XML-Tag-End

  let #lncnt = {n}
  !do Create-Earnings-XML-Data-US
  let #mode = {MODE_XML}                                    !10/15/2009 furashg UA_PY_0001 earnings mods
  do output-earnings                                         !10/15/2009 furashg UA_PY_0001 earnings mods
  let $xmltag = 'py_ovrflow'
  let $xmlcontent = '$$'                                ! 20130313 furashg HCM-3247
  do Process-SSP-XML-Tag-Content                        ! 20130313 furashg HCM-3247
  do Create-Taxes-XML-Data
  do Create-Before-Tax-Deduction-XML-Data
  do Create-After-Tax-Deduction-XML-Data
  do Create-Employee-Paid-Benefits-XML-Data
  do Current-YearToDate-Totals-XML-Data
  do PTO-Sick-Hours-XML-Data

  if $NeedXfootMsg = 'Y'
    let $xmltag     = 'xfoot_msg1'
    let $xmlcontent = 'NOTE: Rate * Hours = Earnings unless an hours or earnings'
    do  Process-SSP-XML-Tag-Content
    let $xmltag     = 'xfoot_msg2'
    let $xmlcontent = 'adjustment is included or Rate is from an FLSA calculation.'
    do  Process-SSP-XML-Tag-Content
  else
    let $xmltag     = 'xfoot_msg1'
    let $xmlcontent = ''
    do  Process-SSP-XML-Tag-Content
    let $xmltag     = 'xfoot_msg2'
    let $xmlcontent = ''
    do  Process-SSP-XML-Tag-Content
  end-if

  let $xmltag = 'NET_PAY_DISTRIBUTIONS'
  do Process-SSP-XML-Tag-Beg

  if #DepositNetPay <> 0

    if #Depositcheckings <> 0
       let $xmltag = 'net_distrib'
       do Process-SSP-XML-Tag-Beg

       let $xmltag     = 'py_type'
       do Format-Number(#Advice#, $out, '099999999999999')
       let $xmlcontent = 'Advice #' || $out
       do  Process-SSP-XML-Tag-Content

       let $xmltag     = 'acct_type'
       let $xmlcontent = $adv_checkings
       do  Process-SSP-XML-Tag-Content

       let $xmltag     = 'acct_num'
       let $xmlcontent = $deposit_acct_nbr_chckngs
       do  Process-SSP-XML-Tag-Content

       let $xmltag     = 'net_amt'
       do Format-Number(#Depositcheckings, $out, '99,999,999.99')
       let $xmlcontent = ltrim($out,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'net_distrib'
       do Process-SSP-XML-Tag-End
    end-if

    if #Depositsavings <> 0
       let $xmltag = 'net_distrib'
       do Process-SSP-XML-Tag-Beg

       let $xmltag     = 'py_type'
       do Format-Number(#Advice#, $out, '099999999999999')
       let $xmlcontent = 'Advice #' || $out
       do  Process-SSP-XML-Tag-Content

       let $xmltag     = 'acct_type'
       let $xmlcontent = $adv_savings
       do  Process-SSP-XML-Tag-Content

       let $xmltag     = 'acct_num'
       let $xmlcontent = $deposit_acct_nbr_savings
       do  Process-SSP-XML-Tag-Content

       let $xmltag     = 'net_amt'
       do Format-Number(#Depositsavings, $out, '99,999,999.99')
       let $xmlcontent = ltrim($out,' ')
       do  Process-SSP-XML-Tag-Content

       let $xmltag = 'net_distrib'
       do Process-SSP-XML-Tag-End
    end-if

  end-if

  if #CheckNetPay <> 0
    let $xmltag = 'net_distrib'
    do Process-SSP-XML-Tag-Beg

    let $xmltag     = 'py_type'
    do Format-Number(&B.PAYCHECK_NBR, $out, '099999999999999')
    let $xmlcontent = 'Check #' || $out
    do  Process-SSP-XML-Tag-Content

    let $xmltag     = 'acct_type'
    let $xmlcontent = $chk_issued
    do  Process-SSP-XML-Tag-Content

    let $xmltag     = 'acct_num'
    let $xmlcontent = ''
    do  Process-SSP-XML-Tag-Content

    let $xmltag     = 'net_amt'
    do Format-Number(#CheckNetPay, $out, '99,999,999.99')
    let $xmlcontent = ltrim($out,' ')
    do  Process-SSP-XML-Tag-Content

    let $xmltag = 'net_distrib'
    do Process-SSP-XML-Tag-End
  end-if

  let $xmltag = 'NET_PAY_DISTRIBUTIONS'
  do Process-SSP-XML-Tag-End

  let $xmltag     = 'net_amt_total'
  do Format-Number(&B.Net_Pay, $out, '999,999,999.99')
  let $xmlcontent = ltrim($out,' ')
  do  Process-SSP-XML-Tag-Content

  if &B.PAYCHECK_OPTION <> 'M'
     let $xmltag     = 'pay_slip_msg'
     let $xmlcontent = $CheckMessage
     do  Process-SSP-XML-Tag-Content
  end-if
end-procedure
!  ** END MODIFICATION 10/25/2010 gfurash HCM-1315 *****************************
