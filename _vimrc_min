"============================================================================
"title          :_vimrc
"description    :vim configuration file
"author         :Gary Furash
"date           :20140722
"version        :1
"usage          :place this (or alias this) in your home directory as .vimrc
"notes          :
"bash_version   :4.1.11(2)-release
"============================================================================

" ------------------------------------------------------------------------
" Startup
" ------------------------------------------------------------------------
let s:running_windows = has("win16") || has("in32") || has("win74")
let s:colorful_term = (&term =~ "xterm") || (&term =~ "screen")

" ------------------------------------------------------------------------
" General
" ------------------------------------------------------------------------
set nocompatible                                              " explicitly get out of vi-compatible mode
set noexrc                                                    " don't use local version of .(g)vimrc, .exrc
set fenc=utf-8                                                " UTF-8
let g:skip_loading_mswin=1                                    " Just in case :)
set fileformat=unix                                           " use UNIX file formats
set timeoutlen=300                                            " super low delay (works for me)
set formatoptions+=n                                          " Recognize numbered lists
set formatlistpat=^\\s*\\(\\d\\\|[-*]\\)\\+[\\]:.)}\\t\ ]\\s* " and bullets, too
set viminfo+=!                                                " Store upper-case registers in viminfo
set cpoptions=aABceFsmq
"             |||||||||
"             ||||||||+-- When joining lines, leave the cursor between joined lines
"             |||||||+-- When a new match is created (showmatch) pause for .5
"             ||||||+-- Set buffer options when entering the buffer
"             |||||+-- :write command updates current file name automatically add <CR> to the last line when using :@r
"             |||+-- Searching continues at the end of the match at the cursor position
"             ||+-- A backslash has no special meaning in mappings
"             |+-- :write updates alternative file name
"             +-- :read updates alternative file name
filetype plugin indent on      " load filetype plugins/indent settings
set autochdir                                                      " always switch to the current file directory
set backspace=indent,eol,start                                     " make backspace a more flexible
set nowb nobackup noswapfile                                       " turn off backups
set clipboard+=unnamed                                             " share windows clipboard
set fileformats=unix,dos,mac                                       " support all three, in this order
set hidden                                                         " you can change buffers without saving
set iskeyword+=_,$,@,%,#                                           " none of these are word dividers
set noerrorbells                                                   " don't make noise
set showtabline=0                                                  " never show tabs
set wildmenu                                                       " turn on command line completion wild style
set completeopt=menuone                                            " always show menu for completions
set formatoptions=rq                                               " Automatically insert comment leader on return, and let gq format comments
set ignorecase hlsearch                                  			" search: ignore case, higlight matches
if maparg('<C-L>', 'n') ==# ''
  nnoremap <silent> <C-L> :nohlsearch<CR><C-L>
endif
set nolist                                                         " do not show hidden characters
set nowrap shiftround shiftwidth=4                                 " configure (no) line wrapping
set smartindent                                                    " perform c-like indenting
set tabstop=4 nosmarttab noexpandtab                               " use real tab characters
set wildignore=*.dll,*.o,*.obj,*.bak,*.exe,*.pyc,*.jpg,*.gif,*.png " ignore these list file extensions
set wildmode=list:longest                                          " turn on wild mode huge list
if &encoding ==# 'latin1' && has('gui_running')
  set encoding=utf-8
endif

" ------------------------------------------------------------------------------
" Vim DIFF
" ------------------------------------------------------------------------------
set diffopt+=vertical " diff files side by side
set diffopt+=icase    " diff ignores case
set diffopt+=iwhite   " diff ignores whitespace

" ------------------------------------------------------------------------------
" Vim UI
" ------------------------------------------------------------------------------
set cursorline
set display+=lastline    " show last line of text
set laststatus=2         " always show the status line
set lazyredraw           " do not redraw while running macros
set linespace=0          " don't insert any extra pixel lines betweens rows
set matchtime=5          " how many tenths of a second to blink matching brackets for
set mouse=a              " use mouse everywhere
set mousehide            " hide the mouse cursor when typing
set nostartofline        " leave my cursor where it was
set novisualbell         " don't blink
set number numberwidth=5 " turn on line numbers
set report=0             " tell us when anything is changed via :...
set ruler                " Always show current positions along the bottom
set scrolloff=10         " Keep 10 lines (top/bottom) for scope
set shortmess=aOstT      " shortens messages to avoid 'press a key' prompt
set showcmd              " show the command being typed
set showmatch            " show matching brackets
set showtabline=0
set sidescrolloff=10     " Keep 5 lines at the size
if has("gui_running")
	set guifont=Consolas:h10:cANSI
endif

" ------------------------------------------------------------------------------
" Configure VIM Status Line
" ------------------------------------------------------------------------------
set statusline=\ "
set statusline+=%1*%-25.80f%*\ 						"filename min 25, max 80 (right justified)
set statusline+=%2*
set statusline+=%h 									"help file flag
set statusline+=%r 									"read only flag
set statusline+=%m 									"modified flag
set statusline+=%w 									"preview flag
set statusline+=%*\ "
set statusline+=%3*[
set statusline+=%{strlen(&ft)?&ft:'none'} 			"filetype
set statusline+=]%*\ "
set statusline+=[%{&ff}]\ "							"file format
"set statusline+=%4*%{fugitive#statusline()}%*\ " 	"git status
set statusline+=%= 									" right align
set statusline+=%8*%-14.(%l,%c%V%)\ %<%P%* 			"offset

" ------------------------------------------------------------------------------
" Mappings
" ------------------------------------------------------------------------------
inoremap jj <esc>                        " type j...j to leave insert mode

let mapleader = ','                      " use , instead of \ for escaping commands
let maplocalleader = ','                 " use , instead of \ for escaping commands

" Map <Space> to / (search) and Ctrl-<Space> to ? (backwards search)
map <space> /
map <c-space> ?

" Disable highlight when <leader><cr> is pressed
map <silent> <leader><cr> :noh<cr>

"move between splits/windows with control-[movement]
nmap <silent> <c-k> :wincmd k<CR>
nmap <silent> <c-j> :wincmd j<CR>
nmap <silent> <c-h> :wincmd h<CR>
nmap <silent> <c-l> :wincmd l<CR>

" Close the current buffer
map <leader>bd :Bclose<cr>

" Close all the buffers
map <leader>ba :1,1000 bd!<cr>

" Switch CWD to the directory of the open buffer
map <leader>cd :cd %:p:h<cr>:pwd<cr>

" Specify the behavior when switching between buffers
try
  set switchbuf=useopen,usetab,newtab
  set stal=2
catch
endtry

" switch between buffers with tab w/ Ctrl-N/P
nnoremap <C-n> :bnext<CR>
nnoremap <C-p> :bprevious<CR>

" Replace word under cursor globally
nnoremap <Leader>a :%s/\<<C-r><C-w>\>/
" Replace word under cursor in line
nnoremap <Leader>s :s/\<<C-r><C-w>\>/
