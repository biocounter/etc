#============================================================================
#title          :.profile
#description    :executed by the command interpreter for login shells
#author         :Gary Furash
#date           :20140722
#version        :1
#usage          :place in your home directory
#notes          :use 				for
#				 /etc/bashrc		system-wide environment variabls and functions
#				 ~/.bash_profile  	personal environment variables and startup programs should go into
# 				 ~/.bashrc  		personal aliases and functions
# 		 this file is not read by bash if ~/.bash_profile or ~/.bash_login exists
#bash_version   :4.1.11(2)-release
#============================================================================

#----------------------------------------------------------------------------
# Setup some default paths. Note that this order will allow user installed
# software to override 'system' software.
# Modifying these default path settings can be done in different ways.
# To learn more about startup files, refer to your shell's man page.
#----------------------------------------------------------------------------
PATH="/usr/local/bin:/usr/bin:${PATH}"
MANPATH="/usr/local/man:/usr/share/man:/usr/man:${MANPATH}"
INFOPATH="/usr/local/info:/usr/share/info:/usr/info:${INFOPATH}"

# Set the user id
if [[ -z "$USER" ]]; then
	USER="$(id -un)"
fi

# setup command history file
export HISTSIZE=1000
export HISTIGNORE="&:[bf]g:exit"

#----------------------------------------------------------------------------
# TMP and TEMP as defined in the Windows environment must be kept
# for windows apps, even if started from cygwin. However, leaving
# them set to the default Windows temporary directory or unset
# can have unexpected consequences for cygwin apps, so we define
# our own to match GNU/Linux behaviour.
#----------------------------------------------------------------------------
if [[ ${BASH_VERSINFO[5]} == *cygwin* ]]; then
	ORIGINAL_TMP=$TMP
	ORIGINAL_TEMP=$TEMP
	unset TMP TEMP
	tmp=$(cygpath -w "$ORIGINAL_TMP" 2> /dev/null)
	temp=$(cygpath -w "$ORIGINAL_TEMP" 2> /dev/null)
	TMP="/tmp"
	TEMP="/tmp"
fi

# Default to removing the write permission for group and other
#  (files normally created with mode 777 become 755; files created with
#  mode 666 become 644)
umask 022

# Make sure we start in home unless invoked by CHERE
if [ ! -z "${CHERE_INVOKING}" ]; then
  unset CHERE_INVOKING
else
  cd "${HOME}" || echo "WARNING: Failed attempt to cd into ${HOME}!"
fi

# Shell dependent settings
profile_d () {
  for file in $(export LC_COLLATE=C; echo /etc/profile.d/*.$1); do
    [ -e "${file}" ] && . "${file}"
  done
  unset file
}

if [[ -z "$HOSTNAME" ]]; then
	if [ ! "x${BASH_VERSION}" = "x"  ]; then
	  HOSTNAME="$(/usr/bin/hostname)"
	  profile_d sh
	  [ -f "/etc/bash.bashrc" ] && . "/etc/bash.bashrc"
	elif [ ! "x${KSH_VERSION}" = "x" ]; then
	  typeset -l HOSTNAME="$(/usr/bin/hostname)"
	  profile_d sh
	  PS1=$(print '\033]0;${PWD}\n\033[32m${USER}@${HOSTNAME} \033[33m${PWD/${HOME}/~}\033[0m\n$ ')
	elif [ ! "x${ZSH_VERSION}" = "x" ]; then
	  HOSTNAME="$(/usr/bin/hostname)"
	  profile_d zsh
	  PS1='(%n@%m)[%h] %~ %% '
	elif [ ! "x${POSH_VERSION}" = "x" ]; then
	  HOSTNAME="$(/usr/bin/hostname)"
	  PS1="$ "
	else
	  HOSTNAME="$(/usr/bin/hostname)"
	  profile_d sh
	  PS1="$ "
	fi
fi

export PATH MANPATH INFOPATH USER TMP TEMP PRINTER HOSTNAME PS1 SHELL tmp temp


#----------------------------------------------------------------------------
# Check to see if mkpasswd/mkgroup needs to be run try and cut down the emails
#   about this on the lists!
#
# The following are the conditions under which the group name special cases
#   will appear (where uid and gid are the effective user and group ids
#   for the current user, and pgsid is the primary group associated with the
#   SID for the current user):
#       mkpasswd:
#         gid is not in /etc/group
#         uid is not in /etc/passwd
#       passwd/group_GID_clash(<gid>/<pgsid>):
#         gid is not in /etc/group
#         uid is in /etc/passwd
#         pgsid is in /etc/group (and does not match gid)
#       mkgroup:
#         gid is not in /etc/group
#         uid is in /etc/passwd
#         pgsid is not in /etc/group
#
# If this message keeps appearing and you are sure it's a mistake (ie, don't
#   email about it!), comment out the test below.
#----------------------------------------------------------------------------
case "$(id -ng)" in
mkpasswd )
  echo "Your group is currently \"mkpasswd\".  This indicates that your"
  echo "gid is not in /etc/group and your uid is not in /etc/passwd."
  echo
  echo "The /etc/passwd (and possibly /etc/group) files should be rebuilt."
  echo "See the man pages for mkpasswd and mkgroup then, for example, run"
  echo
  echo "mkpasswd -l [-d] > /etc/passwd"
  echo "mkgroup  -l [-d] > /etc/group"
  echo
  echo "Note that the -d switch is necessary for domain users."
  ;;
passwd/group_GID_clash* )
  echo "Your group is currently \"passwd/group_GID_clash(gid/pgsid)\".  This"
  echo "indicates that your gid is not in /etc/group, but the pgsid (primary "
  echo "group associated with your SID) is in /etc/group."
  echo
  echo "The /etc/passwd (and possibly /etc/group) files should be rebuilt."
  echo "See the man pages for mkpasswd and mkgroup then, for example, run"
  echo
  echo "mkpasswd -l [-d] > /etc/passwd"
  echo "mkgroup  -l [-d] > /etc/group"
  echo
  echo "Note that the -d switch is necessary for domain users."
  ;;
mkgroup )
  echo "Your group is currently \"mkgroup\".  This indicates that neither"
  echo "your gid nor your pgsid (primary group associated with your SID)"
  echo "is in /etc/group."
  echo
  echo "The /etc/group (and possibly /etc/passwd) files should be rebuilt."
  echo "See the man pages for mkpasswd and mkgroup then, for example, run"
  echo
  echo "mkpasswd -l [-d] > /etc/passwd"
  echo "mkgroup  -l [-d] > /etc/group"
  echo
  echo "Note that the -d switch is necessary for domain users."
  ;;
esac

# Cygwin Vim
RANPROFILE="TRUE"
